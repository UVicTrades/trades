services:

  frontend:
    build:
      context: apps/frontend
    restart: unless-stopped
    depends_on: []
    volumes: [ ./apps/frontend/src:/app/src ]
    ports: [ 8100:8100 ]
    environment:
      PORT: 8100
    networks:
      - trade_network

  backend:
    build:
      context: apps/backend
    container_name: trade_backend
    restart: unless-stopped
    depends_on: []
    ports: [ 8200:8200 ]
    environment:
      PORT: 8200
      DB_URL: jdbc:postgresql://database:5432/trade
      DB_USERNAME: trade
      DB_PASSWORD: trade
    networks:
      - trade_network  # Assign backend to the network

  database:
    image: timescale/timescaledb-ha:pg17
    container_name: trade_database
    restart: unless-stopped
    depends_on: []
    volumes:
      - ./apps/data/database/postgres_data:/var/lib/postgresql/data
    ports: [5432:5432]
    environment:
      - POSTGRES_USER=trade
      - POSTGRES_PASSWORD=trade
      - POSTGRES_DB=trade
    networks:
      - trade_network

networks:
  trade_network:
    driver: bridge