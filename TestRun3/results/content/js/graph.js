/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14325.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 5.0], [12.1, 5.0], [12.2, 5.0], [12.3, 5.0], [12.4, 5.0], [12.5, 5.0], [12.6, 5.0], [12.7, 5.0], [12.8, 5.0], [12.9, 5.0], [13.0, 5.0], [13.1, 5.0], [13.2, 5.0], [13.3, 5.0], [13.4, 5.0], [13.5, 5.0], [13.6, 5.0], [13.7, 5.0], [13.8, 5.0], [13.9, 5.0], [14.0, 5.0], [14.1, 5.0], [14.2, 5.0], [14.3, 5.0], [14.4, 5.0], [14.5, 5.0], [14.6, 6.0], [14.7, 6.0], [14.8, 6.0], [14.9, 6.0], [15.0, 6.0], [15.1, 6.0], [15.2, 6.0], [15.3, 6.0], [15.4, 6.0], [15.5, 6.0], [15.6, 6.0], [15.7, 6.0], [15.8, 6.0], [15.9, 6.0], [16.0, 6.0], [16.1, 6.0], [16.2, 6.0], [16.3, 6.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 8.0], [17.2, 8.0], [17.3, 8.0], [17.4, 8.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 12.0], [18.9, 12.0], [19.0, 12.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 16.0], [20.2, 16.0], [20.3, 16.0], [20.4, 16.0], [20.5, 16.0], [20.6, 17.0], [20.7, 17.0], [20.8, 17.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 20.0], [21.8, 20.0], [21.9, 22.0], [22.0, 22.0], [22.1, 22.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 23.0], [22.7, 23.0], [22.8, 23.0], [22.9, 24.0], [23.0, 24.0], [23.1, 25.0], [23.2, 25.0], [23.3, 26.0], [23.4, 26.0], [23.5, 26.0], [23.6, 28.0], [23.7, 28.0], [23.8, 29.0], [23.9, 30.0], [24.0, 30.0], [24.1, 31.0], [24.2, 32.0], [24.3, 32.0], [24.4, 32.0], [24.5, 33.0], [24.6, 34.0], [24.7, 35.0], [24.8, 37.0], [24.9, 37.0], [25.0, 40.0], [25.1, 55.0], [25.2, 55.0], [25.3, 59.0], [25.4, 80.0], [25.5, 80.0], [25.6, 133.0], [25.7, 203.0], [25.8, 352.0], [25.9, 513.0], [26.0, 545.0], [26.1, 644.0], [26.2, 875.0], [26.3, 931.0], [26.4, 943.0], [26.5, 964.0], [26.6, 1007.0], [26.7, 1020.0], [26.8, 1038.0], [26.9, 1039.0], [27.0, 1043.0], [27.1, 1068.0], [27.2, 1082.0], [27.3, 1089.0], [27.4, 1108.0], [27.5, 1115.0], [27.6, 1117.0], [27.7, 1123.0], [27.8, 1141.0], [27.9, 1163.0], [28.0, 1203.0], [28.1, 1212.0], [28.2, 1214.0], [28.3, 1218.0], [28.4, 1236.0], [28.5, 1243.0], [28.6, 1255.0], [28.7, 1258.0], [28.8, 1278.0], [28.9, 1278.0], [29.0, 1288.0], [29.1, 1291.0], [29.2, 1292.0], [29.3, 1293.0], [29.4, 1293.0], [29.5, 1312.0], [29.6, 1314.0], [29.7, 1344.0], [29.8, 1346.0], [29.9, 1347.0], [30.0, 1363.0], [30.1, 1367.0], [30.2, 1374.0], [30.3, 1408.0], [30.4, 1412.0], [30.5, 1412.0], [30.6, 1418.0], [30.7, 1428.0], [30.8, 1432.0], [30.9, 1450.0], [31.0, 1533.0], [31.1, 1537.0], [31.2, 1563.0], [31.3, 1564.0], [31.4, 1583.0], [31.5, 1584.0], [31.6, 1589.0], [31.7, 1591.0], [31.8, 1595.0], [31.9, 1595.0], [32.0, 1596.0], [32.1, 1599.0], [32.2, 1611.0], [32.3, 1613.0], [32.4, 1614.0], [32.5, 1617.0], [32.6, 1627.0], [32.7, 1627.0], [32.8, 1628.0], [32.9, 1633.0], [33.0, 1636.0], [33.1, 1639.0], [33.2, 1649.0], [33.3, 1653.0], [33.4, 1666.0], [33.5, 1681.0], [33.6, 1686.0], [33.7, 1696.0], [33.8, 1703.0], [33.9, 1714.0], [34.0, 1725.0], [34.1, 1731.0], [34.2, 1741.0], [34.3, 1744.0], [34.4, 1750.0], [34.5, 1768.0], [34.6, 1770.0], [34.7, 1778.0], [34.8, 1785.0], [34.9, 1798.0], [35.0, 1799.0], [35.1, 1807.0], [35.2, 1807.0], [35.3, 1810.0], [35.4, 1816.0], [35.5, 1818.0], [35.6, 1823.0], [35.7, 1826.0], [35.8, 1827.0], [35.9, 1837.0], [36.0, 1850.0], [36.1, 1851.0], [36.2, 1854.0], [36.3, 1877.0], [36.4, 1880.0], [36.5, 1897.0], [36.6, 1904.0], [36.7, 1918.0], [36.8, 1923.0], [36.9, 1924.0], [37.0, 1930.0], [37.1, 1941.0], [37.2, 1955.0], [37.3, 1958.0], [37.4, 1971.0], [37.5, 1971.0], [37.6, 1972.0], [37.7, 2001.0], [37.8, 2002.0], [37.9, 2003.0], [38.0, 2010.0], [38.1, 2010.0], [38.2, 2015.0], [38.3, 2024.0], [38.4, 2026.0], [38.5, 2029.0], [38.6, 2045.0], [38.7, 2049.0], [38.8, 2059.0], [38.9, 2061.0], [39.0, 2066.0], [39.1, 2076.0], [39.2, 2106.0], [39.3, 2112.0], [39.4, 2136.0], [39.5, 2155.0], [39.6, 2160.0], [39.7, 2164.0], [39.8, 2166.0], [39.9, 2178.0], [40.0, 2179.0], [40.1, 2184.0], [40.2, 2211.0], [40.3, 2227.0], [40.4, 2244.0], [40.5, 2246.0], [40.6, 2254.0], [40.7, 2258.0], [40.8, 2263.0], [40.9, 2264.0], [41.0, 2278.0], [41.1, 2280.0], [41.2, 2288.0], [41.3, 2294.0], [41.4, 2296.0], [41.5, 2305.0], [41.6, 2308.0], [41.7, 2309.0], [41.8, 2326.0], [41.9, 2334.0], [42.0, 2362.0], [42.1, 2367.0], [42.2, 2370.0], [42.3, 2379.0], [42.4, 2383.0], [42.5, 2386.0], [42.6, 2398.0], [42.7, 2405.0], [42.8, 2406.0], [42.9, 2407.0], [43.0, 2410.0], [43.1, 2411.0], [43.2, 2411.0], [43.3, 2415.0], [43.4, 2421.0], [43.5, 2422.0], [43.6, 2428.0], [43.7, 2436.0], [43.8, 2439.0], [43.9, 2453.0], [44.0, 2455.0], [44.1, 2460.0], [44.2, 2469.0], [44.3, 2480.0], [44.4, 2481.0], [44.5, 2492.0], [44.6, 2493.0], [44.7, 2501.0], [44.8, 2504.0], [44.9, 2513.0], [45.0, 2526.0], [45.1, 2528.0], [45.2, 2542.0], [45.3, 2552.0], [45.4, 2589.0], [45.5, 2618.0], [45.6, 2650.0], [45.7, 2657.0], [45.8, 2663.0], [45.9, 2664.0], [46.0, 2673.0], [46.1, 2675.0], [46.2, 2682.0], [46.3, 2690.0], [46.4, 2703.0], [46.5, 2704.0], [46.6, 2711.0], [46.7, 2712.0], [46.8, 2727.0], [46.9, 2742.0], [47.0, 2752.0], [47.1, 2754.0], [47.2, 2760.0], [47.3, 2761.0], [47.4, 2785.0], [47.5, 2794.0], [47.6, 2795.0], [47.7, 2808.0], [47.8, 2830.0], [47.9, 2835.0], [48.0, 2839.0], [48.1, 2847.0], [48.2, 2854.0], [48.3, 2854.0], [48.4, 2855.0], [48.5, 2885.0], [48.6, 2903.0], [48.7, 2906.0], [48.8, 2938.0], [48.9, 2938.0], [49.0, 2964.0], [49.1, 2982.0], [49.2, 2987.0], [49.3, 2989.0], [49.4, 3074.0], [49.5, 3077.0], [49.6, 3079.0], [49.7, 3080.0], [49.8, 3091.0], [49.9, 3101.0], [50.0, 3113.0], [50.1, 3115.0], [50.2, 3141.0], [50.3, 3152.0], [50.4, 3156.0], [50.5, 3156.0], [50.6, 3157.0], [50.7, 3167.0], [50.8, 3190.0], [50.9, 3195.0], [51.0, 3215.0], [51.1, 3217.0], [51.2, 3220.0], [51.3, 3233.0], [51.4, 3237.0], [51.5, 3239.0], [51.6, 3260.0], [51.7, 3271.0], [51.8, 3276.0], [51.9, 3284.0], [52.0, 3288.0], [52.1, 3301.0], [52.2, 3304.0], [52.3, 3307.0], [52.4, 3310.0], [52.5, 3311.0], [52.6, 3317.0], [52.7, 3319.0], [52.8, 3344.0], [52.9, 3356.0], [53.0, 3359.0], [53.1, 3361.0], [53.2, 3364.0], [53.3, 3367.0], [53.4, 3395.0], [53.5, 3404.0], [53.6, 3414.0], [53.7, 3425.0], [53.8, 3425.0], [53.9, 3425.0], [54.0, 3437.0], [54.1, 3440.0], [54.2, 3440.0], [54.3, 3440.0], [54.4, 3441.0], [54.5, 3441.0], [54.6, 3444.0], [54.7, 3445.0], [54.8, 3448.0], [54.9, 3450.0], [55.0, 3459.0], [55.1, 3464.0], [55.2, 3468.0], [55.3, 3469.0], [55.4, 3506.0], [55.5, 3520.0], [55.6, 3527.0], [55.7, 3567.0], [55.8, 3584.0], [55.9, 3591.0], [56.0, 3599.0], [56.1, 3616.0], [56.2, 3631.0], [56.3, 3642.0], [56.4, 3643.0], [56.5, 3665.0], [56.6, 3692.0], [56.7, 3697.0], [56.8, 3702.0], [56.9, 3728.0], [57.0, 3730.0], [57.1, 3735.0], [57.2, 3743.0], [57.3, 3760.0], [57.4, 3786.0], [57.5, 3786.0], [57.6, 3796.0], [57.7, 3807.0], [57.8, 3812.0], [57.9, 3816.0], [58.0, 3817.0], [58.1, 3819.0], [58.2, 3825.0], [58.3, 3828.0], [58.4, 3838.0], [58.5, 3845.0], [58.6, 3860.0], [58.7, 3874.0], [58.8, 3880.0], [58.9, 3926.0], [59.0, 3936.0], [59.1, 3981.0], [59.2, 4003.0], [59.3, 4024.0], [59.4, 4030.0], [59.5, 4035.0], [59.6, 4067.0], [59.7, 4069.0], [59.8, 4082.0], [59.9, 4098.0], [60.0, 4116.0], [60.1, 4119.0], [60.2, 4155.0], [60.3, 4164.0], [60.4, 4167.0], [60.5, 4170.0], [60.6, 4181.0], [60.7, 4188.0], [60.8, 4199.0], [60.9, 4213.0], [61.0, 4214.0], [61.1, 4224.0], [61.2, 4231.0], [61.3, 4233.0], [61.4, 4238.0], [61.5, 4251.0], [61.6, 4254.0], [61.7, 4264.0], [61.8, 4267.0], [61.9, 4268.0], [62.0, 4295.0], [62.1, 4298.0], [62.2, 4305.0], [62.3, 4309.0], [62.4, 4321.0], [62.5, 4321.0], [62.6, 4326.0], [62.7, 4329.0], [62.8, 4330.0], [62.9, 4330.0], [63.0, 4333.0], [63.1, 4334.0], [63.2, 4339.0], [63.3, 4340.0], [63.4, 4341.0], [63.5, 4341.0], [63.6, 4348.0], [63.7, 4355.0], [63.8, 4356.0], [63.9, 4358.0], [64.0, 4358.0], [64.1, 4360.0], [64.2, 4361.0], [64.3, 4362.0], [64.4, 4372.0], [64.5, 4374.0], [64.6, 4375.0], [64.7, 4380.0], [64.8, 4382.0], [64.9, 4384.0], [65.0, 4388.0], [65.1, 4389.0], [65.2, 4390.0], [65.3, 4391.0], [65.4, 4392.0], [65.5, 4394.0], [65.6, 4398.0], [65.7, 4400.0], [65.8, 4404.0], [65.9, 4414.0], [66.0, 4415.0], [66.1, 4419.0], [66.2, 4424.0], [66.3, 4429.0], [66.4, 4434.0], [66.5, 4436.0], [66.6, 4446.0], [66.7, 4448.0], [66.8, 4455.0], [66.9, 4476.0], [67.0, 4485.0], [67.1, 4494.0], [67.2, 4498.0], [67.3, 4519.0], [67.4, 4540.0], [67.5, 4551.0], [67.6, 4557.0], [67.7, 4564.0], [67.8, 4565.0], [67.9, 4569.0], [68.0, 4570.0], [68.1, 4570.0], [68.2, 4573.0], [68.3, 4579.0], [68.4, 4582.0], [68.5, 4583.0], [68.6, 4585.0], [68.7, 4586.0], [68.8, 4592.0], [68.9, 4594.0], [69.0, 4600.0], [69.1, 4602.0], [69.2, 4603.0], [69.3, 4607.0], [69.4, 4609.0], [69.5, 4615.0], [69.6, 4620.0], [69.7, 4628.0], [69.8, 4630.0], [69.9, 4635.0], [70.0, 4639.0], [70.1, 4643.0], [70.2, 4645.0], [70.3, 4666.0], [70.4, 4679.0], [70.5, 4686.0], [70.6, 4695.0], [70.7, 4697.0], [70.8, 4723.0], [70.9, 4727.0], [71.0, 4727.0], [71.1, 4730.0], [71.2, 4734.0], [71.3, 4738.0], [71.4, 4741.0], [71.5, 4743.0], [71.6, 4745.0], [71.7, 4746.0], [71.8, 4749.0], [71.9, 4751.0], [72.0, 4758.0], [72.1, 4758.0], [72.2, 4762.0], [72.3, 4765.0], [72.4, 4767.0], [72.5, 4768.0], [72.6, 4771.0], [72.7, 4774.0], [72.8, 4777.0], [72.9, 4778.0], [73.0, 4785.0], [73.1, 4790.0], [73.2, 4791.0], [73.3, 4792.0], [73.4, 4795.0], [73.5, 4804.0], [73.6, 4805.0], [73.7, 4827.0], [73.8, 4831.0], [73.9, 4836.0], [74.0, 4846.0], [74.1, 4850.0], [74.2, 4850.0], [74.3, 4869.0], [74.4, 4870.0], [74.5, 4886.0], [74.6, 4890.0], [74.7, 4890.0], [74.8, 4892.0], [74.9, 4895.0], [75.0, 4902.0], [75.1, 4906.0], [75.2, 4919.0], [75.3, 4924.0], [75.4, 4925.0], [75.5, 4930.0], [75.6, 4933.0], [75.7, 4943.0], [75.8, 4945.0], [75.9, 4951.0], [76.0, 4954.0], [76.1, 4956.0], [76.2, 4959.0], [76.3, 4964.0], [76.4, 4974.0], [76.5, 4976.0], [76.6, 4985.0], [76.7, 4992.0], [76.8, 4993.0], [76.9, 5002.0], [77.0, 5004.0], [77.1, 5015.0], [77.2, 5024.0], [77.3, 5028.0], [77.4, 5037.0], [77.5, 5038.0], [77.6, 5042.0], [77.7, 5043.0], [77.8, 5058.0], [77.9, 5061.0], [78.0, 5063.0], [78.1, 5064.0], [78.2, 5072.0], [78.3, 5082.0], [78.4, 5096.0], [78.5, 5102.0], [78.6, 5116.0], [78.7, 5117.0], [78.8, 5128.0], [78.9, 5128.0], [79.0, 5131.0], [79.1, 5142.0], [79.2, 5156.0], [79.3, 5156.0], [79.4, 5161.0], [79.5, 5162.0], [79.6, 5170.0], [79.7, 5175.0], [79.8, 5176.0], [79.9, 5196.0], [80.0, 5200.0], [80.1, 5211.0], [80.2, 5219.0], [80.3, 5222.0], [80.4, 5222.0], [80.5, 5227.0], [80.6, 5247.0], [80.7, 5279.0], [80.8, 5280.0], [80.9, 5290.0], [81.0, 5292.0], [81.1, 5295.0], [81.2, 5307.0], [81.3, 5328.0], [81.4, 5334.0], [81.5, 5340.0], [81.6, 5344.0], [81.7, 5351.0], [81.8, 5364.0], [81.9, 5379.0], [82.0, 5380.0], [82.1, 5420.0], [82.2, 5429.0], [82.3, 5433.0], [82.4, 5434.0], [82.5, 5441.0], [82.6, 5443.0], [82.7, 5463.0], [82.8, 5464.0], [82.9, 5475.0], [83.0, 5478.0], [83.1, 5479.0], [83.2, 5480.0], [83.3, 5481.0], [83.4, 5484.0], [83.5, 5484.0], [83.6, 5485.0], [83.7, 5486.0], [83.8, 5487.0], [83.9, 5489.0], [84.0, 5490.0], [84.1, 5495.0], [84.2, 5504.0], [84.3, 5511.0], [84.4, 5515.0], [84.5, 5522.0], [84.6, 5538.0], [84.7, 5542.0], [84.8, 5556.0], [84.9, 5559.0], [85.0, 5562.0], [85.1, 5567.0], [85.2, 5567.0], [85.3, 5569.0], [85.4, 5596.0], [85.5, 5601.0], [85.6, 5602.0], [85.7, 5606.0], [85.8, 5612.0], [85.9, 5629.0], [86.0, 5634.0], [86.1, 5640.0], [86.2, 5651.0], [86.3, 5654.0], [86.4, 5678.0], [86.5, 5683.0], [86.6, 5686.0], [86.7, 5687.0], [86.8, 5687.0], [86.9, 5694.0], [87.0, 5705.0], [87.1, 5706.0], [87.2, 5718.0], [87.3, 5719.0], [87.4, 5724.0], [87.5, 5729.0], [87.6, 5744.0], [87.7, 5750.0], [87.8, 5770.0], [87.9, 5790.0], [88.0, 5821.0], [88.1, 5822.0], [88.2, 5837.0], [88.3, 5851.0], [88.4, 5860.0], [88.5, 5861.0], [88.6, 5875.0], [88.7, 5876.0], [88.8, 5882.0], [88.9, 5894.0], [89.0, 5896.0], [89.1, 5896.0], [89.2, 5900.0], [89.3, 5902.0], [89.4, 5908.0], [89.5, 5913.0], [89.6, 5920.0], [89.7, 5921.0], [89.8, 5927.0], [89.9, 5939.0], [90.0, 5940.0], [90.1, 5940.0], [90.2, 5942.0], [90.3, 5943.0], [90.4, 5944.0], [90.5, 5944.0], [90.6, 5949.0], [90.7, 5949.0], [90.8, 5950.0], [90.9, 5954.0], [91.0, 5957.0], [91.1, 5961.0], [91.2, 5962.0], [91.3, 5972.0], [91.4, 5974.0], [91.5, 5979.0], [91.6, 5981.0], [91.7, 5995.0], [91.8, 5997.0], [91.9, 6000.0], [92.0, 6006.0], [92.1, 6015.0], [92.2, 6027.0], [92.3, 6032.0], [92.4, 6032.0], [92.5, 6033.0], [92.6, 6038.0], [92.7, 6067.0], [92.8, 6084.0], [92.9, 6084.0], [93.0, 6085.0], [93.1, 6090.0], [93.2, 6106.0], [93.3, 6111.0], [93.4, 6121.0], [93.5, 6140.0], [93.6, 6143.0], [93.7, 6153.0], [93.8, 6156.0], [93.9, 6157.0], [94.0, 6158.0], [94.1, 6160.0], [94.2, 6161.0], [94.3, 6161.0], [94.4, 6169.0], [94.5, 6181.0], [94.6, 6183.0], [94.7, 6195.0], [94.8, 6196.0], [94.9, 6216.0], [95.0, 6221.0], [95.1, 6224.0], [95.2, 6238.0], [95.3, 6238.0], [95.4, 6244.0], [95.5, 6266.0], [95.6, 6291.0], [95.7, 6295.0], [95.8, 6299.0], [95.9, 6302.0], [96.0, 6306.0], [96.1, 6308.0], [96.2, 6320.0], [96.3, 6325.0], [96.4, 6330.0], [96.5, 6330.0], [96.6, 6332.0], [96.7, 6351.0], [96.8, 6372.0], [96.9, 6394.0], [97.0, 6396.0], [97.1, 6427.0], [97.2, 6444.0], [97.3, 6446.0], [97.4, 6467.0], [97.5, 6481.0], [97.6, 6500.0], [97.7, 6501.0], [97.8, 6508.0], [97.9, 6534.0], [98.0, 6546.0], [98.1, 6565.0], [98.2, 6565.0], [98.3, 6568.0], [98.4, 6588.0], [98.5, 6595.0], [98.6, 6600.0], [98.7, 6611.0], [98.8, 6616.0], [98.9, 6620.0], [99.0, 6633.0], [99.1, 6637.0], [99.2, 6834.0], [99.3, 6938.0], [99.4, 7293.0], [99.5, 7363.0], [99.6, 8258.0], [99.7, 9081.0], [99.8, 9345.0], [99.9, 9414.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[0.0, 361.0], [0.1, 443.0], [0.2, 467.0], [0.3, 467.0], [0.4, 570.0], [0.5, 571.0], [0.6, 575.0], [0.7, 586.0], [0.8, 589.0], [0.9, 598.0], [1.0, 598.0], [1.1, 603.0], [1.2, 613.0], [1.3, 619.0], [1.4, 619.0], [1.5, 622.0], [1.6, 631.0], [1.7, 644.0], [1.8, 646.0], [1.9, 665.0], [2.0, 669.0], [2.1, 687.0], [2.2, 702.0], [2.3, 736.0], [2.4, 744.0], [2.5, 747.0], [2.6, 754.0], [2.7, 758.0], [2.8, 760.0], [2.9, 765.0], [3.0, 769.0], [3.1, 772.0], [3.2, 777.0], [3.3, 784.0], [3.4, 790.0], [3.5, 791.0], [3.6, 793.0], [3.7, 800.0], [3.8, 803.0], [3.9, 816.0], [4.0, 847.0], [4.1, 848.0], [4.2, 851.0], [4.3, 853.0], [4.4, 875.0], [4.5, 875.0], [4.6, 875.0], [4.7, 880.0], [4.8, 881.0], [4.9, 887.0], [5.0, 888.0], [5.1, 894.0], [5.2, 901.0], [5.3, 908.0], [5.4, 909.0], [5.5, 922.0], [5.6, 935.0], [5.7, 939.0], [5.8, 944.0], [5.9, 947.0], [6.0, 962.0], [6.1, 966.0], [6.2, 978.0], [6.3, 1009.0], [6.4, 1012.0], [6.5, 1013.0], [6.6, 1021.0], [6.7, 1027.0], [6.8, 1041.0], [6.9, 1043.0], [7.0, 1090.0], [7.1, 1093.0], [7.2, 1095.0], [7.3, 1131.0], [7.4, 1134.0], [7.5, 1143.0], [7.6, 1174.0], [7.7, 1180.0], [7.8, 1190.0], [7.9, 1197.0], [8.0, 1212.0], [8.1, 1219.0], [8.2, 1225.0], [8.3, 1225.0], [8.4, 1232.0], [8.5, 1236.0], [8.6, 1242.0], [8.7, 1244.0], [8.8, 1244.0], [8.9, 1254.0], [9.0, 1331.0], [9.1, 1332.0], [9.2, 1342.0], [9.3, 1349.0], [9.4, 1351.0], [9.5, 1366.0], [9.6, 1370.0], [9.7, 1373.0], [9.8, 1374.0], [9.9, 1374.0], [10.0, 1381.0], [10.1, 1386.0], [10.2, 1390.0], [10.3, 1424.0], [10.4, 1428.0], [10.5, 1432.0], [10.6, 1438.0], [10.7, 1438.0], [10.8, 1447.0], [10.9, 1455.0], [11.0, 1475.0], [11.1, 1482.0], [11.2, 1494.0], [11.3, 1496.0], [11.4, 1498.0], [11.5, 1508.0], [11.6, 1512.0], [11.7, 1516.0], [11.8, 1528.0], [11.9, 1534.0], [12.0, 1542.0], [12.1, 1551.0], [12.2, 1574.0], [12.3, 1577.0], [12.4, 1595.0], [12.5, 1611.0], [12.6, 1618.0], [12.7, 1634.0], [12.8, 1652.0], [12.9, 1663.0], [13.0, 1680.0], [13.1, 1691.0], [13.2, 1701.0], [13.3, 1710.0], [13.4, 1741.0], [13.5, 1741.0], [13.6, 1755.0], [13.7, 1755.0], [13.8, 1763.0], [13.9, 1794.0], [14.0, 1797.0], [14.1, 1799.0], [14.2, 1803.0], [14.3, 1841.0], [14.4, 1846.0], [14.5, 1849.0], [14.6, 1852.0], [14.7, 1865.0], [14.8, 1884.0], [14.9, 1892.0], [15.0, 1902.0], [15.1, 1913.0], [15.2, 1915.0], [15.3, 1937.0], [15.4, 1938.0], [15.5, 1945.0], [15.6, 1946.0], [15.7, 1967.0], [15.8, 1970.0], [15.9, 1970.0], [16.0, 1991.0], [16.1, 1995.0], [16.2, 2009.0], [16.3, 2033.0], [16.4, 2045.0], [16.5, 2048.0], [16.6, 2063.0], [16.7, 2083.0], [16.8, 2089.0], [16.9, 2090.0], [17.0, 2112.0], [17.1, 2129.0], [17.2, 2146.0], [17.3, 2167.0], [17.4, 2175.0], [17.5, 2223.0], [17.6, 2236.0], [17.7, 2264.0], [17.8, 2273.0], [17.9, 2294.0], [18.0, 2297.0], [18.1, 2308.0], [18.2, 2310.0], [18.3, 2316.0], [18.4, 2327.0], [18.5, 2330.0], [18.6, 2342.0], [18.7, 2345.0], [18.8, 2350.0], [18.9, 2350.0], [19.0, 2364.0], [19.1, 2364.0], [19.2, 2366.0], [19.3, 2366.0], [19.4, 2367.0], [19.5, 2373.0], [19.6, 2420.0], [19.7, 2420.0], [19.8, 2438.0], [19.9, 2450.0], [20.0, 2459.0], [20.1, 2470.0], [20.2, 2480.0], [20.3, 2488.0], [20.4, 2491.0], [20.5, 2496.0], [20.6, 2513.0], [20.7, 2528.0], [20.8, 2534.0], [20.9, 2537.0], [21.0, 2540.0], [21.1, 2563.0], [21.2, 2567.0], [21.3, 2611.0], [21.4, 2618.0], [21.5, 2629.0], [21.6, 2639.0], [21.7, 2649.0], [21.8, 2656.0], [21.9, 2672.0], [22.0, 2676.0], [22.1, 2682.0], [22.2, 2686.0], [22.3, 2693.0], [22.4, 2703.0], [22.5, 2722.0], [22.6, 2731.0], [22.7, 2747.0], [22.8, 2801.0], [22.9, 2806.0], [23.0, 2844.0], [23.1, 2863.0], [23.2, 2874.0], [23.3, 2877.0], [23.4, 2924.0], [23.5, 2931.0], [23.6, 2931.0], [23.7, 2992.0], [23.8, 2996.0], [23.9, 2999.0], [24.0, 3008.0], [24.1, 3018.0], [24.2, 3022.0], [24.3, 3051.0], [24.4, 3072.0], [24.5, 3100.0], [24.6, 3109.0], [24.7, 3112.0], [24.8, 3122.0], [24.9, 3204.0], [25.0, 3210.0], [25.1, 3211.0], [25.2, 3216.0], [25.3, 3234.0], [25.4, 3239.0], [25.5, 3250.0], [25.6, 3258.0], [25.7, 3266.0], [25.8, 3269.0], [25.9, 3288.0], [26.0, 3298.0], [26.1, 3300.0], [26.2, 3301.0], [26.3, 3324.0], [26.4, 3332.0], [26.5, 3345.0], [26.6, 3357.0], [26.7, 3418.0], [26.8, 3429.0], [26.9, 3431.0], [27.0, 3443.0], [27.1, 3445.0], [27.2, 3463.0], [27.3, 3486.0], [27.4, 3488.0], [27.5, 3502.0], [27.6, 3513.0], [27.7, 3514.0], [27.8, 3538.0], [27.9, 3545.0], [28.0, 3561.0], [28.1, 3582.0], [28.2, 3591.0], [28.3, 3602.0], [28.4, 3608.0], [28.5, 3608.0], [28.6, 3625.0], [28.7, 3663.0], [28.8, 3668.0], [28.9, 3672.0], [29.0, 3677.0], [29.1, 3689.0], [29.2, 3689.0], [29.3, 3706.0], [29.4, 3723.0], [29.5, 3768.0], [29.6, 3778.0], [29.7, 3798.0], [29.8, 3803.0], [29.9, 3806.0], [30.0, 3845.0], [30.1, 3873.0], [30.2, 3915.0], [30.3, 3921.0], [30.4, 3925.0], [30.5, 3938.0], [30.6, 3953.0], [30.7, 3957.0], [30.8, 3958.0], [30.9, 3976.0], [31.0, 3977.0], [31.1, 3983.0], [31.2, 3984.0], [31.3, 3995.0], [31.4, 4016.0], [31.5, 4029.0], [31.6, 4034.0], [31.7, 4037.0], [31.8, 4050.0], [31.9, 4059.0], [32.0, 4063.0], [32.1, 4077.0], [32.2, 4079.0], [32.3, 4102.0], [32.4, 4171.0], [32.5, 4189.0], [32.6, 4202.0], [32.7, 4221.0], [32.8, 4236.0], [32.9, 4244.0], [33.0, 4249.0], [33.1, 4276.0], [33.2, 4307.0], [33.3, 4311.0], [33.4, 4330.0], [33.5, 4346.0], [33.6, 4349.0], [33.7, 4358.0], [33.8, 4386.0], [33.9, 4391.0], [34.0, 4406.0], [34.1, 4408.0], [34.2, 4417.0], [34.3, 4420.0], [34.4, 4428.0], [34.5, 4432.0], [34.6, 4450.0], [34.7, 4473.0], [34.8, 4480.0], [34.9, 4481.0], [35.0, 4487.0], [35.1, 4491.0], [35.2, 4526.0], [35.3, 4546.0], [35.4, 4551.0], [35.5, 4565.0], [35.6, 4583.0], [35.7, 4605.0], [35.8, 4611.0], [35.9, 4616.0], [36.0, 4619.0], [36.1, 4620.0], [36.2, 4622.0], [36.3, 4638.0], [36.4, 4659.0], [36.5, 4670.0], [36.6, 4681.0], [36.7, 4690.0], [36.8, 4701.0], [36.9, 4706.0], [37.0, 4722.0], [37.1, 4722.0], [37.2, 4724.0], [37.3, 4732.0], [37.4, 4733.0], [37.5, 4744.0], [37.6, 4745.0], [37.7, 4754.0], [37.8, 4762.0], [37.9, 4778.0], [38.0, 4785.0], [38.1, 4790.0], [38.2, 4800.0], [38.3, 4806.0], [38.4, 4808.0], [38.5, 4838.0], [38.6, 4842.0], [38.7, 4843.0], [38.8, 4864.0], [38.9, 4868.0], [39.0, 4904.0], [39.1, 4906.0], [39.2, 4916.0], [39.3, 4922.0], [39.4, 4931.0], [39.5, 4940.0], [39.6, 4942.0], [39.7, 4946.0], [39.8, 4953.0], [39.9, 4955.0], [40.0, 4957.0], [40.1, 4966.0], [40.2, 4978.0], [40.3, 4987.0], [40.4, 4995.0], [40.5, 5002.0], [40.6, 5002.0], [40.7, 5004.0], [40.8, 5005.0], [40.9, 5025.0], [41.0, 5026.0], [41.1, 5045.0], [41.2, 5058.0], [41.3, 5060.0], [41.4, 5063.0], [41.5, 5082.0], [41.6, 5084.0], [41.7, 5086.0], [41.8, 5088.0], [41.9, 5089.0], [42.0, 5095.0], [42.1, 5110.0], [42.2, 5118.0], [42.3, 5120.0], [42.4, 5125.0], [42.5, 5138.0], [42.6, 5142.0], [42.7, 5143.0], [42.8, 5155.0], [42.9, 5170.0], [43.0, 5171.0], [43.1, 5174.0], [43.2, 5177.0], [43.3, 5178.0], [43.4, 5181.0], [43.5, 5183.0], [43.6, 5198.0], [43.7, 5203.0], [43.8, 5205.0], [43.9, 5210.0], [44.0, 5212.0], [44.1, 5215.0], [44.2, 5224.0], [44.3, 5230.0], [44.4, 5241.0], [44.5, 5243.0], [44.6, 5244.0], [44.7, 5246.0], [44.8, 5247.0], [44.9, 5248.0], [45.0, 5249.0], [45.1, 5256.0], [45.2, 5274.0], [45.3, 5277.0], [45.4, 5312.0], [45.5, 5313.0], [45.6, 5316.0], [45.7, 5316.0], [45.8, 5328.0], [45.9, 5333.0], [46.0, 5343.0], [46.1, 5344.0], [46.2, 5344.0], [46.3, 5348.0], [46.4, 5351.0], [46.5, 5358.0], [46.6, 5358.0], [46.7, 5362.0], [46.8, 5364.0], [46.9, 5373.0], [47.0, 5376.0], [47.1, 5382.0], [47.2, 5398.0], [47.3, 5406.0], [47.4, 5407.0], [47.5, 5415.0], [47.6, 5424.0], [47.7, 5436.0], [47.8, 5448.0], [47.9, 5452.0], [48.0, 5453.0], [48.1, 5454.0], [48.2, 5468.0], [48.3, 5469.0], [48.4, 5484.0], [48.5, 5484.0], [48.6, 5494.0], [48.7, 5505.0], [48.8, 5506.0], [48.9, 5510.0], [49.0, 5514.0], [49.1, 5519.0], [49.2, 5537.0], [49.3, 5541.0], [49.4, 5548.0], [49.5, 5558.0], [49.6, 5569.0], [49.7, 5572.0], [49.8, 5577.0], [49.9, 5580.0], [50.0, 5604.0], [50.1, 5606.0], [50.2, 5609.0], [50.3, 5620.0], [50.4, 5621.0], [50.5, 5627.0], [50.6, 5631.0], [50.7, 5635.0], [50.8, 5637.0], [50.9, 5639.0], [51.0, 5641.0], [51.1, 5645.0], [51.2, 5647.0], [51.3, 5656.0], [51.4, 5659.0], [51.5, 5659.0], [51.6, 5665.0], [51.7, 5667.0], [51.8, 5685.0], [51.9, 5690.0], [52.0, 5690.0], [52.1, 5694.0], [52.2, 5696.0], [52.3, 5705.0], [52.4, 5706.0], [52.5, 5712.0], [52.6, 5714.0], [52.7, 5720.0], [52.8, 5721.0], [52.9, 5721.0], [53.0, 5726.0], [53.1, 5727.0], [53.2, 5728.0], [53.3, 5739.0], [53.4, 5767.0], [53.5, 5771.0], [53.6, 5793.0], [53.7, 5795.0], [53.8, 5798.0], [53.9, 5803.0], [54.0, 5811.0], [54.1, 5822.0], [54.2, 5826.0], [54.3, 5830.0], [54.4, 5831.0], [54.5, 5836.0], [54.6, 5881.0], [54.7, 5881.0], [54.8, 5892.0], [54.9, 5896.0], [55.0, 5897.0], [55.1, 5899.0], [55.2, 5900.0], [55.3, 5904.0], [55.4, 5910.0], [55.5, 5911.0], [55.6, 5920.0], [55.7, 5921.0], [55.8, 5929.0], [55.9, 5931.0], [56.0, 5933.0], [56.1, 5933.0], [56.2, 5937.0], [56.3, 5943.0], [56.4, 5945.0], [56.5, 5967.0], [56.6, 5975.0], [56.7, 5979.0], [56.8, 5981.0], [56.9, 5993.0], [57.0, 5997.0], [57.1, 6002.0], [57.2, 6011.0], [57.3, 6015.0], [57.4, 6018.0], [57.5, 6020.0], [57.6, 6020.0], [57.7, 6053.0], [57.8, 6070.0], [57.9, 6070.0], [58.0, 6081.0], [58.1, 6084.0], [58.2, 6111.0], [58.3, 6120.0], [58.4, 6121.0], [58.5, 6123.0], [58.6, 6151.0], [58.7, 6154.0], [58.8, 6171.0], [58.9, 6174.0], [59.0, 6176.0], [59.1, 6177.0], [59.2, 6177.0], [59.3, 6179.0], [59.4, 6186.0], [59.5, 6200.0], [59.6, 6225.0], [59.7, 6243.0], [59.8, 6246.0], [59.9, 6248.0], [60.0, 6250.0], [60.1, 6252.0], [60.2, 6265.0], [60.3, 6278.0], [60.4, 6279.0], [60.5, 6290.0], [60.6, 6292.0], [60.7, 6292.0], [60.8, 6310.0], [60.9, 6323.0], [61.0, 6331.0], [61.1, 6347.0], [61.2, 6355.0], [61.3, 6360.0], [61.4, 6364.0], [61.5, 6375.0], [61.6, 6400.0], [61.7, 6418.0], [61.8, 6419.0], [61.9, 6422.0], [62.0, 6424.0], [62.1, 6451.0], [62.2, 6455.0], [62.3, 6455.0], [62.4, 6463.0], [62.5, 6465.0], [62.6, 6468.0], [62.7, 6470.0], [62.8, 6476.0], [62.9, 6513.0], [63.0, 6514.0], [63.1, 6530.0], [63.2, 6535.0], [63.3, 6539.0], [63.4, 6548.0], [63.5, 6559.0], [63.6, 6572.0], [63.7, 6586.0], [63.8, 6589.0], [63.9, 6591.0], [64.0, 6605.0], [64.1, 6610.0], [64.2, 6632.0], [64.3, 6638.0], [64.4, 6638.0], [64.5, 6644.0], [64.6, 6649.0], [64.7, 6655.0], [64.8, 6660.0], [64.9, 6676.0], [65.0, 6677.0], [65.1, 6682.0], [65.2, 6684.0], [65.3, 6694.0], [65.4, 6696.0], [65.5, 6698.0], [65.6, 6714.0], [65.7, 6719.0], [65.8, 6725.0], [65.9, 6725.0], [66.0, 6727.0], [66.1, 6733.0], [66.2, 6734.0], [66.3, 6738.0], [66.4, 6745.0], [66.5, 6752.0], [66.6, 6753.0], [66.7, 6755.0], [66.8, 6761.0], [66.9, 6763.0], [67.0, 6773.0], [67.1, 6775.0], [67.2, 6779.0], [67.3, 6786.0], [67.4, 6787.0], [67.5, 6789.0], [67.6, 6807.0], [67.7, 6825.0], [67.8, 6829.0], [67.9, 6830.0], [68.0, 6833.0], [68.1, 6834.0], [68.2, 6838.0], [68.3, 6844.0], [68.4, 6846.0], [68.5, 6853.0], [68.6, 6859.0], [68.7, 6870.0], [68.8, 6886.0], [68.9, 6889.0], [69.0, 6896.0], [69.1, 6907.0], [69.2, 6907.0], [69.3, 6910.0], [69.4, 6913.0], [69.5, 6919.0], [69.6, 6919.0], [69.7, 6932.0], [69.8, 6932.0], [69.9, 6935.0], [70.0, 6938.0], [70.1, 6940.0], [70.2, 6945.0], [70.3, 6948.0], [70.4, 6959.0], [70.5, 6967.0], [70.6, 6985.0], [70.7, 6991.0], [70.8, 6996.0], [70.9, 7004.0], [71.0, 7010.0], [71.1, 7016.0], [71.2, 7022.0], [71.3, 7029.0], [71.4, 7045.0], [71.5, 7062.0], [71.6, 7067.0], [71.7, 7067.0], [71.8, 7079.0], [71.9, 7084.0], [72.0, 7086.0], [72.1, 7091.0], [72.2, 7101.0], [72.3, 7104.0], [72.4, 7104.0], [72.5, 7110.0], [72.6, 7111.0], [72.7, 7128.0], [72.8, 7130.0], [72.9, 7134.0], [73.0, 7139.0], [73.1, 7143.0], [73.2, 7145.0], [73.3, 7163.0], [73.4, 7172.0], [73.5, 7176.0], [73.6, 7182.0], [73.7, 7187.0], [73.8, 7188.0], [73.9, 7188.0], [74.0, 7212.0], [74.1, 7233.0], [74.2, 7237.0], [74.3, 7246.0], [74.4, 7250.0], [74.5, 7266.0], [74.6, 7274.0], [74.7, 7275.0], [74.8, 7276.0], [74.9, 7277.0], [75.0, 7280.0], [75.1, 7284.0], [75.2, 7286.0], [75.3, 7289.0], [75.4, 7291.0], [75.5, 7299.0], [75.6, 7303.0], [75.7, 7315.0], [75.8, 7321.0], [75.9, 7324.0], [76.0, 7327.0], [76.1, 7327.0], [76.2, 7329.0], [76.3, 7330.0], [76.4, 7333.0], [76.5, 7333.0], [76.6, 7335.0], [76.7, 7339.0], [76.8, 7339.0], [76.9, 7377.0], [77.0, 7379.0], [77.1, 7380.0], [77.2, 7390.0], [77.3, 7391.0], [77.4, 7395.0], [77.5, 7395.0], [77.6, 7395.0], [77.7, 7426.0], [77.8, 7428.0], [77.9, 7429.0], [78.0, 7430.0], [78.1, 7463.0], [78.2, 7474.0], [78.3, 7489.0], [78.4, 7490.0], [78.5, 7490.0], [78.6, 7498.0], [78.7, 7499.0], [78.8, 7501.0], [78.9, 7507.0], [79.0, 7518.0], [79.1, 7533.0], [79.2, 7534.0], [79.3, 7536.0], [79.4, 7554.0], [79.5, 7555.0], [79.6, 7555.0], [79.7, 7558.0], [79.8, 7563.0], [79.9, 7564.0], [80.0, 7584.0], [80.1, 7593.0], [80.2, 7600.0], [80.3, 7611.0], [80.4, 7616.0], [80.5, 7640.0], [80.6, 7642.0], [80.7, 7648.0], [80.8, 7651.0], [80.9, 7667.0], [81.0, 7674.0], [81.1, 7682.0], [81.2, 7686.0], [81.3, 7687.0], [81.4, 7700.0], [81.5, 7714.0], [81.6, 7717.0], [81.7, 7719.0], [81.8, 7732.0], [81.9, 7741.0], [82.0, 7742.0], [82.1, 7747.0], [82.2, 7756.0], [82.3, 7774.0], [82.4, 7775.0], [82.5, 7791.0], [82.6, 7811.0], [82.7, 7817.0], [82.8, 7820.0], [82.9, 7822.0], [83.0, 7847.0], [83.1, 7874.0], [83.2, 7874.0], [83.3, 7885.0], [83.4, 7893.0], [83.5, 7894.0], [83.6, 7895.0], [83.7, 7896.0], [83.8, 7917.0], [83.9, 7930.0], [84.0, 7937.0], [84.1, 7945.0], [84.2, 7948.0], [84.3, 7949.0], [84.4, 7951.0], [84.5, 7952.0], [84.6, 7957.0], [84.7, 7959.0], [84.8, 7961.0], [84.9, 7962.0], [85.0, 7967.0], [85.1, 7981.0], [85.2, 7981.0], [85.3, 7982.0], [85.4, 7990.0], [85.5, 7993.0], [85.6, 8004.0], [85.7, 8005.0], [85.8, 8028.0], [85.9, 8038.0], [86.0, 8040.0], [86.1, 8041.0], [86.2, 8045.0], [86.3, 8055.0], [86.4, 8062.0], [86.5, 8063.0], [86.6, 8087.0], [86.7, 8098.0], [86.8, 8101.0], [86.9, 8102.0], [87.0, 8128.0], [87.1, 8128.0], [87.2, 8176.0], [87.3, 8184.0], [87.4, 8191.0], [87.5, 8195.0], [87.6, 8214.0], [87.7, 8215.0], [87.8, 8218.0], [87.9, 8222.0], [88.0, 8249.0], [88.1, 8272.0], [88.2, 8282.0], [88.3, 8283.0], [88.4, 8289.0], [88.5, 8290.0], [88.6, 8297.0], [88.7, 8324.0], [88.8, 8374.0], [88.9, 8375.0], [89.0, 8383.0], [89.1, 8389.0], [89.2, 8400.0], [89.3, 8463.0], [89.4, 8465.0], [89.5, 8477.0], [89.6, 8481.0], [89.7, 8538.0], [89.8, 8543.0], [89.9, 8554.0], [90.0, 8562.0], [90.1, 8593.0], [90.2, 8607.0], [90.3, 8648.0], [90.4, 8651.0], [90.5, 8654.0], [90.6, 8656.0], [90.7, 8712.0], [90.8, 8752.0], [90.9, 8768.0], [91.0, 8817.0], [91.1, 8830.0], [91.2, 8861.0], [91.3, 8866.0], [91.4, 8895.0], [91.5, 8935.0], [91.6, 8954.0], [91.7, 9024.0], [91.8, 9062.0], [91.9, 9089.0], [92.0, 9116.0], [92.1, 9135.0], [92.2, 9140.0], [92.3, 9153.0], [92.4, 9156.0], [92.5, 9160.0], [92.6, 9168.0], [92.7, 9190.0], [92.8, 9207.0], [92.9, 9220.0], [93.0, 9236.0], [93.1, 9249.0], [93.2, 9272.0], [93.3, 9420.0], [93.4, 9427.0], [93.5, 9446.0], [93.6, 9470.0], [93.7, 9472.0], [93.8, 9502.0], [93.9, 9504.0], [94.0, 9573.0], [94.1, 9581.0], [94.2, 9619.0], [94.3, 9630.0], [94.4, 9813.0], [94.5, 9829.0], [94.6, 9874.0], [94.7, 9882.0], [94.8, 9909.0], [94.9, 9943.0], [95.0, 9948.0], [95.1, 9970.0], [95.2, 10025.0], [95.3, 10057.0], [95.4, 10077.0], [95.5, 10115.0], [95.6, 10121.0], [95.7, 10123.0], [95.8, 10229.0], [95.9, 10239.0], [96.0, 10355.0], [96.1, 10375.0], [96.2, 10399.0], [96.3, 10405.0], [96.4, 10417.0], [96.5, 10431.0], [96.6, 10441.0], [96.7, 10462.0], [96.8, 10506.0], [96.9, 10524.0], [97.0, 10578.0], [97.1, 10644.0], [97.2, 10650.0], [97.3, 10714.0], [97.4, 10723.0], [97.5, 10731.0], [97.6, 10753.0], [97.7, 10776.0], [97.8, 10788.0], [97.9, 10800.0], [98.0, 10806.0], [98.1, 10824.0], [98.2, 10934.0], [98.3, 10993.0], [98.4, 11022.0], [98.5, 11139.0], [98.6, 11223.0], [98.7, 11255.0], [98.8, 11313.0], [98.9, 11421.0], [99.0, 11447.0], [99.1, 11487.0], [99.2, 12186.0], [99.3, 12244.0], [99.4, 12340.0], [99.5, 12626.0], [99.6, 12881.0], [99.7, 12895.0], [99.8, 13744.0], [99.9, 14325.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 632.0], [0.1, 656.0], [0.2, 786.0], [0.3, 786.0], [0.4, 959.0], [0.5, 981.0], [0.6, 999.0], [0.7, 1063.0], [0.8, 1068.0], [0.9, 1121.0], [1.0, 1123.0], [1.1, 1125.0], [1.2, 1265.0], [1.3, 1275.0], [1.4, 1275.0], [1.5, 1278.0], [1.6, 1339.0], [1.7, 1363.0], [1.8, 1382.0], [1.9, 1428.0], [2.0, 1454.0], [2.1, 1457.0], [2.2, 1473.0], [2.3, 1528.0], [2.4, 1684.0], [2.5, 1703.0], [2.6, 1764.0], [2.7, 1769.0], [2.8, 1839.0], [2.9, 1847.0], [3.0, 1863.0], [3.1, 1906.0], [3.2, 1939.0], [3.3, 1958.0], [3.4, 1976.0], [3.5, 2031.0], [3.6, 2064.0], [3.7, 2091.0], [3.8, 2133.0], [3.9, 2249.0], [4.0, 2269.0], [4.1, 2274.0], [4.2, 2398.0], [4.3, 2420.0], [4.4, 2484.0], [4.5, 2497.0], [4.6, 2508.0], [4.7, 2558.0], [4.8, 2572.0], [4.9, 2598.0], [5.0, 2638.0], [5.1, 2663.0], [5.2, 2665.0], [5.3, 2698.0], [5.4, 2758.0], [5.5, 2770.0], [5.6, 2774.0], [5.7, 2802.0], [5.8, 2803.0], [5.9, 2832.0], [6.0, 2847.0], [6.1, 2864.0], [6.2, 2872.0], [6.3, 2878.0], [6.4, 2894.0], [6.5, 2920.0], [6.6, 2936.0], [6.7, 2974.0], [6.8, 3000.0], [6.9, 3018.0], [7.0, 3025.0], [7.1, 3029.0], [7.2, 3046.0], [7.3, 3063.0], [7.4, 3099.0], [7.5, 3114.0], [7.6, 3129.0], [7.7, 3130.0], [7.8, 3139.0], [7.9, 3148.0], [8.0, 3173.0], [8.1, 3183.0], [8.2, 3188.0], [8.3, 3189.0], [8.4, 3190.0], [8.5, 3204.0], [8.6, 3317.0], [8.7, 3343.0], [8.8, 3392.0], [8.9, 3419.0], [9.0, 3446.0], [9.1, 3458.0], [9.2, 3469.0], [9.3, 3469.0], [9.4, 3472.0], [9.5, 3502.0], [9.6, 3508.0], [9.7, 3519.0], [9.8, 3520.0], [9.9, 3528.0], [10.0, 3546.0], [10.1, 3547.0], [10.2, 3556.0], [10.3, 3557.0], [10.4, 3568.0], [10.5, 3573.0], [10.6, 3616.0], [10.7, 3623.0], [10.8, 3643.0], [10.9, 3645.0], [11.0, 3665.0], [11.1, 3694.0], [11.2, 3718.0], [11.3, 3722.0], [11.4, 3730.0], [11.5, 3739.0], [11.6, 3749.0], [11.7, 3786.0], [11.8, 3798.0], [11.9, 3814.0], [12.0, 3825.0], [12.1, 3826.0], [12.2, 3839.0], [12.3, 3846.0], [12.4, 3868.0], [12.5, 3869.0], [12.6, 3889.0], [12.7, 3892.0], [12.8, 3894.0], [12.9, 3897.0], [13.0, 3903.0], [13.1, 3954.0], [13.2, 3965.0], [13.3, 3968.0], [13.4, 3981.0], [13.5, 3991.0], [13.6, 3994.0], [13.7, 3999.0], [13.8, 4007.0], [13.9, 4028.0], [14.0, 4048.0], [14.1, 4066.0], [14.2, 4109.0], [14.3, 4118.0], [14.4, 4118.0], [14.5, 4158.0], [14.6, 4158.0], [14.7, 4165.0], [14.8, 4170.0], [14.9, 4182.0], [15.0, 4198.0], [15.1, 4207.0], [15.2, 4209.0], [15.3, 4222.0], [15.4, 4233.0], [15.5, 4256.0], [15.6, 4259.0], [15.7, 4279.0], [15.8, 4282.0], [15.9, 4293.0], [16.0, 4294.0], [16.1, 4323.0], [16.2, 4325.0], [16.3, 4334.0], [16.4, 4348.0], [16.5, 4355.0], [16.6, 4365.0], [16.7, 4366.0], [16.8, 4393.0], [16.9, 4402.0], [17.0, 4403.0], [17.1, 4434.0], [17.2, 4436.0], [17.3, 4454.0], [17.4, 4466.0], [17.5, 4469.0], [17.6, 4472.0], [17.7, 4478.0], [17.8, 4499.0], [17.9, 4516.0], [18.0, 4543.0], [18.1, 4547.0], [18.2, 4547.0], [18.3, 4551.0], [18.4, 4559.0], [18.5, 4569.0], [18.6, 4576.0], [18.7, 4589.0], [18.8, 4605.0], [18.9, 4626.0], [19.0, 4630.0], [19.1, 4630.0], [19.2, 4646.0], [19.3, 4682.0], [19.4, 4688.0], [19.5, 4692.0], [19.6, 4695.0], [19.7, 4695.0], [19.8, 4706.0], [19.9, 4721.0], [20.0, 4753.0], [20.1, 4762.0], [20.2, 4774.0], [20.3, 4787.0], [20.4, 4788.0], [20.5, 4803.0], [20.6, 4812.0], [20.7, 4838.0], [20.8, 4855.0], [20.9, 4874.0], [21.0, 4880.0], [21.1, 4908.0], [21.2, 4914.0], [21.3, 4933.0], [21.4, 4939.0], [21.5, 4940.0], [21.6, 4941.0], [21.7, 4946.0], [21.8, 4946.0], [21.9, 4957.0], [22.0, 4967.0], [22.1, 4972.0], [22.2, 4986.0], [22.3, 4999.0], [22.4, 5022.0], [22.5, 5029.0], [22.6, 5046.0], [22.7, 5047.0], [22.8, 5054.0], [22.9, 5063.0], [23.0, 5094.0], [23.1, 5095.0], [23.2, 5103.0], [23.3, 5105.0], [23.4, 5108.0], [23.5, 5112.0], [23.6, 5118.0], [23.7, 5129.0], [23.8, 5147.0], [23.9, 5161.0], [24.0, 5162.0], [24.1, 5166.0], [24.2, 5170.0], [24.3, 5175.0], [24.4, 5181.0], [24.5, 5181.0], [24.6, 5186.0], [24.7, 5189.0], [24.8, 5190.0], [24.9, 5207.0], [25.0, 5227.0], [25.1, 5229.0], [25.2, 5256.0], [25.3, 5263.0], [25.4, 5264.0], [25.5, 5264.0], [25.6, 5279.0], [25.7, 5285.0], [25.8, 5303.0], [25.9, 5320.0], [26.0, 5331.0], [26.1, 5340.0], [26.2, 5365.0], [26.3, 5365.0], [26.4, 5384.0], [26.5, 5418.0], [26.6, 5428.0], [26.7, 5429.0], [26.8, 5434.0], [26.9, 5443.0], [27.0, 5451.0], [27.1, 5455.0], [27.2, 5456.0], [27.3, 5456.0], [27.4, 5463.0], [27.5, 5469.0], [27.6, 5474.0], [27.7, 5479.0], [27.8, 5481.0], [27.9, 5481.0], [28.0, 5489.0], [28.1, 5508.0], [28.2, 5509.0], [28.3, 5523.0], [28.4, 5527.0], [28.5, 5558.0], [28.6, 5560.0], [28.7, 5565.0], [28.8, 5571.0], [28.9, 5577.0], [29.0, 5616.0], [29.1, 5629.0], [29.2, 5640.0], [29.3, 5681.0], [29.4, 5690.0], [29.5, 5695.0], [29.6, 5714.0], [29.7, 5722.0], [29.8, 5728.0], [29.9, 5734.0], [30.0, 5762.0], [30.1, 5779.0], [30.2, 5793.0], [30.3, 5807.0], [30.4, 5812.0], [30.5, 5814.0], [30.6, 5816.0], [30.7, 5823.0], [30.8, 5831.0], [30.9, 5836.0], [31.0, 5860.0], [31.1, 5869.0], [31.2, 5876.0], [31.3, 5879.0], [31.4, 5893.0], [31.5, 5894.0], [31.6, 5896.0], [31.7, 5906.0], [31.8, 5911.0], [31.9, 5912.0], [32.0, 5912.0], [32.1, 5916.0], [32.2, 5921.0], [32.3, 5939.0], [32.4, 5940.0], [32.5, 5941.0], [32.6, 5946.0], [32.7, 5963.0], [32.8, 5963.0], [32.9, 5964.0], [33.0, 5973.0], [33.1, 5977.0], [33.2, 5978.0], [33.3, 5987.0], [33.4, 6019.0], [33.5, 6025.0], [33.6, 6027.0], [33.7, 6031.0], [33.8, 6046.0], [33.9, 6052.0], [34.0, 6056.0], [34.1, 6058.0], [34.2, 6059.0], [34.3, 6060.0], [34.4, 6068.0], [34.5, 6073.0], [34.6, 6078.0], [34.7, 6083.0], [34.8, 6097.0], [34.9, 6099.0], [35.0, 6099.0], [35.1, 6100.0], [35.2, 6106.0], [35.3, 6109.0], [35.4, 6113.0], [35.5, 6124.0], [35.6, 6131.0], [35.7, 6136.0], [35.8, 6147.0], [35.9, 6167.0], [36.0, 6177.0], [36.1, 6180.0], [36.2, 6186.0], [36.3, 6200.0], [36.4, 6210.0], [36.5, 6214.0], [36.6, 6225.0], [36.7, 6230.0], [36.8, 6242.0], [36.9, 6244.0], [37.0, 6248.0], [37.1, 6250.0], [37.2, 6259.0], [37.3, 6261.0], [37.4, 6267.0], [37.5, 6269.0], [37.6, 6275.0], [37.7, 6276.0], [37.8, 6278.0], [37.9, 6287.0], [38.0, 6288.0], [38.1, 6289.0], [38.2, 6292.0], [38.3, 6298.0], [38.4, 6310.0], [38.5, 6315.0], [38.6, 6316.0], [38.7, 6317.0], [38.8, 6320.0], [38.9, 6331.0], [39.0, 6347.0], [39.1, 6356.0], [39.2, 6367.0], [39.3, 6367.0], [39.4, 6376.0], [39.5, 6380.0], [39.6, 6397.0], [39.7, 6410.0], [39.8, 6413.0], [39.9, 6415.0], [40.0, 6426.0], [40.1, 6442.0], [40.2, 6442.0], [40.3, 6451.0], [40.4, 6464.0], [40.5, 6469.0], [40.6, 6483.0], [40.7, 6503.0], [40.8, 6509.0], [40.9, 6512.0], [41.0, 6512.0], [41.1, 6518.0], [41.2, 6521.0], [41.3, 6524.0], [41.4, 6524.0], [41.5, 6531.0], [41.6, 6534.0], [41.7, 6536.0], [41.8, 6536.0], [41.9, 6537.0], [42.0, 6538.0], [42.1, 6539.0], [42.2, 6544.0], [42.3, 6549.0], [42.4, 6552.0], [42.5, 6552.0], [42.6, 6554.0], [42.7, 6560.0], [42.8, 6569.0], [42.9, 6579.0], [43.0, 6579.0], [43.1, 6597.0], [43.2, 6602.0], [43.3, 6607.0], [43.4, 6609.0], [43.5, 6610.0], [43.6, 6611.0], [43.7, 6611.0], [43.8, 6613.0], [43.9, 6617.0], [44.0, 6624.0], [44.1, 6640.0], [44.2, 6649.0], [44.3, 6668.0], [44.4, 6681.0], [44.5, 6681.0], [44.6, 6683.0], [44.7, 6684.0], [44.8, 6685.0], [44.9, 6687.0], [45.0, 6689.0], [45.1, 6691.0], [45.2, 6696.0], [45.3, 6701.0], [45.4, 6709.0], [45.5, 6712.0], [45.6, 6715.0], [45.7, 6721.0], [45.8, 6726.0], [45.9, 6728.0], [46.0, 6731.0], [46.1, 6740.0], [46.2, 6741.0], [46.3, 6741.0], [46.4, 6742.0], [46.5, 6744.0], [46.6, 6750.0], [46.7, 6758.0], [46.8, 6760.0], [46.9, 6762.0], [47.0, 6769.0], [47.1, 6772.0], [47.2, 6772.0], [47.3, 6773.0], [47.4, 6780.0], [47.5, 6783.0], [47.6, 6786.0], [47.7, 6786.0], [47.8, 6787.0], [47.9, 6791.0], [48.0, 6802.0], [48.1, 6809.0], [48.2, 6816.0], [48.3, 6817.0], [48.4, 6817.0], [48.5, 6820.0], [48.6, 6823.0], [48.7, 6827.0], [48.8, 6844.0], [48.9, 6846.0], [49.0, 6851.0], [49.1, 6854.0], [49.2, 6855.0], [49.3, 6855.0], [49.4, 6858.0], [49.5, 6861.0], [49.6, 6863.0], [49.7, 6873.0], [49.8, 6873.0], [49.9, 6878.0], [50.0, 6882.0], [50.1, 6883.0], [50.2, 6889.0], [50.3, 6891.0], [50.4, 6894.0], [50.5, 6895.0], [50.6, 6896.0], [50.7, 6900.0], [50.8, 6902.0], [50.9, 6906.0], [51.0, 6907.0], [51.1, 6911.0], [51.2, 6913.0], [51.3, 6914.0], [51.4, 6914.0], [51.5, 6927.0], [51.6, 6927.0], [51.7, 6928.0], [51.8, 6932.0], [51.9, 6938.0], [52.0, 6941.0], [52.1, 6942.0], [52.2, 6948.0], [52.3, 6949.0], [52.4, 6956.0], [52.5, 6956.0], [52.6, 6957.0], [52.7, 6963.0], [52.8, 6966.0], [52.9, 6970.0], [53.0, 6972.0], [53.1, 6976.0], [53.2, 6984.0], [53.3, 6986.0], [53.4, 6987.0], [53.5, 6990.0], [53.6, 6992.0], [53.7, 6995.0], [53.8, 7000.0], [53.9, 7001.0], [54.0, 7016.0], [54.1, 7017.0], [54.2, 7023.0], [54.3, 7030.0], [54.4, 7034.0], [54.5, 7035.0], [54.6, 7039.0], [54.7, 7042.0], [54.8, 7045.0], [54.9, 7048.0], [55.0, 7048.0], [55.1, 7049.0], [55.2, 7057.0], [55.3, 7058.0], [55.4, 7061.0], [55.5, 7069.0], [55.6, 7070.0], [55.7, 7075.0], [55.8, 7076.0], [55.9, 7077.0], [56.0, 7086.0], [56.1, 7088.0], [56.2, 7099.0], [56.3, 7102.0], [56.4, 7110.0], [56.5, 7114.0], [56.6, 7115.0], [56.7, 7120.0], [56.8, 7125.0], [56.9, 7128.0], [57.0, 7134.0], [57.1, 7136.0], [57.2, 7140.0], [57.3, 7148.0], [57.4, 7152.0], [57.5, 7158.0], [57.6, 7159.0], [57.7, 7165.0], [57.8, 7166.0], [57.9, 7166.0], [58.0, 7174.0], [58.1, 7188.0], [58.2, 7189.0], [58.3, 7191.0], [58.4, 7197.0], [58.5, 7198.0], [58.6, 7199.0], [58.7, 7217.0], [58.8, 7231.0], [58.9, 7232.0], [59.0, 7237.0], [59.1, 7241.0], [59.2, 7244.0], [59.3, 7248.0], [59.4, 7254.0], [59.5, 7256.0], [59.6, 7256.0], [59.7, 7269.0], [59.8, 7275.0], [59.9, 7279.0], [60.0, 7284.0], [60.1, 7285.0], [60.2, 7288.0], [60.3, 7290.0], [60.4, 7291.0], [60.5, 7291.0], [60.6, 7291.0], [60.7, 7293.0], [60.8, 7294.0], [60.9, 7295.0], [61.0, 7297.0], [61.1, 7306.0], [61.2, 7308.0], [61.3, 7308.0], [61.4, 7309.0], [61.5, 7311.0], [61.6, 7311.0], [61.7, 7322.0], [61.8, 7333.0], [61.9, 7338.0], [62.0, 7338.0], [62.1, 7339.0], [62.2, 7341.0], [62.3, 7342.0], [62.4, 7343.0], [62.5, 7345.0], [62.6, 7345.0], [62.7, 7349.0], [62.8, 7354.0], [62.9, 7355.0], [63.0, 7357.0], [63.1, 7362.0], [63.2, 7366.0], [63.3, 7368.0], [63.4, 7371.0], [63.5, 7376.0], [63.6, 7381.0], [63.7, 7386.0], [63.8, 7387.0], [63.9, 7392.0], [64.0, 7395.0], [64.1, 7395.0], [64.2, 7403.0], [64.3, 7405.0], [64.4, 7409.0], [64.5, 7415.0], [64.6, 7418.0], [64.7, 7420.0], [64.8, 7421.0], [64.9, 7423.0], [65.0, 7427.0], [65.1, 7429.0], [65.2, 7431.0], [65.3, 7440.0], [65.4, 7441.0], [65.5, 7443.0], [65.6, 7445.0], [65.7, 7449.0], [65.8, 7450.0], [65.9, 7451.0], [66.0, 7451.0], [66.1, 7453.0], [66.2, 7454.0], [66.3, 7463.0], [66.4, 7463.0], [66.5, 7464.0], [66.6, 7467.0], [66.7, 7471.0], [66.8, 7474.0], [66.9, 7479.0], [67.0, 7480.0], [67.1, 7480.0], [67.2, 7495.0], [67.3, 7499.0], [67.4, 7502.0], [67.5, 7508.0], [67.6, 7513.0], [67.7, 7519.0], [67.8, 7519.0], [67.9, 7520.0], [68.0, 7524.0], [68.1, 7525.0], [68.2, 7527.0], [68.3, 7527.0], [68.4, 7528.0], [68.5, 7528.0], [68.6, 7528.0], [68.7, 7529.0], [68.8, 7529.0], [68.9, 7535.0], [69.0, 7545.0], [69.1, 7547.0], [69.2, 7549.0], [69.3, 7549.0], [69.4, 7551.0], [69.5, 7562.0], [69.6, 7568.0], [69.7, 7575.0], [69.8, 7579.0], [69.9, 7582.0], [70.0, 7592.0], [70.1, 7596.0], [70.2, 7597.0], [70.3, 7599.0], [70.4, 7603.0], [70.5, 7605.0], [70.6, 7606.0], [70.7, 7620.0], [70.8, 7630.0], [70.9, 7631.0], [71.0, 7635.0], [71.1, 7636.0], [71.2, 7637.0], [71.3, 7637.0], [71.4, 7638.0], [71.5, 7644.0], [71.6, 7645.0], [71.7, 7647.0], [71.8, 7648.0], [71.9, 7649.0], [72.0, 7650.0], [72.1, 7652.0], [72.2, 7661.0], [72.3, 7661.0], [72.4, 7664.0], [72.5, 7670.0], [72.6, 7672.0], [72.7, 7678.0], [72.8, 7679.0], [72.9, 7680.0], [73.0, 7684.0], [73.1, 7685.0], [73.2, 7690.0], [73.3, 7691.0], [73.4, 7693.0], [73.5, 7701.0], [73.6, 7704.0], [73.7, 7708.0], [73.8, 7722.0], [73.9, 7723.0], [74.0, 7727.0], [74.1, 7730.0], [74.2, 7731.0], [74.3, 7739.0], [74.4, 7740.0], [74.5, 7745.0], [74.6, 7745.0], [74.7, 7752.0], [74.8, 7763.0], [74.9, 7769.0], [75.0, 7771.0], [75.1, 7775.0], [75.2, 7782.0], [75.3, 7782.0], [75.4, 7783.0], [75.5, 7792.0], [75.6, 7800.0], [75.7, 7804.0], [75.8, 7810.0], [75.9, 7816.0], [76.0, 7823.0], [76.1, 7827.0], [76.2, 7830.0], [76.3, 7840.0], [76.4, 7848.0], [76.5, 7853.0], [76.6, 7857.0], [76.7, 7861.0], [76.8, 7861.0], [76.9, 7868.0], [77.0, 7869.0], [77.1, 7870.0], [77.2, 7873.0], [77.3, 7885.0], [77.4, 7886.0], [77.5, 7912.0], [77.6, 7914.0], [77.7, 7914.0], [77.8, 7914.0], [77.9, 7922.0], [78.0, 7926.0], [78.1, 7939.0], [78.2, 7944.0], [78.3, 7947.0], [78.4, 7959.0], [78.5, 7962.0], [78.6, 7971.0], [78.7, 7979.0], [78.8, 7984.0], [78.9, 7984.0], [79.0, 7985.0], [79.1, 7990.0], [79.2, 7999.0], [79.3, 8004.0], [79.4, 8006.0], [79.5, 8008.0], [79.6, 8008.0], [79.7, 8014.0], [79.8, 8017.0], [79.9, 8017.0], [80.0, 8020.0], [80.1, 8021.0], [80.2, 8037.0], [80.3, 8061.0], [80.4, 8069.0], [80.5, 8073.0], [80.6, 8079.0], [80.7, 8087.0], [80.8, 8096.0], [80.9, 8104.0], [81.0, 8108.0], [81.1, 8114.0], [81.2, 8124.0], [81.3, 8135.0], [81.4, 8138.0], [81.5, 8140.0], [81.6, 8148.0], [81.7, 8156.0], [81.8, 8159.0], [81.9, 8177.0], [82.0, 8179.0], [82.1, 8185.0], [82.2, 8186.0], [82.3, 8189.0], [82.4, 8193.0], [82.5, 8204.0], [82.6, 8205.0], [82.7, 8210.0], [82.8, 8212.0], [82.9, 8219.0], [83.0, 8225.0], [83.1, 8232.0], [83.2, 8248.0], [83.3, 8250.0], [83.4, 8255.0], [83.5, 8262.0], [83.6, 8264.0], [83.7, 8272.0], [83.8, 8272.0], [83.9, 8284.0], [84.0, 8284.0], [84.1, 8288.0], [84.2, 8293.0], [84.3, 8296.0], [84.4, 8310.0], [84.5, 8317.0], [84.6, 8323.0], [84.7, 8326.0], [84.8, 8328.0], [84.9, 8328.0], [85.0, 8359.0], [85.1, 8368.0], [85.2, 8378.0], [85.3, 8378.0], [85.4, 8380.0], [85.5, 8389.0], [85.6, 8395.0], [85.7, 8405.0], [85.8, 8417.0], [85.9, 8424.0], [86.0, 8447.0], [86.1, 8478.0], [86.2, 8487.0], [86.3, 8489.0], [86.4, 8498.0], [86.5, 8500.0], [86.6, 8505.0], [86.7, 8539.0], [86.8, 8546.0], [86.9, 8547.0], [87.0, 8559.0], [87.1, 8564.0], [87.2, 8565.0], [87.3, 8596.0], [87.4, 8597.0], [87.5, 8606.0], [87.6, 8607.0], [87.7, 8618.0], [87.8, 8719.0], [87.9, 8733.0], [88.0, 8745.0], [88.1, 8760.0], [88.2, 8779.0], [88.3, 8779.0], [88.4, 8784.0], [88.5, 8784.0], [88.6, 8793.0], [88.7, 8798.0], [88.8, 8825.0], [88.9, 8835.0], [89.0, 8858.0], [89.1, 8872.0], [89.2, 8881.0], [89.3, 8894.0], [89.4, 8901.0], [89.5, 8903.0], [89.6, 8915.0], [89.7, 8929.0], [89.8, 8950.0], [89.9, 8974.0], [90.0, 9048.0], [90.1, 9068.0], [90.2, 9069.0], [90.3, 9085.0], [90.4, 9105.0], [90.5, 9118.0], [90.6, 9132.0], [90.7, 9134.0], [90.8, 9168.0], [90.9, 9216.0], [91.0, 9228.0], [91.1, 9250.0], [91.2, 9309.0], [91.3, 9334.0], [91.4, 9338.0], [91.5, 9355.0], [91.6, 9391.0], [91.7, 9403.0], [91.8, 9406.0], [91.9, 9460.0], [92.0, 9472.0], [92.1, 9485.0], [92.2, 9509.0], [92.3, 9532.0], [92.4, 9540.0], [92.5, 9540.0], [92.6, 9545.0], [92.7, 9562.0], [92.8, 9564.0], [92.9, 9571.0], [93.0, 9572.0], [93.1, 9584.0], [93.2, 9585.0], [93.3, 9593.0], [93.4, 9649.0], [93.5, 9661.0], [93.6, 9661.0], [93.7, 9681.0], [93.8, 9715.0], [93.9, 9718.0], [94.0, 9826.0], [94.1, 9889.0], [94.2, 9983.0], [94.3, 10058.0], [94.4, 10133.0], [94.5, 10140.0], [94.6, 10148.0], [94.7, 10161.0], [94.8, 10193.0], [94.9, 10195.0], [95.0, 10197.0], [95.1, 10221.0], [95.2, 10222.0], [95.3, 10233.0], [95.4, 10249.0], [95.5, 10295.0], [95.6, 10337.0], [95.7, 10349.0], [95.8, 10375.0], [95.9, 10488.0], [96.0, 10513.0], [96.1, 10529.0], [96.2, 10543.0], [96.3, 10555.0], [96.4, 10571.0], [96.5, 10603.0], [96.6, 10629.0], [96.7, 10662.0], [96.8, 10731.0], [96.9, 10778.0], [97.0, 10844.0], [97.1, 10859.0], [97.2, 10884.0], [97.3, 10901.0], [97.4, 10943.0], [97.5, 10997.0], [97.6, 11012.0], [97.7, 11040.0], [97.8, 11073.0], [97.9, 11120.0], [98.0, 11215.0], [98.1, 11217.0], [98.2, 11269.0], [98.3, 11338.0], [98.4, 11339.0], [98.5, 11369.0], [98.6, 11408.0], [98.7, 11442.0], [98.8, 11456.0], [98.9, 11459.0], [99.0, 11472.0], [99.1, 11545.0], [99.2, 11688.0], [99.3, 11760.0], [99.4, 12098.0], [99.5, 12360.0], [99.6, 12538.0], [99.7, 12745.0], [99.8, 13574.0], [99.9, 14206.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 255.0, "series": [{"data": [[0.0, 255.0], [600.0, 1.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 8.0], [1100.0, 6.0], [1200.0, 15.0], [1300.0, 8.0], [1400.0, 7.0], [1500.0, 12.0], [1600.0, 16.0], [1700.0, 13.0], [1800.0, 15.0], [1900.0, 11.0], [2000.0, 15.0], [2100.0, 10.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 20.0], [2500.0, 8.0], [2600.0, 9.0], [2800.0, 9.0], [2700.0, 13.0], [2900.0, 8.0], [3000.0, 5.0], [3100.0, 11.0], [3200.0, 11.0], [3300.0, 14.0], [3400.0, 19.0], [3500.0, 7.0], [3600.0, 7.0], [3700.0, 9.0], [3800.0, 12.0], [3900.0, 3.0], [4000.0, 8.0], [4200.0, 13.0], [4300.0, 35.0], [4100.0, 9.0], [4600.0, 18.0], [4500.0, 17.0], [4400.0, 16.0], [4700.0, 27.0], [4800.0, 16.0], [4900.0, 19.0], [5000.0, 16.0], [5100.0, 15.0], [5200.0, 12.0], [5300.0, 9.0], [5400.0, 21.0], [5500.0, 13.0], [5600.0, 15.0], [5800.0, 12.0], [5700.0, 10.0], [5900.0, 27.0], [6000.0, 13.0], [6100.0, 17.0], [6300.0, 12.0], [6200.0, 10.0], [6600.0, 6.0], [6500.0, 10.0], [6400.0, 5.0], [6800.0, 1.0], [6900.0, 1.0], [7300.0, 1.0], [7200.0, 1.0], [8200.0, 1.0], [9000.0, 1.0], [9300.0, 1.0], [9400.0, 1.0], [100.0, 1.0], [200.0, 1.0], [300.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[300.0, 1.0], [400.0, 3.0], [500.0, 7.0], [600.0, 10.0], [700.0, 15.0], [800.0, 16.0], [900.0, 11.0], [1000.0, 10.0], [1100.0, 7.0], [1200.0, 10.0], [1300.0, 13.0], [1400.0, 12.0], [1500.0, 10.0], [1600.0, 7.0], [1700.0, 10.0], [1800.0, 8.0], [1900.0, 12.0], [2000.0, 8.0], [2100.0, 5.0], [2200.0, 6.0], [2300.0, 15.0], [2400.0, 9.0], [2500.0, 7.0], [2600.0, 11.0], [2800.0, 6.0], [2700.0, 4.0], [2900.0, 6.0], [3000.0, 5.0], [3100.0, 4.0], [3200.0, 12.0], [3300.0, 6.0], [3400.0, 8.0], [3500.0, 8.0], [3600.0, 10.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 12.0], [4000.0, 9.0], [4100.0, 3.0], [4300.0, 8.0], [4200.0, 6.0], [4500.0, 5.0], [4400.0, 12.0], [4600.0, 11.0], [4800.0, 8.0], [4700.0, 14.0], [4900.0, 15.0], [5100.0, 16.0], [5000.0, 16.0], [5200.0, 17.0], [5300.0, 19.0], [5500.0, 13.0], [5400.0, 14.0], [5600.0, 23.0], [5700.0, 16.0], [5800.0, 13.0], [5900.0, 19.0], [6100.0, 13.0], [6000.0, 11.0], [6200.0, 13.0], [6300.0, 8.0], [6400.0, 13.0], [6500.0, 11.0], [6600.0, 16.0], [6900.0, 18.0], [6800.0, 15.0], [6700.0, 20.0], [7000.0, 13.0], [7100.0, 18.0], [7200.0, 16.0], [7300.0, 21.0], [7400.0, 12.0], [7500.0, 14.0], [7600.0, 12.0], [7700.0, 12.0], [7900.0, 18.0], [7800.0, 12.0], [8000.0, 12.0], [8100.0, 8.0], [8200.0, 11.0], [8300.0, 5.0], [8600.0, 5.0], [8500.0, 5.0], [8400.0, 5.0], [8700.0, 3.0], [8900.0, 2.0], [9100.0, 8.0], [8800.0, 5.0], [9200.0, 5.0], [9000.0, 3.0], [9400.0, 5.0], [9600.0, 2.0], [9500.0, 4.0], [9900.0, 4.0], [9800.0, 4.0], [10100.0, 3.0], [10000.0, 3.0], [10200.0, 2.0], [10400.0, 5.0], [10700.0, 6.0], [10600.0, 2.0], [10300.0, 3.0], [10500.0, 3.0], [10900.0, 2.0], [10800.0, 3.0], [11100.0, 1.0], [11200.0, 2.0], [11000.0, 1.0], [11400.0, 3.0], [11300.0, 1.0], [12100.0, 1.0], [12200.0, 1.0], [12600.0, 1.0], [12300.0, 1.0], [12800.0, 2.0], [13700.0, 1.0], [14300.0, 1.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[600.0, 2.0], [700.0, 1.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 4.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 3.0], [1900.0, 4.0], [2000.0, 3.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 3.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 4.0], [2800.0, 8.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 7.0], [3100.0, 10.0], [3300.0, 3.0], [3200.0, 1.0], [3400.0, 6.0], [3500.0, 11.0], [3700.0, 7.0], [3600.0, 6.0], [3800.0, 11.0], [3900.0, 8.0], [4000.0, 4.0], [4100.0, 9.0], [4200.0, 10.0], [4300.0, 8.0], [4400.0, 10.0], [4500.0, 9.0], [4600.0, 9.0], [4800.0, 6.0], [4700.0, 7.0], [4900.0, 13.0], [5000.0, 8.0], [5100.0, 17.0], [5300.0, 7.0], [5200.0, 9.0], [5500.0, 9.0], [5600.0, 6.0], [5400.0, 16.0], [5700.0, 7.0], [5800.0, 14.0], [6100.0, 12.0], [6000.0, 17.0], [5900.0, 17.0], [6300.0, 13.0], [6200.0, 21.0], [6500.0, 25.0], [6600.0, 21.0], [6400.0, 10.0], [6700.0, 27.0], [6900.0, 31.0], [6800.0, 27.0], [7000.0, 25.0], [7100.0, 24.0], [7400.0, 32.0], [7300.0, 31.0], [7200.0, 24.0], [7500.0, 30.0], [7600.0, 31.0], [7700.0, 21.0], [7800.0, 19.0], [7900.0, 19.0], [8000.0, 16.0], [8100.0, 16.0], [8300.0, 13.0], [8500.0, 10.0], [8200.0, 19.0], [8700.0, 10.0], [8400.0, 8.0], [8600.0, 3.0], [8800.0, 6.0], [8900.0, 6.0], [9100.0, 5.0], [9200.0, 3.0], [9000.0, 4.0], [9300.0, 5.0], [9500.0, 12.0], [9600.0, 4.0], [9400.0, 5.0], [9700.0, 2.0], [9800.0, 2.0], [10100.0, 7.0], [10200.0, 5.0], [10000.0, 1.0], [9900.0, 1.0], [10600.0, 3.0], [10300.0, 3.0], [10500.0, 5.0], [10700.0, 2.0], [10400.0, 1.0], [11000.0, 3.0], [11200.0, 3.0], [11100.0, 1.0], [10900.0, 3.0], [10800.0, 3.0], [11300.0, 3.0], [11400.0, 5.0], [11600.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [12000.0, 1.0], [12700.0, 1.0], [12500.0, 1.0], [12300.0, 1.0], [13500.0, 1.0], [14200.0, 1.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1863.0, "series": [{"data": [[0.0, 4.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 133.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1863.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 225.4, "minX": 1.74123822E12, "maxY": 621.0135652173902, "series": [{"data": [[1.74123828E12, 621.0135652173902], [1.74123822E12, 225.4]], "isOverall": false, "label": "User Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123828E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 3.0, "maxY": 14325.0, "series": [{"data": [[3.0, 5.0], [4.0, 3.0], [6.0, 5.5], [7.0, 5.0], [9.0, 3.0], [11.0, 3.0], [12.0, 4.666666666666667], [13.0, 5.0], [16.0, 2.3333333333333335], [19.0, 4.0], [21.0, 4.25], [22.0, 7.0], [25.0, 4.0], [27.0, 5.0], [28.0, 3.0], [29.0, 5.5], [30.0, 3.0], [33.0, 3.5], [32.0, 3.0], [35.0, 2.0], [34.0, 2.0], [36.0, 2.0], [38.0, 3.5], [41.0, 2.0], [40.0, 2.0], [43.0, 2.0], [42.0, 1.0], [44.0, 1.0], [47.0, 3.0], [46.0, 2.5], [49.0, 1.0], [50.0, 5.0], [53.0, 3.0], [52.0, 3.3333333333333335], [55.0, 2.0], [54.0, 2.0], [56.0, 1.0], [59.0, 2.0], [58.0, 2.0], [60.0, 2.0], [63.0, 5.0], [67.0, 4.0], [66.0, 4.0], [65.0, 5.0], [64.0, 5.0], [70.0, 3.0], [68.0, 3.0], [75.0, 3.6666666666666665], [72.0, 6.0], [79.0, 3.0], [77.0, 3.5], [83.0, 3.0], [82.0, 3.0], [81.0, 2.0], [80.0, 6.0], [87.0, 2.0], [86.0, 4.0], [85.0, 3.5], [91.0, 5.0], [90.0, 3.0], [89.0, 4.0], [88.0, 3.0], [95.0, 2.0], [94.0, 4.0], [93.0, 4.5], [99.0, 4.0], [98.0, 2.0], [97.0, 3.0], [96.0, 2.0], [103.0, 2.5], [101.0, 6.0], [100.0, 5.0], [107.0, 4.0], [106.0, 3.0], [105.0, 4.0], [104.0, 2.0], [110.0, 8.0], [109.0, 3.0], [108.0, 6.0], [114.0, 5.5], [112.0, 5.5], [119.0, 10.0], [118.0, 4.0], [117.0, 4.5], [116.0, 5.0], [123.0, 4.0], [122.0, 6.0], [121.0, 6.0], [120.0, 4.0], [126.0, 6.0], [125.0, 4.0], [124.0, 4.0], [135.0, 6.5], [133.0, 3.0], [132.0, 5.0], [131.0, 4.0], [130.0, 4.0], [129.0, 6.0], [143.0, 3.0], [142.0, 3.0], [141.0, 5.0], [140.0, 5.0], [139.0, 3.0], [138.0, 4.0], [137.0, 5.0], [136.0, 5.0], [151.0, 3.0], [150.0, 3.0], [149.0, 4.5], [147.0, 3.0], [145.0, 11.0], [159.0, 5.5], [158.0, 5.0], [156.0, 4.0], [155.0, 3.0], [154.0, 3.0], [153.0, 8.5], [167.0, 4.0], [166.0, 4.5], [164.0, 14.0], [163.0, 4.0], [161.0, 4.0], [160.0, 5.0], [175.0, 22.0], [174.0, 8.0], [173.0, 10.0], [172.0, 23.0], [171.0, 7.0], [169.0, 10.0], [168.0, 6.0], [183.0, 32.0], [182.0, 8.0], [181.0, 31.0], [179.0, 12.0], [178.0, 4.0], [177.0, 5.0], [176.0, 5.0], [191.0, 26.0], [190.0, 19.0], [189.0, 14.0], [188.0, 24.0], [186.0, 19.0], [185.0, 30.0], [184.0, 2.0], [199.0, 16.0], [198.0, 3.0], [197.0, 24.0], [196.0, 80.0], [195.0, 25.0], [194.0, 80.0], [193.0, 8.0], [192.0, 8.0], [207.0, 23.0], [206.0, 13.0], [205.0, 23.0], [204.0, 17.0], [203.0, 18.0], [202.0, 19.0], [201.0, 16.0], [200.0, 17.0], [215.0, 23.0], [214.0, 29.0], [213.0, 13.0], [212.0, 6.0], [211.0, 14.0], [210.0, 9.0], [209.0, 20.0], [208.0, 25.0], [223.0, 32.0], [222.0, 30.0], [221.0, 35.0], [220.0, 16.0], [219.0, 18.0], [218.0, 6.0], [217.0, 12.0], [216.0, 4.0], [231.0, 19.0], [230.0, 9.0], [229.0, 23.0], [228.0, 10.0], [227.0, 34.0], [226.0, 22.0], [225.0, 37.0], [224.0, 15.0], [239.0, 13.0], [238.0, 15.0], [237.0, 59.0], [236.0, 31.0], [235.0, 23.0], [234.0, 8.0], [233.0, 24.0], [232.0, 10.0], [247.0, 15.0], [246.0, 32.0], [245.0, 33.0], [244.0, 17.5], [242.0, 37.0], [241.0, 28.0], [240.0, 18.0], [255.0, 16.0], [254.0, 26.0], [253.0, 22.0], [252.0, 133.0], [251.0, 26.0], [250.0, 9.0], [249.0, 23.0], [248.0, 40.0], [259.0, 1584.0], [270.0, 943.0], [271.0, 513.0], [269.0, 1125.0], [258.0, 1666.0], [257.0, 352.0], [256.0, 16.0], [266.0, 1090.0], [264.0, 1591.0], [263.0, 1367.0], [262.0, 1108.0], [261.0, 1278.0], [260.0, 545.0], [285.0, 2003.0], [286.0, 1212.0], [284.0, 1649.0], [275.0, 1298.0], [273.0, 1115.0], [272.0, 1082.0], [283.0, 1611.0], [282.0, 1043.0], [281.0, 1418.0], [280.0, 1029.0], [278.0, 1653.0], [277.0, 1359.5], [291.0, 1633.0], [302.0, 1705.5], [300.0, 1287.6666666666667], [299.0, 1243.0], [296.0, 1408.0], [295.0, 1255.0], [294.0, 1278.3333333333333], [293.0, 1203.0], [289.0, 1344.0], [288.0, 1356.0], [316.0, 2049.0], [318.0, 1924.0], [319.0, 1627.0], [317.0, 2106.0], [315.0, 1639.5], [313.0, 1543.0], [311.0, 1412.0], [305.0, 1470.5], [307.0, 1555.5], [306.0, 1347.0], [310.0, 1599.0], [309.0, 1420.0], [333.0, 1904.0], [334.0, 1770.0], [332.0, 1918.0], [331.0, 1681.0], [329.0, 2211.0], [328.0, 1703.0], [327.0, 1778.0], [326.0, 1911.3333333333333], [323.0, 1617.0], [322.0, 1799.0], [321.0, 1741.0], [320.0, 1628.0], [349.0, 1850.0], [350.0, 1854.0], [348.0, 1880.0], [339.0, 1830.0], [337.0, 1851.0], [336.0, 1906.6666666666667], [347.0, 1923.0], [346.0, 1816.0], [345.0, 1785.0], [344.0, 2026.0], [343.0, 1818.0], [342.0, 1768.0], [340.0, 1827.0], [367.0, 2742.0], [360.0, 1301.0], [366.0, 2082.5], [364.0, 1971.0], [363.0, 2015.0], [362.0, 2010.0], [361.0, 2048.0], [358.0, 2179.0], [354.0, 2077.5], [352.0, 1997.5], [357.0, 2001.0], [356.0, 2477.0], [382.0, 2171.0], [383.0, 2184.0], [380.0, 2269.0], [371.0, 2196.5], [369.0, 2398.0], [368.0, 2481.0], [378.0, 2258.0], [377.0, 2160.0], [376.0, 2514.5], [374.0, 2059.0], [373.0, 2045.0], [372.0, 2061.0], [397.0, 2428.0], [398.0, 2552.0], [396.0, 2524.5], [387.0, 2324.5], [385.0, 2264.0], [384.0, 2254.0], [394.0, 3239.0], [393.0, 2406.0], [392.0, 2309.0], [391.0, 2422.0], [390.0, 2306.5], [388.0, 2280.0], [414.0, 2761.0], [415.0, 2794.0], [413.0, 2549.0], [412.0, 2589.0], [410.0, 2673.0], [409.0, 2492.0], [408.0, 2421.0], [407.0, 2436.0], [400.0, 2460.0], [402.0, 2410.0], [401.0, 2493.0], [406.0, 2542.0], [405.0, 2491.0], [430.0, 2712.0], [428.0, 2008.0], [431.0, 2711.0], [429.0, 2938.0], [427.0, 2947.5], [425.0, 2690.0], [424.0, 2675.0], [423.0, 2960.0], [419.0, 2749.0], [417.0, 2526.0], [416.0, 2528.0], [421.0, 2814.0], [446.0, 3156.5], [447.0, 2906.0], [444.0, 3003.0], [435.0, 2997.0], [433.0, 2727.0], [432.0, 2854.0], [442.0, 3195.0], [441.0, 2855.0], [440.0, 2847.0], [439.0, 3101.0], [438.0, 2839.0], [437.0, 2795.0], [436.0, 2752.0], [462.0, 3464.0], [463.0, 3288.0], [461.0, 3237.0], [460.0, 3301.0], [459.0, 3319.0], [458.0, 3271.0], [457.0, 3215.0], [456.0, 3359.0], [455.0, 3077.0], [448.0, 3113.0], [451.0, 3156.0], [450.0, 3266.5], [454.0, 3080.0], [453.0, 3115.0], [452.0, 3167.0], [477.0, 3440.0], [478.0, 3364.0], [476.0, 3367.0], [467.0, 3217.0], [466.0, 3282.0], [464.0, 3284.0], [475.0, 3389.0], [473.0, 3469.0], [472.0, 3307.0], [471.0, 3311.0], [470.0, 3344.0], [469.0, 3356.0], [468.0, 3220.0], [494.0, 3735.0], [495.0, 3441.0], [493.0, 3431.0], [492.0, 3817.0], [490.0, 3444.0], [489.0, 3445.0], [488.0, 3414.0], [487.0, 3526.6666666666665], [483.0, 3440.0], [482.0, 3395.0], [481.0, 3404.0], [480.0, 3405.5], [484.0, 3448.0], [509.0, 3692.0], [497.0, 1137.25], [498.0, 2338.0], [500.0, 2222.0], [501.0, 3506.0], [503.0, 3591.0], [496.0, 3441.0], [502.0, 3527.0], [506.0, 2274.0], [505.0, 3567.0], [504.0, 3520.0], [511.0, 2059.6666666666665], [510.0, 3812.0], [508.0, 3697.0], [499.0, 3671.0], [507.0, 3786.0], [518.0, 2757.0], [542.0, 4413.5], [514.0, 2377.5], [513.0, 3754.5], [515.0, 3828.0], [517.0, 3760.0], [516.0, 3825.0], [527.0, 4340.0], [526.0, 3926.0], [525.0, 4024.0], [524.0, 4035.0], [523.0, 4164.0], [522.0, 3845.0], [521.0, 3838.0], [520.0, 3874.0], [528.0, 2950.0], [529.0, 2816.5], [533.0, 4121.0], [530.0, 4030.0], [535.0, 4098.0], [534.0, 4213.0], [543.0, 4188.0], [540.0, 4181.0], [539.0, 4116.0], [538.0, 4238.0], [537.0, 4326.0], [536.0, 4155.0], [519.0, 3819.0], [572.0, 4804.0], [544.0, 2422.3333333333335], [548.0, 2929.0], [547.0, 4199.0], [546.0, 4319.5], [550.0, 4295.0], [549.0, 4231.0], [569.0, 4805.0], [568.0, 4446.0], [552.0, 3773.6666666666665], [554.0, 4666.0], [553.0, 4334.0], [556.0, 4330.0], [555.0, 4330.0], [559.0, 4321.0], [558.0, 4390.0], [575.0, 4586.0], [561.0, 4746.0], [560.0, 4321.0], [563.0, 4389.0], [562.0, 4391.0], [565.0, 4585.0], [564.0, 4384.0], [567.0, 4419.0], [566.0, 4738.0], [574.0, 4734.0], [573.0, 4415.0], [571.0, 4498.0], [570.0, 4382.0], [604.0, 4424.0], [586.0, 2936.0], [585.0, 4925.0], [584.0, 4924.0], [587.0, 4762.0], [589.0, 4850.0], [588.0, 4930.0], [591.0, 4906.0], [577.0, 4579.0], [576.0, 4583.0], [579.0, 4743.0], [578.0, 4679.0], [581.0, 4727.0], [580.0, 4723.0], [583.0, 4771.0], [582.0, 4749.0], [590.0, 4895.0], [607.0, 4119.0], [593.0, 4902.0], [592.0, 4751.0], [595.0, 4945.0], [594.0, 5015.0], [597.0, 4985.0], [596.0, 4976.0], [599.0, 4992.0], [598.0, 4993.0], [606.0, 4170.0], [605.0, 4264.0], [603.0, 4643.0], [602.0, 4630.0], [601.0, 4951.0], [600.0, 5061.0], [634.0, 4348.0], [638.0, 4361.0], [625.0, 3181.0], [627.0, 3357.0], [626.0, 4329.0], [629.0, 4414.0], [628.0, 4333.0], [631.0, 4394.0], [630.0, 4404.0], [639.0, 3613.0], [624.0, 4429.0], [637.0, 4358.0], [636.0, 4375.0], [635.0, 4377.5], [632.0, 4398.0], [615.0, 4372.0], [614.0, 4356.0], [613.0, 4233.0], [612.0, 4305.0], [611.0, 4224.0], [610.0, 4434.0], [609.0, 4167.0], [608.0, 4268.0], [623.0, 4476.0], [622.0, 4436.0], [621.0, 4374.0], [620.0, 4448.0], [619.0, 5913.0], [618.0, 4339.0], [617.0, 4358.0], [616.0, 4362.0], [668.0, 3387.0], [647.0, 3763.5], [640.0, 3722.0], [641.0, 4594.0], [643.0, 4494.0], [642.0, 4485.0], [655.0, 4846.0], [654.0, 4792.0], [653.0, 4777.0], [652.0, 6938.0], [651.0, 4778.0], [650.0, 4890.0], [649.0, 4758.0], [648.0, 4727.0], [644.0, 3763.5], [646.0, 3932.0], [645.0, 4607.0], [663.0, 3291.0], [667.0, 4956.0], [666.0, 4959.0], [665.0, 4964.0], [664.0, 5024.0], [670.0, 3363.0], [671.0, 2689.25], [657.0, 4869.0], [656.0, 4790.0], [659.0, 4850.0], [658.0, 5222.0], [661.0, 4954.0], [660.0, 6834.0], [662.0, 4892.0], [669.0, 4933.0], [698.0, 3564.0], [702.0, 9081.0], [680.0, 3384.0], [682.0, 5058.0], [681.0, 5116.0], [684.0, 5063.0], [683.0, 5219.0], [686.0, 5162.0], [685.0, 5161.0], [687.0, 3125.333333333333], [689.0, 3684.5], [691.0, 5102.0], [690.0, 9414.0], [693.0, 5227.0], [692.0, 5211.0], [695.0, 5170.0], [694.0, 9345.0], [688.0, 3467.5], [697.0, 5131.0], [696.0, 5128.0], [679.0, 5096.0], [678.0, 5117.0], [677.0, 6595.0], [676.0, 5028.0], [675.0, 5002.0], [674.0, 5038.0], [673.0, 5004.0], [672.0, 5037.0], [699.0, 5292.0], [703.0, 5351.0], [701.0, 5200.0], [700.0, 5247.0], [733.0, 5651.0], [724.0, 4197.0], [723.0, 5569.0], [722.0, 5596.0], [721.0, 5479.0], [720.0, 5687.0], [725.0, 5602.0], [727.0, 5538.0], [726.0, 5606.0], [735.0, 5719.0], [734.0, 5683.0], [732.0, 5556.0], [731.0, 5654.0], [730.0, 5601.0], [729.0, 5567.0], [728.0, 5559.0], [711.0, 5478.0], [710.0, 5434.0], [709.0, 5379.0], [708.0, 5364.0], [707.0, 5340.0], [706.0, 5295.0], [705.0, 5443.0], [704.0, 5344.0], [719.0, 5464.0], [718.0, 5481.0], [717.0, 5511.0], [716.0, 5433.0], [715.0, 5429.0], [714.0, 5522.0], [713.0, 5718.0], [712.0, 5380.0], [762.0, 6027.0], [766.0, 5896.0], [757.0, 4089.0], [759.0, 5949.0], [758.0, 5900.0], [756.0, 4104.5], [767.0, 5940.0], [753.0, 5908.0], [752.0, 5750.0], [755.0, 5894.0], [754.0, 5861.0], [765.0, 5902.0], [764.0, 6121.0], [763.0, 5896.0], [761.0, 5942.0], [760.0, 6000.0], [751.0, 5790.0], [736.0, 5612.0], [738.0, 5705.0], [737.0, 5640.0], [740.0, 5724.0], [739.0, 5694.0], [743.0, 5729.0], [742.0, 6968.0], [750.0, 5821.0], [749.0, 5822.0], [748.0, 5770.0], [747.0, 5860.0], [746.0, 5837.0], [745.0, 5686.0], [744.0, 5706.0], [796.0, 6394.0], [774.0, 4213.0], [772.0, 4189.0], [769.0, 4171.5], [768.0, 5962.0], [771.0, 5944.0], [770.0, 6111.0], [783.0, 5974.0], [782.0, 6106.0], [773.0, 4168.0], [777.0, 4313.0], [776.0, 6196.0], [778.0, 6160.0], [780.0, 6090.0], [779.0, 6195.0], [781.0, 4286.5], [799.0, 4468.0], [785.0, 5972.0], [784.0, 5943.0], [787.0, 6299.0], [786.0, 6085.0], [789.0, 6143.0], [788.0, 6084.0], [791.0, 6156.0], [790.0, 6067.0], [798.0, 6372.0], [797.0, 6238.0], [795.0, 6427.0], [794.0, 6153.0], [793.0, 6221.0], [792.0, 6183.0], [775.0, 5995.0], [829.0, 6308.0], [801.0, 4395.0], [815.0, 6500.0], [800.0, 6444.0], [814.0, 6534.0], [813.0, 6546.0], [812.0, 6565.0], [811.0, 6588.0], [810.0, 6600.0], [809.0, 6568.0], [808.0, 6565.0], [824.0, 6332.0], [807.0, 6620.0], [806.0, 6501.0], [805.0, 6467.0], [804.0, 6446.0], [803.0, 6637.0], [802.0, 6508.0], [818.0, 4630.5], [817.0, 6616.0], [816.0, 6633.0], [819.0, 6330.0], [821.0, 7293.0], [820.0, 6295.0], [823.0, 7363.0], [822.0, 6302.0], [831.0, 6266.0], [830.0, 6291.0], [828.0, 6325.0], [827.0, 6306.0], [826.0, 6351.0], [825.0, 6320.0], [860.0, 5744.0], [842.0, 4409.0], [841.0, 6038.0], [840.0, 6181.0], [843.0, 6032.0], [844.0, 4402.5], [863.0, 5504.0], [849.0, 5950.0], [848.0, 5954.0], [851.0, 5940.0], [850.0, 5949.0], [853.0, 5961.0], [852.0, 6084.0], [855.0, 5920.0], [854.0, 5979.0], [862.0, 5562.0], [861.0, 5629.0], [859.0, 5687.0], [858.0, 5876.0], [857.0, 5851.0], [856.0, 5944.0], [847.0, 6006.0], [833.0, 6216.0], [832.0, 6244.0], [835.0, 6238.0], [834.0, 6224.0], [837.0, 6169.0], [836.0, 6161.0], [839.0, 6140.0], [838.0, 6161.0], [846.0, 6032.0], [845.0, 5927.0], [892.0, 4035.5], [895.0, 3750.0], [881.0, 5328.0], [880.0, 5334.0], [883.0, 5307.0], [882.0, 5279.0], [885.0, 5222.0], [884.0, 5290.0], [894.0, 4194.5], [893.0, 4890.0], [891.0, 5486.0], [890.0, 4886.0], [889.0, 5176.0], [888.0, 5064.0], [879.0, 6396.0], [864.0, 5489.0], [866.0, 5441.0], [865.0, 5420.0], [868.0, 5567.0], [867.0, 5463.0], [871.0, 5518.5], [869.0, 5515.0], [878.0, 5487.0], [877.0, 5484.0], [876.0, 5475.0], [875.0, 5480.0], [874.0, 5490.0], [873.0, 5484.0], [872.0, 5485.0], [887.0, 5156.0], [886.0, 5196.0], [924.0, 4570.0], [927.0, 4620.0], [913.0, 4600.0], [912.0, 4639.0], [915.0, 4557.0], [914.0, 4686.0], [917.0, 4519.0], [916.0, 4582.0], [926.0, 4564.0], [925.0, 4569.0], [923.0, 4603.0], [922.0, 4592.0], [921.0, 4551.0], [920.0, 4570.0], [911.0, 4730.0], [897.0, 4974.0], [896.0, 4774.0], [899.0, 5280.0], [898.0, 4831.0], [901.0, 4768.0], [900.0, 4645.0], [903.0, 4836.0], [902.0, 4602.0], [910.0, 4628.0], [909.0, 5875.0], [908.0, 4791.0], [907.0, 4870.0], [906.0, 4825.0], [905.0, 4758.0], [904.0, 4767.0], [919.0, 4635.0], [918.0, 4565.0], [940.0, 3642.0], [941.0, 3631.0], [928.0, 4609.0], [930.0, 4309.0], [929.0, 4615.0], [939.0, 3616.0], [938.0, 3643.0], [937.0, 3936.0], [936.0, 3728.0], [935.0, 3786.0], [934.0, 3860.0], [933.0, 3796.0], [932.0, 4506.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[481.8019999999996, 2970.694]], "isOverall": false, "label": "16 Get Stock Prices Request-Aggregated", "isController": false}, {"data": [[125.0, 499.0], [128.0, 533.0], [129.0, 528.0], [132.0, 622.0], [133.0, 613.0], [134.0, 645.0], [136.0, 669.0], [138.0, 687.0], [139.0, 466.0], [140.0, 702.0], [141.0, 598.0], [143.0, 736.0], [145.0, 760.0], [146.0, 772.0], [147.0, 777.0], [148.0, 791.0], [155.0, 759.0], [158.0, 880.0], [159.0, 793.0], [160.0, 908.5], [161.0, 758.0], [162.0, 882.5], [164.0, 851.0], [172.0, 858.3333333333334], [174.0, 939.0], [175.0, 978.0], [179.0, 1093.0], [180.0, 793.0], [192.0, 898.5], [200.0, 1134.0], [202.0, 856.0], [204.0, 988.0], [210.0, 935.0], [211.0, 603.0], [212.0, 963.5], [213.0, 1182.0], [215.0, 619.0], [216.0, 1225.0], [217.0, 1021.0], [220.0, 1043.0], [221.0, 575.0], [225.0, 881.0], [226.0, 631.0], [227.0, 1160.5], [229.0, 1386.0], [240.0, 1534.0], [245.0, 747.0], [246.0, 1009.0], [248.0, 1166.0], [249.0, 1096.0], [250.0, 1174.0], [253.0, 1611.0], [254.0, 1338.0], [255.0, 875.0], [258.0, 1447.0], [260.0, 1209.0], [266.0, 1283.6666666666667], [267.0, 845.5], [268.0, 1438.0], [269.0, 1244.0], [289.0, 1475.0], [290.0, 1278.5], [293.0, 1571.0], [296.0, 1663.0], [308.0, 1459.0], [309.0, 1435.4], [310.0, 1915.0], [311.0, 1970.0], [312.0, 803.0], [314.0, 1402.0], [315.0, 966.0], [318.0, 1244.0], [321.0, 944.0], [322.0, 1282.0], [324.0, 1813.0], [325.0, 1755.0], [327.0, 2048.0], [329.0, 1381.0], [330.0, 1902.0], [331.0, 1813.0], [335.0, 1634.0], [337.0, 1254.0], [342.0, 1496.0], [343.0, 1680.0], [350.0, 1741.0], [352.0, 1794.0], [353.0, 1373.0], [357.0, 1542.0], [358.0, 1349.0], [360.0, 1762.0], [362.0, 2146.0], [363.0, 1763.0], [366.0, 1652.0], [374.0, 1760.6666666666667], [375.0, 2350.0], [381.0, 2459.0], [388.0, 2395.0], [392.0, 2041.0], [395.0, 1131.0], [402.0, 2327.5], [405.0, 2540.0], [407.0, 1865.0], [409.0, 1967.0], [412.0, 2045.0], [413.0, 2330.0], [424.0, 2563.0], [428.0, 2001.0], [427.0, 2297.0], [431.0, 2366.0], [433.0, 2373.0], [439.0, 2705.5], [441.0, 1823.5], [442.0, 2649.0], [452.0, 1797.0], [455.0, 2364.0], [470.0, 1681.0], [474.0, 2436.0], [476.0, 1840.0], [478.0, 2510.5], [480.0, 1741.0], [486.0, 2488.0], [487.0, 1945.0], [491.0, 2205.5], [499.0, 2595.25], [496.0, 2453.75], [497.0, 2129.25], [498.0, 1913.0], [503.0, 1995.0], [504.0, 1937.0], [505.0, 2747.0], [510.0, 2420.0], [511.0, 2700.3333333333335], [512.0, 2310.0], [513.0, 2999.0], [514.0, 2450.0], [518.0, 3239.0], [527.0, 2503.0], [537.0, 3234.0], [539.0, 3109.0], [547.0, 2629.0], [544.0, 2929.6666666666665], [545.0, 1986.5], [546.0, 3100.0], [548.0, 3269.0], [550.0, 2996.0], [552.0, 3300.0], [572.0, 3144.75], [573.0, 3187.0], [574.0, 1946.0], [575.0, 3442.5], [580.0, 3031.0], [581.0, 2844.0], [583.0, 4079.0], [585.0, 3445.0], [587.0, 3552.0], [588.0, 1892.0], [592.0, 3677.0], [604.0, 14325.0], [622.0, 2603.0], [614.0, 7799.0], [609.0, 13744.0], [634.0, 3608.0], [636.0, 2175.0], [639.0, 2879.0], [617.0, 3301.0], [618.0, 2528.0], [619.0, 2470.0], [625.0, 3266.0], [626.0, 2033.0], [627.0, 3569.0], [628.0, 3051.0], [631.0, 4171.0], [644.0, 6406.0], [643.0, 2964.0], [647.0, 3780.0], [664.0, 11255.0], [648.0, 3723.0], [650.0, 3288.0], [652.0, 3895.5], [653.0, 2722.0], [665.0, 3431.0], [666.0, 4077.0], [669.0, 5964.25], [671.0, 4551.0], [685.0, 3958.0], [678.0, 2931.0], [680.0, 4383.0], [682.0, 3806.0], [683.0, 3210.0], [687.0, 3706.0], [686.0, 11824.0], [688.0, 2801.0], [693.0, 7225.5], [698.0, 8681.333333333334], [700.0, 3502.0], [702.0, 3845.0], [711.0, 3204.0], [706.0, 7335.0], [709.0, 4616.0], [710.0, 4029.0], [718.0, 3463.0], [717.0, 11223.0], [722.0, 3332.0], [732.0, 10088.0], [728.0, 4088.6666666666665], [730.0, 4305.5], [724.0, 3486.0], [725.0, 3345.0], [726.0, 4276.0], [727.0, 9602.4], [736.0, 6447.8], [747.0, 6979.0], [746.0, 9575.666666666666], [745.0, 10232.333333333334], [744.0, 9220.0], [749.0, 4659.0], [751.0, 7242.75], [750.0, 10229.0], [756.0, 4627.333333333333], [763.0, 5468.0], [765.0, 3983.0], [767.0, 4236.0], [753.0, 9742.666666666666], [752.0, 10355.0], [754.0, 10025.0], [760.0, 11421.0], [743.0, 12244.0], [740.0, 9502.0], [794.0, 4189.0], [769.0, 6330.333333333333], [768.0, 4141.5], [770.0, 6591.5], [771.0, 8250.666666666666], [773.0, 4063.0], [774.0, 8687.0], [775.0, 8905.125], [793.0, 8227.2], [792.0, 8474.5], [796.0, 4059.0], [795.0, 8414.333333333332], [797.0, 3915.0], [798.0, 7919.888888888889], [799.0, 7750.0], [784.0, 7834.0], [785.0, 4565.0], [786.0, 6359.5], [787.0, 3921.0], [788.0, 6804.333333333333], [791.0, 4706.0], [790.0, 8256.5], [776.0, 6333.5], [777.0, 5473.0], [781.0, 7838.9285714285725], [780.0, 8102.0], [779.0, 8184.0], [778.0, 8045.0], [782.0, 8085.999999999999], [826.0, 6990.333333333333], [812.0, 5005.0], [803.0, 5002.0], [802.0, 7901.666666666666], [801.0, 7721.333333333333], [806.0, 7954.4], [804.0, 7558.0], [824.0, 7339.0], [807.0, 7732.0], [827.0, 7208.666666666667], [828.0, 4450.666666666667], [831.0, 8333.333333333334], [830.0, 7664.75], [829.0, 7813.2], [809.0, 6438.5], [808.0, 8874.0], [810.0, 4744.0], [811.0, 4392.0], [813.0, 5187.0], [814.0, 6934.0], [817.0, 7599.571428571428], [818.0, 7486.260869565217], [819.0, 6636.0], [821.0, 5743.0], [822.0, 5328.0], [837.0, 7452.333333333333], [836.0, 6290.666666666667], [835.0, 7078.4], [833.0, 7442.75], [832.0, 7267.5], [838.0, 5401.5], [839.0, 6931.5], [843.0, 7113.0], [842.0, 7178.333333333333], [840.0, 6992.363636363637], [844.0, 4670.0], [847.0, 8227.764705882351], [845.0, 6696.5], [853.0, 8251.5], [851.0, 9106.0], [855.0, 6907.0], [854.0, 8538.0], [862.0, 7259.454545454545], [861.0, 6810.4], [860.0, 6856.428571428571], [859.0, 6929.4], [858.0, 6886.0], [857.0, 7060.714285714285], [863.0, 6524.0], [878.0, 6285.636363636363], [871.0, 5482.333333333333], [872.0, 5058.0], [874.0, 7268.2], [873.0, 6588.0], [876.0, 6487.25], [877.0, 5684.0], [879.0, 6716.4], [867.0, 6347.0], [864.0, 6549.75], [881.0, 6116.285714285715], [886.0, 5494.8], [885.0, 7035.0], [884.0, 6039.222222222223], [883.0, 5772.5], [882.0, 6084.0], [887.0, 7327.0], [895.0, 6089.0], [894.0, 6827.5], [893.0, 5606.0], [891.0, 6402.857142857143], [890.0, 6350.833333333333], [889.0, 6699.750000000001], [888.0, 6563.666666666667], [922.0, 5230.333333333333], [896.0, 5571.5], [900.0, 8195.0], [898.0, 6749.733333333334], [903.0, 5721.0], [901.0, 5921.0], [911.0, 5436.0], [910.0, 5999.294117647059], [909.0, 6146.0], [908.0, 6477.95], [907.0, 6241.2], [906.0, 7139.0], [905.0, 7197.666666666667], [914.0, 5635.5], [919.0, 5759.5], [918.0, 6376.333333333333], [917.0, 5303.0], [916.0, 6053.0], [915.0, 7052.666666666667], [920.0, 4733.0], [921.0, 5488.5], [923.0, 4037.0], [925.0, 5181.0], [927.0, 5181.0], [913.0, 7188.0], [912.0, 5779.000000000001], [926.0, 5212.0], [941.0, 4900.875], [930.0, 5168.5], [929.0, 5431.533333333334], [928.0, 5899.0], [931.0, 5406.0], [932.0, 5161.9705882352955], [933.0, 5212.2307692307695], [934.0, 5415.222222222223], [935.0, 5129.5], [936.0, 5156.0], [937.0, 5065.333333333333], [939.0, 5933.0], [940.0, 5494.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[715.8430000000004, 5359.877]], "isOverall": false, "label": "14 Register Request-Aggregated", "isController": false}, {"data": [[151.0, 4972.25], [159.0, 8087.0], [158.0, 6100.0], [156.0, 7567.466666666667], [154.0, 8731.25], [153.0, 9045.656249999998], [167.0, 9248.777777777777], [166.0, 7579.0], [164.0, 6457.5], [163.0, 10488.0], [162.0, 6239.5], [161.0, 7925.6], [160.0, 10216.5], [175.0, 6812.0], [173.0, 9793.0], [172.0, 7415.75], [171.0, 7735.0], [169.0, 5567.0], [168.0, 7039.0], [183.0, 3802.6666666666665], [182.0, 5434.0], [181.0, 7454.0], [179.0, 5563.0], [178.0, 5245.2], [177.0, 4924.0], [176.0, 7094.333333333334], [191.0, 6008.0], [188.0, 6218.0], [186.0, 6913.75], [184.0, 5876.0], [194.0, 6315.0], [204.0, 4629.0], [202.0, 4957.0], [215.0, 6248.0], [214.0, 6687.0], [212.0, 5414.5], [210.0, 6668.5], [208.0, 5605.0], [221.0, 6493.5], [220.0, 7197.0], [218.0, 5565.0], [217.0, 5489.0], [216.0, 6798.5], [231.0, 9068.0], [229.0, 9715.0], [227.0, 5463.0], [226.0, 6278.0], [225.0, 5911.0], [239.0, 6210.0], [237.0, 7321.0], [235.0, 6574.0], [232.0, 6573.0], [245.0, 632.0], [246.0, 7333.0], [244.0, 6691.0], [240.0, 6386.0], [248.0, 3798.5], [251.0, 6569.0], [260.0, 6288.0], [257.0, 5577.0], [256.0, 7001.0], [279.0, 804.0], [273.0, 6167.5], [294.0, 1068.0], [302.0, 786.0], [291.0, 6097.0], [304.0, 959.0], [305.0, 1123.0], [315.0, 1275.0], [316.0, 1339.0], [320.0, 1022.0], [321.0, 1121.0], [322.0, 999.0], [324.0, 1278.0], [327.0, 1418.0], [329.0, 1473.0], [323.0, 5616.0], [337.0, 1195.0], [342.0, 1528.0], [339.0, 7467.0], [336.0, 5320.0], [366.0, 1363.0], [367.0, 1769.0], [364.0, 9718.0], [361.0, 6136.0], [377.0, 1906.0], [381.0, 1863.0], [376.0, 5893.0], [386.0, 2064.0], [395.0, 1847.0], [398.0, 2091.0], [400.0, 2133.0], [410.0, 5523.0], [401.0, 5979.0], [427.0, 2398.0], [429.0, 7000.0], [419.0, 6953.0], [416.0, 6177.0], [437.0, 2420.0], [440.0, 2598.0], [445.0, 1428.0], [447.0, 6339.25], [452.0, 1939.0], [463.0, 5481.0], [455.0, 5816.0], [448.0, 6292.0], [468.0, 2031.0], [473.0, 4116.5], [476.0, 2191.0], [478.0, 6932.0], [489.0, 2803.0], [494.0, 2424.0], [491.0, 5443.0], [480.0, 5451.0], [498.0, 1958.0], [509.0, 2572.0], [510.0, 4956.0], [505.0, 7976.0], [504.0, 5741.5], [500.0, 6073.0], [516.0, 4124.5], [512.0, 2274.0], [513.0, 2508.0], [515.0, 3173.0], [517.0, 2774.0], [524.0, 2864.0], [526.0, 5428.0], [537.0, 2832.0], [539.0, 4618.0], [540.0, 5181.5], [541.0, 6701.0], [533.0, 6687.0], [548.0, 3027.0], [550.0, 3105.5], [559.0, 3025.0], [562.0, 2926.5], [569.0, 3839.0], [573.0, 7189.375], [560.0, 9593.0], [556.0, 6938.0], [588.0, 3114.0], [577.0, 4349.0], [584.0, 3748.6666666666665], [585.0, 3999.0], [586.0, 3547.0], [590.0, 6794.5], [594.0, 5287.0], [593.0, 5690.0], [592.0, 6674.333333333333], [597.0, 6927.666666666667], [596.0, 7574.666666666667], [599.0, 6212.0], [598.0, 8017.0], [605.0, 8662.666666666666], [604.0, 6536.0], [603.0, 7400.0], [601.0, 8649.0], [600.0, 7494.333333333334], [583.0, 10349.0], [582.0, 7441.0], [578.0, 5365.0], [625.0, 6058.5], [613.0, 3189.0], [611.0, 7708.0], [609.0, 10058.0], [608.0, 7402.666666666667], [614.0, 8378.0], [632.0, 5872.5], [633.0, 2758.0], [634.0, 4158.0], [635.0, 4293.0], [637.0, 6307.0], [636.0, 7147.666666666667], [638.0, 3594.5], [639.0, 7667.75], [622.0, 3903.0], [620.0, 8101.6], [618.0, 7453.0], [617.0, 6505.75], [623.0, 6294.142857142857], [626.0, 4765.5], [627.0, 6456.999999999999], [629.0, 5388.6], [630.0, 7440.666666666667], [631.0, 6356.5], [664.0, 7217.333333333333], [642.0, 2915.0], [641.0, 8507.0], [643.0, 6324.0], [644.0, 7192.0], [646.0, 6513.833333333333], [645.0, 7589.999999999999], [647.0, 9064.333333333334], [648.0, 3814.0], [650.0, 10859.0], [649.0, 7491.166666666667], [652.0, 8346.0], [651.0, 8132.666666666667], [654.0, 7782.0], [671.0, 10901.0], [656.0, 7452.8], [660.0, 7110.0], [657.0, 6611.0], [662.0, 11012.0], [661.0, 6992.75], [670.0, 10295.0], [669.0, 7014.0], [667.0, 7896.75], [666.0, 5112.0], [699.0, 6582.0], [679.0, 8260.333333333334], [678.0, 7862.5], [677.0, 6987.0], [676.0, 7446.333333333334], [675.0, 6649.0], [698.0, 7316.0], [682.0, 3300.5], [681.0, 8417.0], [686.0, 7752.166666666666], [685.0, 7386.0], [687.0, 7040.545454545454], [691.0, 7031.9], [694.0, 3204.0], [693.0, 6787.0], [692.0, 10529.0], [700.0, 3665.0], [701.0, 10375.0], [703.0, 7523.0], [689.0, 9536.5], [688.0, 7136.0], [702.0, 9545.0], [729.0, 2920.0], [708.0, 5513.5], [704.0, 6117.0], [707.0, 8361.0], [706.0, 8944.0], [710.0, 7016.666666666667], [709.0, 9338.5], [711.0, 8464.5], [719.0, 7470.5], [718.0, 8256.0], [717.0, 6949.0], [715.0, 7528.0], [714.0, 7706.5], [722.0, 7875.833333333333], [723.0, 6075.0], [724.0, 7187.0], [726.0, 3546.0], [725.0, 7668.8], [727.0, 7745.2], [733.0, 2484.0], [731.0, 7631.0], [735.0, 6584.5], [721.0, 7166.5], [720.0, 7908.5], [760.0, 6490.25], [740.0, 7451.416666666666], [738.0, 4165.0], [737.0, 7675.333333333333], [736.0, 7590.333333333333], [739.0, 8744.666666666666], [751.0, 7886.0], [750.0, 7549.5], [749.0, 8365.25], [748.0, 8380.0], [747.0, 7719.4], [746.0, 7399.0], [745.0, 7939.714285714285], [744.0, 7404.0], [741.0, 4472.0], [743.0, 7248.0], [742.0, 7518.5], [752.0, 6103.0], [753.0, 7071.0], [756.0, 3868.0], [758.0, 7775.0], [757.0, 7399.0], [755.0, 3190.0], [764.0, 7549.0], [763.0, 7271.4], [761.0, 7673.333333333333], [798.0, 8074.5], [774.0, 6869.2], [775.0, 6148.0], [793.0, 8903.0], [792.0, 7750.333333333333], [797.0, 8395.0], [795.0, 8596.0], [779.0, 4581.0], [777.0, 7306.0], [780.0, 7722.0], [781.0, 7478.5], [783.0, 4204.75], [772.0, 7309.0], [771.0, 8545.5], [770.0, 8379.75], [769.0, 8293.0], [782.0, 8047.4], [785.0, 3954.0], [787.0, 3739.0], [786.0, 8597.0], [791.0, 6972.0], [788.0, 7782.0], [799.0, 6291.75], [807.0, 3786.0], [800.0, 5707.0], [801.0, 7670.0], [802.0, 6984.5], [805.0, 4695.0], [803.0, 7612.5], [806.0, 7593.0], [814.0, 6621.0], [813.0, 8547.0], [811.0, 7376.0], [809.0, 7463.0], [808.0, 7311.0], [818.0, 6665.5], [817.0, 7875.0], [828.0, 5166.0], [827.0, 7922.0], [826.0, 7241.5], [830.0, 9338.0], [829.0, 7429.0], [831.0, 6980.0], [821.0, 4279.0], [822.0, 5162.0], [824.0, 5181.0], [825.0, 4399.666666666667], [856.0, 4182.0], [836.0, 5509.0], [835.0, 7314.833333333333], [833.0, 7339.0], [832.0, 7582.0], [839.0, 7502.6], [838.0, 7158.5], [847.0, 7714.5], [846.0, 7159.0], [842.0, 5366.0], [841.0, 8262.0], [844.0, 6990.0], [843.0, 7422.5], [845.0, 3722.0], [851.0, 3623.0], [852.0, 4469.0], [853.0, 6827.0], [855.0, 6558.666666666667], [854.0, 7684.0], [862.0, 6448.111111111111], [848.0, 8179.0], [861.0, 7727.0], [860.0, 7506.428571428572], [858.0, 7243.333333333333], [857.0, 6772.0], [888.0, 6174.5], [867.0, 6759.333333333333], [864.0, 4402.0], [869.0, 4365.0], [873.0, 6288.285714285715], [874.0, 6585.0], [878.0, 6406.0], [876.0, 6400.0], [879.0, 6180.375], [881.0, 5803.333333333333], [883.0, 4630.0], [887.0, 5744.333333333333], [884.0, 5820.0], [892.0, 4207.0], [891.0, 5892.5], [890.0, 5977.0], [895.0, 4476.5], [880.0, 5860.0], [894.0, 5812.0], [912.0, 4454.0], [896.0, 4914.0], [900.0, 4921.0], [898.0, 5891.0], [902.0, 6276.0], [921.0, 4323.0], [903.0, 6601.5], [909.0, 5294.5], [908.0, 6869.181818181819], [907.0, 6099.0], [905.0, 6317.5], [910.0, 4675.5], [911.0, 4209.0], [913.0, 5073.333333333333], [914.0, 4956.666666666667], [918.0, 4942.0], [915.0, 5344.5], [919.0, 6186.0], [932.0, 4867.000000000001], [936.0, 4688.0], [940.0, 4566.5], [941.0, 4787.833333333333], [928.0, 5315.0], [937.0, 4848.75], [935.0, 4933.0], [934.0, 5175.0], [933.0, 4781.25], [930.0, 6283.5], [929.0, 5387.8]], "isOverall": false, "label": "15 Login Request", "isController": false}, {"data": [[615.9440000000005, 6562.0589999999975]], "isOverall": false, "label": "15 Login Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 941.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 583.2, "minX": 1.74123822E12, "maxY": 20569.883333333335, "series": [{"data": [[1.74123828E12, 20569.883333333335], [1.74123822E12, 807.3333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74123828E12, 14128.2], [1.74123822E12, 583.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123828E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 983.9166666666666, "minX": 1.74123822E12, "maxY": 6629.809716599196, "series": [{"data": [[1.74123828E12, 2970.694]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123828E12, 5912.649379932351], [1.74123822E12, 1020.858407079646]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123828E12, 6629.809716599196], [1.74123822E12, 983.9166666666666]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123828E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 978.3333333333334, "minX": 1.74123822E12, "maxY": 6622.862348178133, "series": [{"data": [[1.74123828E12, 2970.0929999999967]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123828E12, 5910.43630214205], [1.74123822E12, 1019.2300884955746]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123828E12, 6622.862348178133], [1.74123822E12, 978.3333333333334]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123828E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74123822E12, "maxY": 9.575221238938054, "series": [{"data": [[1.74123828E12, 0.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123828E12, 0.6279594137542274], [1.74123822E12, 9.575221238938054]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123828E12, 0.0], [1.74123822E12, 0.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123828E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 361.0, "minX": 1.74123822E12, "maxY": 14325.0, "series": [{"data": [[1.74123828E12, 14325.0], [1.74123822E12, 1970.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74123828E12, 999.0], [1.74123822E12, 361.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74123828E12, 8931.400000000001], [1.74123822E12, 1499.6000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74123828E12, 11475.6], [1.74123822E12, 1955.6999999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74123828E12, 6569.0], [1.74123822E12, 944.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.74123828E12, 10193.4], [1.74123822E12, 1649.4999999999995]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123828E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 61.0, "maxY": 8798.0, "series": [{"data": [[129.0, 7672.0], [572.0, 6469.0], [147.0, 7189.0], [193.0, 8798.0], [61.0, 1134.0], [64.0, 1222.0], [78.0, 2336.0], [77.0, 3054.5], [82.0, 3505.0], [80.0, 3916.0], [83.0, 4914.0], [86.0, 5060.0], [88.0, 6176.5], [93.0, 4621.5], [99.0, 7421.0], [100.0, 6992.0], [107.0, 7810.0], [115.0, 5484.0], [113.0, 6282.5], [118.0, 6734.0], [116.0, 7246.0], [117.0, 7860.5], [122.0, 8045.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 5431.0], [572.0, 2010.0], [147.0, 4957.5], [193.0, 4.0], [61.0, 644.0], [78.0, 1300.0], [77.0, 1563.0], [82.0, 2089.0], [80.0, 2292.0], [83.0, 3466.5], [86.0, 3796.0], [88.0, 5284.5], [93.0, 2469.0], [99.0, 4765.0], [100.0, 4360.0], [107.0, 5699.5], [115.0, 4596.0], [113.0, 4827.0], [118.0, 5504.0], [116.0, 6032.0], [117.0, 6394.0], [122.0, 5957.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 572.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 61.0, "maxY": 8798.0, "series": [{"data": [[129.0, 7664.0], [572.0, 6469.0], [147.0, 7189.0], [193.0, 8798.0], [61.0, 1134.0], [64.0, 1222.0], [78.0, 2335.0], [77.0, 3044.0], [82.0, 3450.0], [80.0, 3915.5], [83.0, 4874.0], [86.0, 5060.0], [88.0, 6176.0], [93.0, 4621.0], [99.0, 7421.0], [100.0, 6992.0], [107.0, 7806.0], [115.0, 5483.0], [113.0, 6278.5], [118.0, 6734.0], [116.0, 7246.0], [117.0, 7842.0], [122.0, 8045.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 5431.0], [572.0, 2010.0], [147.0, 4954.5], [193.0, 4.0], [61.0, 644.0], [78.0, 1299.5], [77.0, 1563.0], [82.0, 2089.0], [80.0, 2292.0], [83.0, 3466.5], [86.0, 3796.0], [88.0, 5280.0], [93.0, 2469.0], [99.0, 4762.0], [100.0, 4360.0], [107.0, 5699.0], [115.0, 4595.5], [113.0, 4827.0], [118.0, 5504.0], [116.0, 6032.0], [117.0, 6394.0], [122.0, 5957.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 572.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.066666666666666, "minX": 1.74123822E12, "maxY": 43.93333333333333, "series": [{"data": [[1.74123828E12, 43.93333333333333], [1.74123822E12, 6.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123828E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.0833333333333335, "minX": 1.74123822E12, "maxY": 47.916666666666664, "series": [{"data": [[1.74123828E12, 47.916666666666664], [1.74123822E12, 2.0833333333333335]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123828E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.74123822E12, "maxY": 16.666666666666668, "series": [{"data": [[1.74123828E12, 16.666666666666668]], "isOverall": false, "label": "16 Get Stock Prices Request-failure", "isController": false}, {"data": [[1.74123828E12, 14.783333333333333], [1.74123822E12, 1.8833333333333333]], "isOverall": false, "label": "14 Register Request-success", "isController": false}, {"data": [[1.74123828E12, 16.466666666666665], [1.74123822E12, 0.2]], "isOverall": false, "label": "15 Login Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123828E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.0833333333333335, "minX": 1.74123822E12, "maxY": 31.25, "series": [{"data": [[1.74123828E12, 31.25], [1.74123822E12, 2.0833333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74123828E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123828E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

