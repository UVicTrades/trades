/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 12691.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 5.0], [10.3, 5.0], [10.4, 5.0], [10.5, 5.0], [10.6, 5.0], [10.7, 5.0], [10.8, 5.0], [10.9, 5.0], [11.0, 5.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 5.0], [12.1, 6.0], [12.2, 6.0], [12.3, 6.0], [12.4, 6.0], [12.5, 6.0], [12.6, 6.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 9.0], [15.8, 9.0], [15.9, 9.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 11.0], [17.2, 11.0], [17.3, 11.0], [17.4, 11.0], [17.5, 11.0], [17.6, 11.0], [17.7, 11.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 14.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 17.0], [19.7, 17.0], [19.8, 17.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 20.0], [20.7, 20.0], [20.8, 21.0], [20.9, 21.0], [21.0, 22.0], [21.1, 24.0], [21.2, 24.0], [21.3, 25.0], [21.4, 27.0], [21.5, 28.0], [21.6, 40.0], [21.7, 42.0], [21.8, 50.0], [21.9, 59.0], [22.0, 69.0], [22.1, 75.0], [22.2, 240.0], [22.3, 253.0], [22.4, 362.0], [22.5, 391.0], [22.6, 544.0], [22.7, 679.0], [22.8, 720.0], [22.9, 727.0], [23.0, 744.0], [23.1, 749.0], [23.2, 752.0], [23.3, 753.0], [23.4, 757.0], [23.5, 759.0], [23.6, 760.0], [23.7, 763.0], [23.8, 765.0], [23.9, 767.0], [24.0, 770.0], [24.1, 775.0], [24.2, 802.0], [24.3, 805.0], [24.4, 808.0], [24.5, 815.0], [24.6, 818.0], [24.7, 821.0], [24.8, 829.0], [24.9, 829.0], [25.0, 829.0], [25.1, 841.0], [25.2, 848.0], [25.3, 851.0], [25.4, 851.0], [25.5, 863.0], [25.6, 864.0], [25.7, 865.0], [25.8, 870.0], [25.9, 871.0], [26.0, 871.0], [26.1, 877.0], [26.2, 892.0], [26.3, 900.0], [26.4, 905.0], [26.5, 921.0], [26.6, 923.0], [26.7, 940.0], [26.8, 943.0], [26.9, 945.0], [27.0, 945.0], [27.1, 946.0], [27.2, 950.0], [27.3, 950.0], [27.4, 957.0], [27.5, 964.0], [27.6, 969.0], [27.7, 1009.0], [27.8, 1010.0], [27.9, 1027.0], [28.0, 1036.0], [28.1, 1036.0], [28.2, 1037.0], [28.3, 1041.0], [28.4, 1070.0], [28.5, 1074.0], [28.6, 1082.0], [28.7, 1085.0], [28.8, 1092.0], [28.9, 1102.0], [29.0, 1117.0], [29.1, 1119.0], [29.2, 1123.0], [29.3, 1127.0], [29.4, 1140.0], [29.5, 1144.0], [29.6, 1148.0], [29.7, 1165.0], [29.8, 1167.0], [29.9, 1167.0], [30.0, 1173.0], [30.1, 1174.0], [30.2, 1195.0], [30.3, 1195.0], [30.4, 1197.0], [30.5, 1205.0], [30.6, 1208.0], [30.7, 1208.0], [30.8, 1227.0], [30.9, 1227.0], [31.0, 1238.0], [31.1, 1243.0], [31.2, 1245.0], [31.3, 1247.0], [31.4, 1259.0], [31.5, 1259.0], [31.6, 1261.0], [31.7, 1269.0], [31.8, 1270.0], [31.9, 1272.0], [32.0, 1287.0], [32.1, 1287.0], [32.2, 1294.0], [32.3, 1297.0], [32.4, 1318.0], [32.5, 1321.0], [32.6, 1336.0], [32.7, 1337.0], [32.8, 1338.0], [32.9, 1338.0], [33.0, 1344.0], [33.1, 1345.0], [33.2, 1346.0], [33.3, 1366.0], [33.4, 1373.0], [33.5, 1374.0], [33.6, 1375.0], [33.7, 1397.0], [33.8, 1411.0], [33.9, 1417.0], [34.0, 1426.0], [34.1, 1442.0], [34.2, 1443.0], [34.3, 1453.0], [34.4, 1455.0], [34.5, 1469.0], [34.6, 1472.0], [34.7, 1476.0], [34.8, 1488.0], [34.9, 1491.0], [35.0, 1495.0], [35.1, 1510.0], [35.2, 1516.0], [35.3, 1518.0], [35.4, 1523.0], [35.5, 1532.0], [35.6, 1537.0], [35.7, 1552.0], [35.8, 1554.0], [35.9, 1562.0], [36.0, 1562.0], [36.1, 1566.0], [36.2, 1588.0], [36.3, 1595.0], [36.4, 1599.0], [36.5, 1604.0], [36.6, 1608.0], [36.7, 1616.0], [36.8, 1628.0], [36.9, 1631.0], [37.0, 1641.0], [37.1, 1643.0], [37.2, 1648.0], [37.3, 1649.0], [37.4, 1652.0], [37.5, 1665.0], [37.6, 1665.0], [37.7, 1666.0], [37.8, 1669.0], [37.9, 1673.0], [38.0, 1676.0], [38.1, 1677.0], [38.2, 1683.0], [38.3, 1691.0], [38.4, 1700.0], [38.5, 1703.0], [38.6, 1722.0], [38.7, 1741.0], [38.8, 1753.0], [38.9, 1759.0], [39.0, 1765.0], [39.1, 1766.0], [39.2, 1782.0], [39.3, 1785.0], [39.4, 1803.0], [39.5, 1840.0], [39.6, 1855.0], [39.7, 1861.0], [39.8, 1879.0], [39.9, 1879.0], [40.0, 1889.0], [40.1, 1890.0], [40.2, 1910.0], [40.3, 1911.0], [40.4, 1912.0], [40.5, 1926.0], [40.6, 1929.0], [40.7, 1932.0], [40.8, 1936.0], [40.9, 1946.0], [41.0, 1953.0], [41.1, 1983.0], [41.2, 2005.0], [41.3, 2016.0], [41.4, 2018.0], [41.5, 2028.0], [41.6, 2028.0], [41.7, 2037.0], [41.8, 2042.0], [41.9, 2045.0], [42.0, 2046.0], [42.1, 2048.0], [42.2, 2049.0], [42.3, 2102.0], [42.4, 2105.0], [42.5, 2106.0], [42.6, 2118.0], [42.7, 2126.0], [42.8, 2139.0], [42.9, 2141.0], [43.0, 2148.0], [43.1, 2169.0], [43.2, 2224.0], [43.3, 2235.0], [43.4, 2238.0], [43.5, 2252.0], [43.6, 2255.0], [43.7, 2256.0], [43.8, 2257.0], [43.9, 2262.0], [44.0, 2264.0], [44.1, 2278.0], [44.2, 2279.0], [44.3, 2288.0], [44.4, 2294.0], [44.5, 2311.0], [44.6, 2320.0], [44.7, 2321.0], [44.8, 2327.0], [44.9, 2333.0], [45.0, 2343.0], [45.1, 2357.0], [45.2, 2369.0], [45.3, 2374.0], [45.4, 2376.0], [45.5, 2388.0], [45.6, 2399.0], [45.7, 2400.0], [45.8, 2415.0], [45.9, 2416.0], [46.0, 2420.0], [46.1, 2421.0], [46.2, 2438.0], [46.3, 2440.0], [46.4, 2446.0], [46.5, 2446.0], [46.6, 2449.0], [46.7, 2461.0], [46.8, 2461.0], [46.9, 2475.0], [47.0, 2477.0], [47.1, 2490.0], [47.2, 2498.0], [47.3, 2501.0], [47.4, 2504.0], [47.5, 2505.0], [47.6, 2507.0], [47.7, 2513.0], [47.8, 2514.0], [47.9, 2519.0], [48.0, 2528.0], [48.1, 2542.0], [48.2, 2560.0], [48.3, 2562.0], [48.4, 2569.0], [48.5, 2580.0], [48.6, 2582.0], [48.7, 2594.0], [48.8, 2595.0], [48.9, 2613.0], [49.0, 2618.0], [49.1, 2624.0], [49.2, 2629.0], [49.3, 2647.0], [49.4, 2655.0], [49.5, 2655.0], [49.6, 2682.0], [49.7, 2689.0], [49.8, 2696.0], [49.9, 2698.0], [50.0, 2709.0], [50.1, 2712.0], [50.2, 2743.0], [50.3, 2764.0], [50.4, 2765.0], [50.5, 2772.0], [50.6, 2780.0], [50.7, 2788.0], [50.8, 2791.0], [50.9, 2796.0], [51.0, 2811.0], [51.1, 2813.0], [51.2, 2813.0], [51.3, 2814.0], [51.4, 2817.0], [51.5, 2835.0], [51.6, 2847.0], [51.7, 2870.0], [51.8, 2881.0], [51.9, 2891.0], [52.0, 2892.0], [52.1, 2924.0], [52.2, 2926.0], [52.3, 2926.0], [52.4, 2941.0], [52.5, 2953.0], [52.6, 2957.0], [52.7, 2959.0], [52.8, 2963.0], [52.9, 2964.0], [53.0, 2970.0], [53.1, 2976.0], [53.2, 2984.0], [53.3, 2994.0], [53.4, 3003.0], [53.5, 3009.0], [53.6, 3009.0], [53.7, 3010.0], [53.8, 3014.0], [53.9, 3014.0], [54.0, 3015.0], [54.1, 3015.0], [54.2, 3027.0], [54.3, 3048.0], [54.4, 3054.0], [54.5, 3056.0], [54.6, 3139.0], [54.7, 3150.0], [54.8, 3193.0], [54.9, 3232.0], [55.0, 3244.0], [55.1, 3245.0], [55.2, 3257.0], [55.3, 3266.0], [55.4, 3266.0], [55.5, 3269.0], [55.6, 3273.0], [55.7, 3296.0], [55.8, 3302.0], [55.9, 3304.0], [56.0, 3309.0], [56.1, 3312.0], [56.2, 3318.0], [56.3, 3324.0], [56.4, 3328.0], [56.5, 3335.0], [56.6, 3337.0], [56.7, 3365.0], [56.8, 3371.0], [56.9, 3382.0], [57.0, 3393.0], [57.1, 3393.0], [57.2, 3399.0], [57.3, 3412.0], [57.4, 3412.0], [57.5, 3433.0], [57.6, 3439.0], [57.7, 3461.0], [57.8, 3463.0], [57.9, 3475.0], [58.0, 3483.0], [58.1, 3513.0], [58.2, 3540.0], [58.3, 3540.0], [58.4, 3543.0], [58.5, 3560.0], [58.6, 3561.0], [58.7, 3571.0], [58.8, 3571.0], [58.9, 3585.0], [59.0, 3589.0], [59.1, 3589.0], [59.2, 3591.0], [59.3, 3591.0], [59.4, 3597.0], [59.5, 3600.0], [59.6, 3601.0], [59.7, 3617.0], [59.8, 3618.0], [59.9, 3618.0], [60.0, 3628.0], [60.1, 3635.0], [60.2, 3638.0], [60.3, 3642.0], [60.4, 3643.0], [60.5, 3651.0], [60.6, 3655.0], [60.7, 3665.0], [60.8, 3667.0], [60.9, 3667.0], [61.0, 3673.0], [61.1, 3678.0], [61.2, 3679.0], [61.3, 3692.0], [61.4, 3705.0], [61.5, 3709.0], [61.6, 3709.0], [61.7, 3709.0], [61.8, 3713.0], [61.9, 3722.0], [62.0, 3725.0], [62.1, 3739.0], [62.2, 3757.0], [62.3, 3765.0], [62.4, 3788.0], [62.5, 3794.0], [62.6, 3794.0], [62.7, 3799.0], [62.8, 3805.0], [62.9, 3806.0], [63.0, 3815.0], [63.1, 3819.0], [63.2, 3836.0], [63.3, 3842.0], [63.4, 3845.0], [63.5, 3845.0], [63.6, 3846.0], [63.7, 3848.0], [63.8, 3848.0], [63.9, 3855.0], [64.0, 3871.0], [64.1, 3872.0], [64.2, 3890.0], [64.3, 3911.0], [64.4, 3933.0], [64.5, 3952.0], [64.6, 3966.0], [64.7, 3967.0], [64.8, 3972.0], [64.9, 3972.0], [65.0, 3972.0], [65.1, 3977.0], [65.2, 3996.0], [65.3, 3999.0], [65.4, 4005.0], [65.5, 4006.0], [65.6, 4011.0], [65.7, 4014.0], [65.8, 4014.0], [65.9, 4021.0], [66.0, 4035.0], [66.1, 4035.0], [66.2, 4038.0], [66.3, 4045.0], [66.4, 4050.0], [66.5, 4062.0], [66.6, 4066.0], [66.7, 4070.0], [66.8, 4072.0], [66.9, 4073.0], [67.0, 4079.0], [67.1, 4087.0], [67.2, 4088.0], [67.3, 4089.0], [67.4, 4091.0], [67.5, 4095.0], [67.6, 4103.0], [67.7, 4104.0], [67.8, 4104.0], [67.9, 4105.0], [68.0, 4106.0], [68.1, 4108.0], [68.2, 4109.0], [68.3, 4110.0], [68.4, 4111.0], [68.5, 4118.0], [68.6, 4119.0], [68.7, 4125.0], [68.8, 4128.0], [68.9, 4135.0], [69.0, 4137.0], [69.1, 4139.0], [69.2, 4149.0], [69.3, 4151.0], [69.4, 4154.0], [69.5, 4158.0], [69.6, 4158.0], [69.7, 4158.0], [69.8, 4161.0], [69.9, 4161.0], [70.0, 4163.0], [70.1, 4165.0], [70.2, 4165.0], [70.3, 4166.0], [70.4, 4168.0], [70.5, 4171.0], [70.6, 4175.0], [70.7, 4179.0], [70.8, 4181.0], [70.9, 4186.0], [71.0, 4189.0], [71.1, 4204.0], [71.2, 4230.0], [71.3, 4236.0], [71.4, 4239.0], [71.5, 4246.0], [71.6, 4246.0], [71.7, 4247.0], [71.8, 4261.0], [71.9, 4268.0], [72.0, 4270.0], [72.1, 4279.0], [72.2, 4288.0], [72.3, 4308.0], [72.4, 4311.0], [72.5, 4312.0], [72.6, 4315.0], [72.7, 4320.0], [72.8, 4322.0], [72.9, 4322.0], [73.0, 4326.0], [73.1, 4328.0], [73.2, 4332.0], [73.3, 4333.0], [73.4, 4334.0], [73.5, 4336.0], [73.6, 4336.0], [73.7, 4342.0], [73.8, 4342.0], [73.9, 4344.0], [74.0, 4344.0], [74.1, 4350.0], [74.2, 4352.0], [74.3, 4356.0], [74.4, 4356.0], [74.5, 4357.0], [74.6, 4359.0], [74.7, 4371.0], [74.8, 4373.0], [74.9, 4378.0], [75.0, 4378.0], [75.1, 4379.0], [75.2, 4383.0], [75.3, 4384.0], [75.4, 4386.0], [75.5, 4395.0], [75.6, 4399.0], [75.7, 4406.0], [75.8, 4412.0], [75.9, 4414.0], [76.0, 4418.0], [76.1, 4418.0], [76.2, 4430.0], [76.3, 4436.0], [76.4, 4438.0], [76.5, 4448.0], [76.6, 4452.0], [76.7, 4455.0], [76.8, 4465.0], [76.9, 4466.0], [77.0, 4467.0], [77.1, 4475.0], [77.2, 4481.0], [77.3, 4484.0], [77.4, 4484.0], [77.5, 4493.0], [77.6, 4501.0], [77.7, 4521.0], [77.8, 4525.0], [77.9, 4531.0], [78.0, 4535.0], [78.1, 4539.0], [78.2, 4542.0], [78.3, 4543.0], [78.4, 4551.0], [78.5, 4556.0], [78.6, 4602.0], [78.7, 4630.0], [78.8, 4642.0], [78.9, 4648.0], [79.0, 4656.0], [79.1, 4656.0], [79.2, 4660.0], [79.3, 4664.0], [79.4, 4680.0], [79.5, 4683.0], [79.6, 4690.0], [79.7, 4703.0], [79.8, 4748.0], [79.9, 4766.0], [80.0, 4776.0], [80.1, 4780.0], [80.2, 4811.0], [80.3, 4812.0], [80.4, 4812.0], [80.5, 4817.0], [80.6, 4820.0], [80.7, 4820.0], [80.8, 4827.0], [80.9, 4830.0], [81.0, 4834.0], [81.1, 4839.0], [81.2, 4843.0], [81.3, 4846.0], [81.4, 4853.0], [81.5, 4897.0], [81.6, 4898.0], [81.7, 4900.0], [81.8, 4916.0], [81.9, 4929.0], [82.0, 4930.0], [82.1, 4937.0], [82.2, 4980.0], [82.3, 4985.0], [82.4, 5002.0], [82.5, 5015.0], [82.6, 5036.0], [82.7, 5059.0], [82.8, 5059.0], [82.9, 5061.0], [83.0, 5064.0], [83.1, 5087.0], [83.2, 5093.0], [83.3, 5097.0], [83.4, 5102.0], [83.5, 5103.0], [83.6, 5105.0], [83.7, 5108.0], [83.8, 5109.0], [83.9, 5112.0], [84.0, 5129.0], [84.1, 5134.0], [84.2, 5138.0], [84.3, 5140.0], [84.4, 5145.0], [84.5, 5148.0], [84.6, 5148.0], [84.7, 5149.0], [84.8, 5150.0], [84.9, 5160.0], [85.0, 5161.0], [85.1, 5170.0], [85.2, 5171.0], [85.3, 5172.0], [85.4, 5172.0], [85.5, 5174.0], [85.6, 5181.0], [85.7, 5202.0], [85.8, 5209.0], [85.9, 5211.0], [86.0, 5222.0], [86.1, 5226.0], [86.2, 5228.0], [86.3, 5233.0], [86.4, 5244.0], [86.5, 5246.0], [86.6, 5272.0], [86.7, 5281.0], [86.8, 5288.0], [86.9, 5295.0], [87.0, 5305.0], [87.1, 5308.0], [87.2, 5323.0], [87.3, 5330.0], [87.4, 5335.0], [87.5, 5396.0], [87.6, 5471.0], [87.7, 5515.0], [87.8, 5628.0], [87.9, 5650.0], [88.0, 5650.0], [88.1, 5650.0], [88.2, 5651.0], [88.3, 5658.0], [88.4, 5690.0], [88.5, 5690.0], [88.6, 5775.0], [88.7, 5782.0], [88.8, 5817.0], [88.9, 5832.0], [89.0, 5842.0], [89.1, 5844.0], [89.2, 5845.0], [89.3, 5846.0], [89.4, 5859.0], [89.5, 5863.0], [89.6, 5863.0], [89.7, 5867.0], [89.8, 5873.0], [89.9, 5874.0], [90.0, 5875.0], [90.1, 5877.0], [90.2, 5881.0], [90.3, 5884.0], [90.4, 5887.0], [90.5, 5887.0], [90.6, 5898.0], [90.7, 5902.0], [90.8, 5904.0], [90.9, 5909.0], [91.0, 5920.0], [91.1, 5922.0], [91.2, 5934.0], [91.3, 5937.0], [91.4, 5953.0], [91.5, 5958.0], [91.6, 5960.0], [91.7, 5983.0], [91.8, 5988.0], [91.9, 6004.0], [92.0, 6007.0], [92.1, 6011.0], [92.2, 6053.0], [92.3, 6090.0], [92.4, 6109.0], [92.5, 6112.0], [92.6, 6139.0], [92.7, 6146.0], [92.8, 6166.0], [92.9, 6172.0], [93.0, 6207.0], [93.1, 6215.0], [93.2, 6236.0], [93.3, 6247.0], [93.4, 6294.0], [93.5, 6328.0], [93.6, 6333.0], [93.7, 6371.0], [93.8, 6384.0], [93.9, 6388.0], [94.0, 6393.0], [94.1, 6396.0], [94.2, 6397.0], [94.3, 6406.0], [94.4, 6418.0], [94.5, 6418.0], [94.6, 6423.0], [94.7, 6438.0], [94.8, 6438.0], [94.9, 6440.0], [95.0, 6442.0], [95.1, 6444.0], [95.2, 6455.0], [95.3, 6460.0], [95.4, 6472.0], [95.5, 6480.0], [95.6, 6513.0], [95.7, 6520.0], [95.8, 6535.0], [95.9, 6535.0], [96.0, 6540.0], [96.1, 6545.0], [96.2, 6549.0], [96.3, 6561.0], [96.4, 6562.0], [96.5, 6565.0], [96.6, 6578.0], [96.7, 6579.0], [96.8, 6596.0], [96.9, 6611.0], [97.0, 6615.0], [97.1, 6621.0], [97.2, 6625.0], [97.3, 6629.0], [97.4, 6637.0], [97.5, 6637.0], [97.6, 6661.0], [97.7, 6664.0], [97.8, 6674.0], [97.9, 6685.0], [98.0, 6688.0], [98.1, 6701.0], [98.2, 6702.0], [98.3, 6703.0], [98.4, 6706.0], [98.5, 6706.0], [98.6, 6707.0], [98.7, 6707.0], [98.8, 6722.0], [98.9, 6723.0], [99.0, 6747.0], [99.1, 6762.0], [99.2, 6763.0], [99.3, 6767.0], [99.4, 6819.0], [99.5, 6840.0], [99.6, 6849.0], [99.7, 6939.0], [99.8, 7490.0], [99.9, 8030.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[0.0, 222.0], [0.1, 248.0], [0.2, 254.0], [0.3, 254.0], [0.4, 340.0], [0.5, 379.0], [0.6, 396.0], [0.7, 411.0], [0.8, 413.0], [0.9, 415.0], [1.0, 416.0], [1.1, 440.0], [1.2, 447.0], [1.3, 447.0], [1.4, 452.0], [1.5, 473.0], [1.6, 484.0], [1.7, 484.0], [1.8, 506.0], [1.9, 509.0], [2.0, 518.0], [2.1, 526.0], [2.2, 531.0], [2.3, 540.0], [2.4, 544.0], [2.5, 550.0], [2.6, 562.0], [2.7, 564.0], [2.8, 567.0], [2.9, 606.0], [3.0, 610.0], [3.1, 610.0], [3.2, 611.0], [3.3, 611.0], [3.4, 612.0], [3.5, 627.0], [3.6, 629.0], [3.7, 631.0], [3.8, 632.0], [3.9, 636.0], [4.0, 640.0], [4.1, 649.0], [4.2, 655.0], [4.3, 672.0], [4.4, 684.0], [4.5, 687.0], [4.6, 688.0], [4.7, 702.0], [4.8, 734.0], [4.9, 736.0], [5.0, 737.0], [5.1, 741.0], [5.2, 762.0], [5.3, 771.0], [5.4, 775.0], [5.5, 776.0], [5.6, 782.0], [5.7, 783.0], [5.8, 793.0], [5.9, 801.0], [6.0, 810.0], [6.1, 821.0], [6.2, 838.0], [6.3, 841.0], [6.4, 878.0], [6.5, 905.0], [6.6, 931.0], [6.7, 938.0], [6.8, 939.0], [6.9, 959.0], [7.0, 963.0], [7.1, 970.0], [7.2, 972.0], [7.3, 976.0], [7.4, 1012.0], [7.5, 1016.0], [7.6, 1019.0], [7.7, 1022.0], [7.8, 1045.0], [7.9, 1060.0], [8.0, 1066.0], [8.1, 1084.0], [8.2, 1087.0], [8.3, 1093.0], [8.4, 1097.0], [8.5, 1097.0], [8.6, 1103.0], [8.7, 1108.0], [8.8, 1110.0], [8.9, 1114.0], [9.0, 1120.0], [9.1, 1132.0], [9.2, 1137.0], [9.3, 1142.0], [9.4, 1164.0], [9.5, 1175.0], [9.6, 1193.0], [9.7, 1207.0], [9.8, 1209.0], [9.9, 1210.0], [10.0, 1223.0], [10.1, 1228.0], [10.2, 1239.0], [10.3, 1242.0], [10.4, 1252.0], [10.5, 1256.0], [10.6, 1265.0], [10.7, 1265.0], [10.8, 1284.0], [10.9, 1302.0], [11.0, 1302.0], [11.1, 1314.0], [11.2, 1316.0], [11.3, 1317.0], [11.4, 1318.0], [11.5, 1326.0], [11.6, 1338.0], [11.7, 1345.0], [11.8, 1360.0], [11.9, 1360.0], [12.0, 1385.0], [12.1, 1390.0], [12.2, 1397.0], [12.3, 1402.0], [12.4, 1404.0], [12.5, 1411.0], [12.6, 1431.0], [12.7, 1431.0], [12.8, 1435.0], [12.9, 1438.0], [13.0, 1475.0], [13.1, 1484.0], [13.2, 1493.0], [13.3, 1494.0], [13.4, 1495.0], [13.5, 1498.0], [13.6, 1518.0], [13.7, 1526.0], [13.8, 1532.0], [13.9, 1567.0], [14.0, 1608.0], [14.1, 1637.0], [14.2, 1665.0], [14.3, 1711.0], [14.4, 1726.0], [14.5, 1727.0], [14.6, 1731.0], [14.7, 1745.0], [14.8, 1747.0], [14.9, 1757.0], [15.0, 1763.0], [15.1, 1764.0], [15.2, 1820.0], [15.3, 1825.0], [15.4, 1832.0], [15.5, 1853.0], [15.6, 1897.0], [15.7, 1909.0], [15.8, 1918.0], [15.9, 1931.0], [16.0, 1949.0], [16.1, 1976.0], [16.2, 1988.0], [16.3, 1992.0], [16.4, 2030.0], [16.5, 2039.0], [16.6, 2045.0], [16.7, 2059.0], [16.8, 2072.0], [16.9, 2128.0], [17.0, 2149.0], [17.1, 2153.0], [17.2, 2158.0], [17.3, 2158.0], [17.4, 2162.0], [17.5, 2169.0], [17.6, 2191.0], [17.7, 2208.0], [17.8, 2230.0], [17.9, 2233.0], [18.0, 2252.0], [18.1, 2260.0], [18.2, 2294.0], [18.3, 2298.0], [18.4, 2345.0], [18.5, 2347.0], [18.6, 2412.0], [18.7, 2419.0], [18.8, 2465.0], [18.9, 2467.0], [19.0, 2473.0], [19.1, 2483.0], [19.2, 2496.0], [19.3, 2504.0], [19.4, 2504.0], [19.5, 2506.0], [19.6, 2509.0], [19.7, 2528.0], [19.8, 2529.0], [19.9, 2541.0], [20.0, 2558.0], [20.1, 2573.0], [20.2, 2581.0], [20.3, 2586.0], [20.4, 2635.0], [20.5, 2664.0], [20.6, 2668.0], [20.7, 2686.0], [20.8, 2708.0], [20.9, 2711.0], [21.0, 2759.0], [21.1, 2774.0], [21.2, 2799.0], [21.3, 2805.0], [21.4, 2812.0], [21.5, 2816.0], [21.6, 2816.0], [21.7, 2860.0], [21.8, 2868.0], [21.9, 2870.0], [22.0, 2878.0], [22.1, 2916.0], [22.2, 2917.0], [22.3, 2933.0], [22.4, 2989.0], [22.5, 2989.0], [22.6, 3002.0], [22.7, 3019.0], [22.8, 3038.0], [22.9, 3050.0], [23.0, 3053.0], [23.1, 3085.0], [23.2, 3094.0], [23.3, 3100.0], [23.4, 3110.0], [23.5, 3116.0], [23.6, 3144.0], [23.7, 3148.0], [23.8, 3162.0], [23.9, 3166.0], [24.0, 3177.0], [24.1, 3187.0], [24.2, 3217.0], [24.3, 3225.0], [24.4, 3255.0], [24.5, 3269.0], [24.6, 3273.0], [24.7, 3280.0], [24.8, 3302.0], [24.9, 3311.0], [25.0, 3315.0], [25.1, 3326.0], [25.2, 3362.0], [25.3, 3368.0], [25.4, 3383.0], [25.5, 3396.0], [25.6, 3404.0], [25.7, 3421.0], [25.8, 3454.0], [25.9, 3473.0], [26.0, 3483.0], [26.1, 3496.0], [26.2, 3499.0], [26.3, 3519.0], [26.4, 3523.0], [26.5, 3534.0], [26.6, 3550.0], [26.7, 3574.0], [26.8, 3580.0], [26.9, 3589.0], [27.0, 3591.0], [27.1, 3591.0], [27.2, 3593.0], [27.3, 3659.0], [27.4, 3663.0], [27.5, 3686.0], [27.6, 3715.0], [27.7, 3720.0], [27.8, 3728.0], [27.9, 3760.0], [28.0, 3777.0], [28.1, 3786.0], [28.2, 3790.0], [28.3, 3800.0], [28.4, 3809.0], [28.5, 3810.0], [28.6, 3820.0], [28.7, 3839.0], [28.8, 3858.0], [28.9, 3868.0], [29.0, 3871.0], [29.1, 3879.0], [29.2, 3894.0], [29.3, 3904.0], [29.4, 3908.0], [29.5, 3911.0], [29.6, 3914.0], [29.7, 3921.0], [29.8, 3924.0], [29.9, 3943.0], [30.0, 3945.0], [30.1, 3950.0], [30.2, 3950.0], [30.3, 3951.0], [30.4, 3954.0], [30.5, 3958.0], [30.6, 3965.0], [30.7, 3969.0], [30.8, 3979.0], [30.9, 3985.0], [31.0, 3986.0], [31.1, 4008.0], [31.2, 4017.0], [31.3, 4019.0], [31.4, 4021.0], [31.5, 4043.0], [31.6, 4050.0], [31.7, 4055.0], [31.8, 4069.0], [31.9, 4081.0], [32.0, 4088.0], [32.1, 4098.0], [32.2, 4102.0], [32.3, 4126.0], [32.4, 4141.0], [32.5, 4143.0], [32.6, 4156.0], [32.7, 4172.0], [32.8, 4220.0], [32.9, 4225.0], [33.0, 4235.0], [33.1, 4235.0], [33.2, 4256.0], [33.3, 4278.0], [33.4, 4283.0], [33.5, 4289.0], [33.6, 4292.0], [33.7, 4293.0], [33.8, 4294.0], [33.9, 4310.0], [34.0, 4353.0], [34.1, 4362.0], [34.2, 4364.0], [34.3, 4364.0], [34.4, 4365.0], [34.5, 4386.0], [34.6, 4392.0], [34.7, 4398.0], [34.8, 4401.0], [34.9, 4404.0], [35.0, 4406.0], [35.1, 4407.0], [35.2, 4411.0], [35.3, 4415.0], [35.4, 4453.0], [35.5, 4456.0], [35.6, 4516.0], [35.7, 4530.0], [35.8, 4531.0], [35.9, 4536.0], [36.0, 4536.0], [36.1, 4549.0], [36.2, 4565.0], [36.3, 4569.0], [36.4, 4576.0], [36.5, 4588.0], [36.6, 4590.0], [36.7, 4599.0], [36.8, 4604.0], [36.9, 4611.0], [37.0, 4615.0], [37.1, 4619.0], [37.2, 4631.0], [37.3, 4649.0], [37.4, 4657.0], [37.5, 4666.0], [37.6, 4673.0], [37.7, 4677.0], [37.8, 4683.0], [37.9, 4695.0], [38.0, 4698.0], [38.1, 4717.0], [38.2, 4720.0], [38.3, 4733.0], [38.4, 4738.0], [38.5, 4746.0], [38.6, 4747.0], [38.7, 4747.0], [38.8, 4754.0], [38.9, 4760.0], [39.0, 4769.0], [39.1, 4770.0], [39.2, 4793.0], [39.3, 4796.0], [39.4, 4799.0], [39.5, 4807.0], [39.6, 4808.0], [39.7, 4811.0], [39.8, 4813.0], [39.9, 4813.0], [40.0, 4817.0], [40.1, 4821.0], [40.2, 4846.0], [40.3, 4859.0], [40.4, 4873.0], [40.5, 4874.0], [40.6, 4878.0], [40.7, 4889.0], [40.8, 4892.0], [40.9, 4903.0], [41.0, 4907.0], [41.1, 4909.0], [41.2, 4922.0], [41.3, 4924.0], [41.4, 4933.0], [41.5, 4936.0], [41.6, 4949.0], [41.7, 4952.0], [41.8, 4982.0], [41.9, 4987.0], [42.0, 4992.0], [42.1, 4997.0], [42.2, 5001.0], [42.3, 5019.0], [42.4, 5026.0], [42.5, 5031.0], [42.6, 5042.0], [42.7, 5045.0], [42.8, 5049.0], [42.9, 5062.0], [43.0, 5113.0], [43.1, 5133.0], [43.2, 5138.0], [43.3, 5152.0], [43.4, 5152.0], [43.5, 5160.0], [43.6, 5161.0], [43.7, 5167.0], [43.8, 5176.0], [43.9, 5177.0], [44.0, 5178.0], [44.1, 5201.0], [44.2, 5206.0], [44.3, 5212.0], [44.4, 5220.0], [44.5, 5223.0], [44.6, 5237.0], [44.7, 5241.0], [44.8, 5242.0], [44.9, 5243.0], [45.0, 5244.0], [45.1, 5247.0], [45.2, 5249.0], [45.3, 5255.0], [45.4, 5258.0], [45.5, 5263.0], [45.6, 5287.0], [45.7, 5300.0], [45.8, 5301.0], [45.9, 5322.0], [46.0, 5332.0], [46.1, 5333.0], [46.2, 5342.0], [46.3, 5348.0], [46.4, 5360.0], [46.5, 5362.0], [46.6, 5367.0], [46.7, 5375.0], [46.8, 5379.0], [46.9, 5386.0], [47.0, 5387.0], [47.1, 5388.0], [47.2, 5399.0], [47.3, 5410.0], [47.4, 5415.0], [47.5, 5420.0], [47.6, 5421.0], [47.7, 5424.0], [47.8, 5430.0], [47.9, 5432.0], [48.0, 5443.0], [48.1, 5446.0], [48.2, 5451.0], [48.3, 5453.0], [48.4, 5463.0], [48.5, 5464.0], [48.6, 5469.0], [48.7, 5486.0], [48.8, 5499.0], [48.9, 5501.0], [49.0, 5501.0], [49.1, 5505.0], [49.2, 5516.0], [49.3, 5519.0], [49.4, 5524.0], [49.5, 5531.0], [49.6, 5539.0], [49.7, 5545.0], [49.8, 5549.0], [49.9, 5561.0], [50.0, 5583.0], [50.1, 5583.0], [50.2, 5583.0], [50.3, 5587.0], [50.4, 5587.0], [50.5, 5603.0], [50.6, 5603.0], [50.7, 5606.0], [50.8, 5614.0], [50.9, 5617.0], [51.0, 5621.0], [51.1, 5621.0], [51.2, 5630.0], [51.3, 5632.0], [51.4, 5634.0], [51.5, 5635.0], [51.6, 5639.0], [51.7, 5648.0], [51.8, 5657.0], [51.9, 5660.0], [52.0, 5661.0], [52.1, 5666.0], [52.2, 5667.0], [52.3, 5693.0], [52.4, 5694.0], [52.5, 5700.0], [52.6, 5706.0], [52.7, 5719.0], [52.8, 5720.0], [52.9, 5723.0], [53.0, 5728.0], [53.1, 5734.0], [53.2, 5734.0], [53.3, 5737.0], [53.4, 5756.0], [53.5, 5758.0], [53.6, 5758.0], [53.7, 5762.0], [53.8, 5762.0], [53.9, 5769.0], [54.0, 5776.0], [54.1, 5782.0], [54.2, 5782.0], [54.3, 5791.0], [54.4, 5804.0], [54.5, 5806.0], [54.6, 5810.0], [54.7, 5816.0], [54.8, 5818.0], [54.9, 5832.0], [55.0, 5833.0], [55.1, 5835.0], [55.2, 5843.0], [55.3, 5844.0], [55.4, 5853.0], [55.5, 5869.0], [55.6, 5869.0], [55.7, 5871.0], [55.8, 5872.0], [55.9, 5878.0], [56.0, 5879.0], [56.1, 5884.0], [56.2, 5884.0], [56.3, 5889.0], [56.4, 5890.0], [56.5, 5902.0], [56.6, 5908.0], [56.7, 5912.0], [56.8, 5917.0], [56.9, 5935.0], [57.0, 5938.0], [57.1, 5939.0], [57.2, 5942.0], [57.3, 5945.0], [57.4, 5945.0], [57.5, 5959.0], [57.6, 5962.0], [57.7, 5963.0], [57.8, 5968.0], [57.9, 5974.0], [58.0, 5976.0], [58.1, 5976.0], [58.2, 5983.0], [58.3, 5985.0], [58.4, 5986.0], [58.5, 5990.0], [58.6, 5993.0], [58.7, 5996.0], [58.8, 6002.0], [58.9, 6009.0], [59.0, 6010.0], [59.1, 6011.0], [59.2, 6012.0], [59.3, 6014.0], [59.4, 6034.0], [59.5, 6039.0], [59.6, 6043.0], [59.7, 6047.0], [59.8, 6049.0], [59.9, 6055.0], [60.0, 6057.0], [60.1, 6058.0], [60.2, 6063.0], [60.3, 6064.0], [60.4, 6067.0], [60.5, 6073.0], [60.6, 6075.0], [60.7, 6077.0], [60.8, 6082.0], [60.9, 6090.0], [61.0, 6092.0], [61.1, 6101.0], [61.2, 6105.0], [61.3, 6111.0], [61.4, 6113.0], [61.5, 6114.0], [61.6, 6118.0], [61.7, 6129.0], [61.8, 6132.0], [61.9, 6133.0], [62.0, 6134.0], [62.1, 6138.0], [62.2, 6138.0], [62.3, 6143.0], [62.4, 6144.0], [62.5, 6146.0], [62.6, 6147.0], [62.7, 6150.0], [62.8, 6152.0], [62.9, 6153.0], [63.0, 6157.0], [63.1, 6166.0], [63.2, 6186.0], [63.3, 6190.0], [63.4, 6191.0], [63.5, 6192.0], [63.6, 6193.0], [63.7, 6200.0], [63.8, 6201.0], [63.9, 6201.0], [64.0, 6206.0], [64.1, 6213.0], [64.2, 6216.0], [64.3, 6222.0], [64.4, 6230.0], [64.5, 6232.0], [64.6, 6237.0], [64.7, 6238.0], [64.8, 6239.0], [64.9, 6241.0], [65.0, 6241.0], [65.1, 6242.0], [65.2, 6244.0], [65.3, 6244.0], [65.4, 6246.0], [65.5, 6246.0], [65.6, 6248.0], [65.7, 6250.0], [65.8, 6257.0], [65.9, 6259.0], [66.0, 6273.0], [66.1, 6273.0], [66.2, 6278.0], [66.3, 6282.0], [66.4, 6284.0], [66.5, 6289.0], [66.6, 6292.0], [66.7, 6293.0], [66.8, 6298.0], [66.9, 6300.0], [67.0, 6311.0], [67.1, 6314.0], [67.2, 6315.0], [67.3, 6320.0], [67.4, 6323.0], [67.5, 6325.0], [67.6, 6336.0], [67.7, 6357.0], [67.8, 6363.0], [67.9, 6366.0], [68.0, 6372.0], [68.1, 6374.0], [68.2, 6381.0], [68.3, 6382.0], [68.4, 6383.0], [68.5, 6400.0], [68.6, 6406.0], [68.7, 6406.0], [68.8, 6416.0], [68.9, 6419.0], [69.0, 6420.0], [69.1, 6421.0], [69.2, 6426.0], [69.3, 6431.0], [69.4, 6434.0], [69.5, 6434.0], [69.6, 6439.0], [69.7, 6444.0], [69.8, 6447.0], [69.9, 6452.0], [70.0, 6456.0], [70.1, 6458.0], [70.2, 6477.0], [70.3, 6503.0], [70.4, 6506.0], [70.5, 6510.0], [70.6, 6512.0], [70.7, 6514.0], [70.8, 6515.0], [70.9, 6518.0], [71.0, 6527.0], [71.1, 6533.0], [71.2, 6536.0], [71.3, 6540.0], [71.4, 6549.0], [71.5, 6562.0], [71.6, 6565.0], [71.7, 6579.0], [71.8, 6583.0], [71.9, 6585.0], [72.0, 6591.0], [72.1, 6595.0], [72.2, 6601.0], [72.3, 6603.0], [72.4, 6608.0], [72.5, 6613.0], [72.6, 6615.0], [72.7, 6622.0], [72.8, 6645.0], [72.9, 6646.0], [73.0, 6647.0], [73.1, 6649.0], [73.2, 6650.0], [73.3, 6656.0], [73.4, 6658.0], [73.5, 6660.0], [73.6, 6672.0], [73.7, 6689.0], [73.8, 6691.0], [73.9, 6694.0], [74.0, 6700.0], [74.1, 6704.0], [74.2, 6710.0], [74.3, 6712.0], [74.4, 6713.0], [74.5, 6717.0], [74.6, 6722.0], [74.7, 6726.0], [74.8, 6756.0], [74.9, 6759.0], [75.0, 6766.0], [75.1, 6769.0], [75.2, 6794.0], [75.3, 6817.0], [75.4, 6826.0], [75.5, 6846.0], [75.6, 6857.0], [75.7, 6858.0], [75.8, 6869.0], [75.9, 6878.0], [76.0, 6886.0], [76.1, 6892.0], [76.2, 6921.0], [76.3, 6922.0], [76.4, 6923.0], [76.5, 6941.0], [76.6, 6945.0], [76.7, 6951.0], [76.8, 6976.0], [76.9, 6980.0], [77.0, 6996.0], [77.1, 7002.0], [77.2, 7004.0], [77.3, 7019.0], [77.4, 7024.0], [77.5, 7036.0], [77.6, 7038.0], [77.7, 7050.0], [77.8, 7055.0], [77.9, 7063.0], [78.0, 7082.0], [78.1, 7085.0], [78.2, 7099.0], [78.3, 7108.0], [78.4, 7110.0], [78.5, 7115.0], [78.6, 7156.0], [78.7, 7177.0], [78.8, 7187.0], [78.9, 7190.0], [79.0, 7192.0], [79.1, 7197.0], [79.2, 7227.0], [79.3, 7243.0], [79.4, 7248.0], [79.5, 7248.0], [79.6, 7254.0], [79.7, 7257.0], [79.8, 7270.0], [79.9, 7271.0], [80.0, 7273.0], [80.1, 7279.0], [80.2, 7294.0], [80.3, 7318.0], [80.4, 7318.0], [80.5, 7324.0], [80.6, 7328.0], [80.7, 7341.0], [80.8, 7346.0], [80.9, 7354.0], [81.0, 7356.0], [81.1, 7375.0], [81.2, 7376.0], [81.3, 7377.0], [81.4, 7385.0], [81.5, 7404.0], [81.6, 7407.0], [81.7, 7423.0], [81.8, 7424.0], [81.9, 7455.0], [82.0, 7468.0], [82.1, 7478.0], [82.2, 7482.0], [82.3, 7484.0], [82.4, 7492.0], [82.5, 7513.0], [82.6, 7518.0], [82.7, 7525.0], [82.8, 7538.0], [82.9, 7540.0], [83.0, 7543.0], [83.1, 7549.0], [83.2, 7550.0], [83.3, 7560.0], [83.4, 7597.0], [83.5, 7617.0], [83.6, 7623.0], [83.7, 7626.0], [83.8, 7634.0], [83.9, 7642.0], [84.0, 7645.0], [84.1, 7646.0], [84.2, 7652.0], [84.3, 7657.0], [84.4, 7658.0], [84.5, 7670.0], [84.6, 7686.0], [84.7, 7688.0], [84.8, 7710.0], [84.9, 7738.0], [85.0, 7747.0], [85.1, 7756.0], [85.2, 7757.0], [85.3, 7782.0], [85.4, 7799.0], [85.5, 7819.0], [85.6, 7822.0], [85.7, 7826.0], [85.8, 7828.0], [85.9, 7837.0], [86.0, 7844.0], [86.1, 7853.0], [86.2, 7864.0], [86.3, 7869.0], [86.4, 7870.0], [86.5, 7897.0], [86.6, 7899.0], [86.7, 7903.0], [86.8, 7905.0], [86.9, 7908.0], [87.0, 7921.0], [87.1, 7924.0], [87.2, 7931.0], [87.3, 7943.0], [87.4, 7947.0], [87.5, 7982.0], [87.6, 7984.0], [87.7, 7991.0], [87.8, 7992.0], [87.9, 7992.0], [88.0, 7997.0], [88.1, 7999.0], [88.2, 8008.0], [88.3, 8013.0], [88.4, 8019.0], [88.5, 8026.0], [88.6, 8043.0], [88.7, 8053.0], [88.8, 8053.0], [88.9, 8054.0], [89.0, 8057.0], [89.1, 8062.0], [89.2, 8066.0], [89.3, 8072.0], [89.4, 8081.0], [89.5, 8089.0], [89.6, 8090.0], [89.7, 8096.0], [89.8, 8100.0], [89.9, 8109.0], [90.0, 8112.0], [90.1, 8126.0], [90.2, 8130.0], [90.3, 8153.0], [90.4, 8160.0], [90.5, 8170.0], [90.6, 8181.0], [90.7, 8182.0], [90.8, 8185.0], [90.9, 8192.0], [91.0, 8199.0], [91.1, 8203.0], [91.2, 8214.0], [91.3, 8234.0], [91.4, 8236.0], [91.5, 8237.0], [91.6, 8243.0], [91.7, 8245.0], [91.8, 8247.0], [91.9, 8251.0], [92.0, 8262.0], [92.1, 8268.0], [92.2, 8269.0], [92.3, 8279.0], [92.4, 8280.0], [92.5, 8314.0], [92.6, 8324.0], [92.7, 8327.0], [92.8, 8328.0], [92.9, 8332.0], [93.0, 8332.0], [93.1, 8349.0], [93.2, 8364.0], [93.3, 8372.0], [93.4, 8373.0], [93.5, 8375.0], [93.6, 8391.0], [93.7, 8415.0], [93.8, 8421.0], [93.9, 8432.0], [94.0, 8435.0], [94.1, 8460.0], [94.2, 8467.0], [94.3, 8472.0], [94.4, 8482.0], [94.5, 8518.0], [94.6, 8521.0], [94.7, 8527.0], [94.8, 8539.0], [94.9, 8562.0], [95.0, 8567.0], [95.1, 8578.0], [95.2, 8580.0], [95.3, 8655.0], [95.4, 8736.0], [95.5, 8753.0], [95.6, 8788.0], [95.7, 8788.0], [95.8, 8798.0], [95.9, 8799.0], [96.0, 8807.0], [96.1, 8833.0], [96.2, 8842.0], [96.3, 8843.0], [96.4, 8844.0], [96.5, 8861.0], [96.6, 8865.0], [96.7, 8887.0], [96.8, 8904.0], [96.9, 8935.0], [97.0, 8935.0], [97.1, 8977.0], [97.2, 8991.0], [97.3, 8999.0], [97.4, 9005.0], [97.5, 9005.0], [97.6, 9025.0], [97.7, 9036.0], [97.8, 9045.0], [97.9, 9057.0], [98.0, 9062.0], [98.1, 9067.0], [98.2, 9077.0], [98.3, 9077.0], [98.4, 9078.0], [98.5, 9089.0], [98.6, 9098.0], [98.7, 9143.0], [98.8, 9173.0], [98.9, 9192.0], [99.0, 9239.0], [99.1, 9285.0], [99.2, 9369.0], [99.3, 9556.0], [99.4, 9564.0], [99.5, 9585.0], [99.6, 9720.0], [99.7, 9737.0], [99.8, 9962.0], [99.9, 9997.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 557.0], [0.1, 639.0], [0.2, 985.0], [0.3, 985.0], [0.4, 1083.0], [0.5, 1122.0], [0.6, 1139.0], [0.7, 1209.0], [0.8, 1243.0], [0.9, 1283.0], [1.0, 1291.0], [1.1, 1316.0], [1.2, 1325.0], [1.3, 1353.0], [1.4, 1353.0], [1.5, 1367.0], [1.6, 1372.0], [1.7, 1427.0], [1.8, 1479.0], [1.9, 1487.0], [2.0, 1490.0], [2.1, 1496.0], [2.2, 1527.0], [2.3, 1533.0], [2.4, 1536.0], [2.5, 1550.0], [2.6, 1576.0], [2.7, 1579.0], [2.8, 1593.0], [2.9, 1660.0], [3.0, 1702.0], [3.1, 1711.0], [3.2, 1713.0], [3.3, 1729.0], [3.4, 1746.0], [3.5, 1764.0], [3.6, 1765.0], [3.7, 1783.0], [3.8, 1786.0], [3.9, 1818.0], [4.0, 1826.0], [4.1, 1839.0], [4.2, 1840.0], [4.3, 1853.0], [4.4, 1907.0], [4.5, 1959.0], [4.6, 1970.0], [4.7, 1991.0], [4.8, 2014.0], [4.9, 2022.0], [5.0, 2023.0], [5.1, 2032.0], [5.2, 2057.0], [5.3, 2155.0], [5.4, 2191.0], [5.5, 2233.0], [5.6, 2262.0], [5.7, 2302.0], [5.8, 2307.0], [5.9, 2350.0], [6.0, 2362.0], [6.1, 2369.0], [6.2, 2383.0], [6.3, 2401.0], [6.4, 2490.0], [6.5, 2493.0], [6.6, 2494.0], [6.7, 2515.0], [6.8, 2521.0], [6.9, 2524.0], [7.0, 2528.0], [7.1, 2532.0], [7.2, 2543.0], [7.3, 2562.0], [7.4, 2607.0], [7.5, 2671.0], [7.6, 2680.0], [7.7, 2702.0], [7.8, 2708.0], [7.9, 2731.0], [8.0, 2755.0], [8.1, 2777.0], [8.2, 2790.0], [8.3, 2800.0], [8.4, 2884.0], [8.5, 2887.0], [8.6, 2959.0], [8.7, 2973.0], [8.8, 2978.0], [8.9, 2984.0], [9.0, 3035.0], [9.1, 3073.0], [9.2, 3088.0], [9.3, 3122.0], [9.4, 3124.0], [9.5, 3153.0], [9.6, 3227.0], [9.7, 3235.0], [9.8, 3235.0], [9.9, 3262.0], [10.0, 3270.0], [10.1, 3305.0], [10.2, 3369.0], [10.3, 3377.0], [10.4, 3377.0], [10.5, 3381.0], [10.6, 3381.0], [10.7, 3395.0], [10.8, 3423.0], [10.9, 3425.0], [11.0, 3434.0], [11.1, 3434.0], [11.2, 3444.0], [11.3, 3452.0], [11.4, 3459.0], [11.5, 3463.0], [11.6, 3471.0], [11.7, 3502.0], [11.8, 3510.0], [11.9, 3539.0], [12.0, 3578.0], [12.1, 3601.0], [12.2, 3617.0], [12.3, 3640.0], [12.4, 3651.0], [12.5, 3685.0], [12.6, 3688.0], [12.7, 3769.0], [12.8, 3783.0], [12.9, 3809.0], [13.0, 3810.0], [13.1, 3857.0], [13.2, 3885.0], [13.3, 3930.0], [13.4, 3954.0], [13.5, 3960.0], [13.6, 3984.0], [13.7, 4012.0], [13.8, 4084.0], [13.9, 4120.0], [14.0, 4166.0], [14.1, 4193.0], [14.2, 4242.0], [14.3, 4267.0], [14.4, 4279.0], [14.5, 4320.0], [14.6, 4385.0], [14.7, 4447.0], [14.8, 4447.0], [14.9, 4453.0], [15.0, 4454.0], [15.1, 4463.0], [15.2, 4470.0], [15.3, 4478.0], [15.4, 4486.0], [15.5, 4517.0], [15.6, 4519.0], [15.7, 4539.0], [15.8, 4558.0], [15.9, 4567.0], [16.0, 4569.0], [16.1, 4610.0], [16.2, 4615.0], [16.3, 4617.0], [16.4, 4618.0], [16.5, 4626.0], [16.6, 4628.0], [16.7, 4631.0], [16.8, 4642.0], [16.9, 4646.0], [17.0, 4657.0], [17.1, 4663.0], [17.2, 4675.0], [17.3, 4705.0], [17.4, 4715.0], [17.5, 4753.0], [17.6, 4765.0], [17.7, 4779.0], [17.8, 4795.0], [17.9, 4827.0], [18.0, 4841.0], [18.1, 4844.0], [18.2, 4848.0], [18.3, 4852.0], [18.4, 4852.0], [18.5, 4883.0], [18.6, 4887.0], [18.7, 4901.0], [18.8, 4915.0], [18.9, 4918.0], [19.0, 4921.0], [19.1, 4940.0], [19.2, 4943.0], [19.3, 4946.0], [19.4, 4946.0], [19.5, 4948.0], [19.6, 4967.0], [19.7, 4967.0], [19.8, 4979.0], [19.9, 4983.0], [20.0, 4987.0], [20.1, 4988.0], [20.2, 4996.0], [20.3, 5002.0], [20.4, 5004.0], [20.5, 5015.0], [20.6, 5022.0], [20.7, 5026.0], [20.8, 5035.0], [20.9, 5040.0], [21.0, 5048.0], [21.1, 5055.0], [21.2, 5078.0], [21.3, 5086.0], [21.4, 5089.0], [21.5, 5106.0], [21.6, 5115.0], [21.7, 5128.0], [21.8, 5129.0], [21.9, 5131.0], [22.0, 5137.0], [22.1, 5162.0], [22.2, 5186.0], [22.3, 5186.0], [22.4, 5191.0], [22.5, 5192.0], [22.6, 5194.0], [22.7, 5194.0], [22.8, 5201.0], [22.9, 5225.0], [23.0, 5225.0], [23.1, 5228.0], [23.2, 5231.0], [23.3, 5240.0], [23.4, 5247.0], [23.5, 5249.0], [23.6, 5270.0], [23.7, 5290.0], [23.8, 5292.0], [23.9, 5293.0], [24.0, 5298.0], [24.1, 5305.0], [24.2, 5305.0], [24.3, 5313.0], [24.4, 5313.0], [24.5, 5333.0], [24.6, 5338.0], [24.7, 5365.0], [24.8, 5381.0], [24.9, 5386.0], [25.0, 5399.0], [25.1, 5408.0], [25.2, 5416.0], [25.3, 5425.0], [25.4, 5435.0], [25.5, 5457.0], [25.6, 5459.0], [25.7, 5471.0], [25.8, 5476.0], [25.9, 5483.0], [26.0, 5487.0], [26.1, 5493.0], [26.2, 5497.0], [26.3, 5499.0], [26.4, 5518.0], [26.5, 5519.0], [26.6, 5534.0], [26.7, 5534.0], [26.8, 5572.0], [26.9, 5620.0], [27.0, 5632.0], [27.1, 5697.0], [27.2, 5701.0], [27.3, 5702.0], [27.4, 5709.0], [27.5, 5716.0], [27.6, 5751.0], [27.7, 5759.0], [27.8, 5787.0], [27.9, 5788.0], [28.0, 5788.0], [28.1, 5796.0], [28.2, 5813.0], [28.3, 5830.0], [28.4, 5857.0], [28.5, 5881.0], [28.6, 5887.0], [28.7, 5890.0], [28.8, 5896.0], [28.9, 5897.0], [29.0, 5916.0], [29.1, 5922.0], [29.2, 5922.0], [29.3, 5947.0], [29.4, 5953.0], [29.5, 5957.0], [29.6, 5978.0], [29.7, 5982.0], [29.8, 5987.0], [29.9, 5994.0], [30.0, 5994.0], [30.1, 6008.0], [30.2, 6011.0], [30.3, 6013.0], [30.4, 6020.0], [30.5, 6038.0], [30.6, 6039.0], [30.7, 6052.0], [30.8, 6055.0], [30.9, 6068.0], [31.0, 6070.0], [31.1, 6072.0], [31.2, 6081.0], [31.3, 6082.0], [31.4, 6083.0], [31.5, 6088.0], [31.6, 6093.0], [31.7, 6097.0], [31.8, 6099.0], [31.9, 6101.0], [32.0, 6126.0], [32.1, 6129.0], [32.2, 6138.0], [32.3, 6140.0], [32.4, 6151.0], [32.5, 6165.0], [32.6, 6170.0], [32.7, 6184.0], [32.8, 6184.0], [32.9, 6185.0], [33.0, 6190.0], [33.1, 6196.0], [33.2, 6199.0], [33.3, 6232.0], [33.4, 6244.0], [33.5, 6246.0], [33.6, 6256.0], [33.7, 6269.0], [33.8, 6272.0], [33.9, 6284.0], [34.0, 6292.0], [34.1, 6299.0], [34.2, 6300.0], [34.3, 6300.0], [34.4, 6301.0], [34.5, 6307.0], [34.6, 6311.0], [34.7, 6314.0], [34.8, 6323.0], [34.9, 6325.0], [35.0, 6326.0], [35.1, 6330.0], [35.2, 6332.0], [35.3, 6344.0], [35.4, 6350.0], [35.5, 6352.0], [35.6, 6360.0], [35.7, 6360.0], [35.8, 6380.0], [35.9, 6382.0], [36.0, 6383.0], [36.1, 6384.0], [36.2, 6384.0], [36.3, 6386.0], [36.4, 6414.0], [36.5, 6424.0], [36.6, 6434.0], [36.7, 6440.0], [36.8, 6460.0], [36.9, 6463.0], [37.0, 6477.0], [37.1, 6481.0], [37.2, 6481.0], [37.3, 6496.0], [37.4, 6501.0], [37.5, 6502.0], [37.6, 6509.0], [37.7, 6509.0], [37.8, 6511.0], [37.9, 6512.0], [38.0, 6517.0], [38.1, 6522.0], [38.2, 6529.0], [38.3, 6539.0], [38.4, 6546.0], [38.5, 6547.0], [38.6, 6547.0], [38.7, 6548.0], [38.8, 6561.0], [38.9, 6565.0], [39.0, 6566.0], [39.1, 6568.0], [39.2, 6575.0], [39.3, 6583.0], [39.4, 6587.0], [39.5, 6594.0], [39.6, 6605.0], [39.7, 6606.0], [39.8, 6626.0], [39.9, 6628.0], [40.0, 6631.0], [40.1, 6633.0], [40.2, 6638.0], [40.3, 6643.0], [40.4, 6646.0], [40.5, 6650.0], [40.6, 6650.0], [40.7, 6651.0], [40.8, 6655.0], [40.9, 6659.0], [41.0, 6663.0], [41.1, 6664.0], [41.2, 6677.0], [41.3, 6680.0], [41.4, 6687.0], [41.5, 6690.0], [41.6, 6702.0], [41.7, 6712.0], [41.8, 6717.0], [41.9, 6720.0], [42.0, 6723.0], [42.1, 6723.0], [42.2, 6749.0], [42.3, 6751.0], [42.4, 6760.0], [42.5, 6762.0], [42.6, 6766.0], [42.7, 6775.0], [42.8, 6779.0], [42.9, 6780.0], [43.0, 6783.0], [43.1, 6786.0], [43.2, 6790.0], [43.3, 6792.0], [43.4, 6796.0], [43.5, 6798.0], [43.6, 6811.0], [43.7, 6814.0], [43.8, 6826.0], [43.9, 6838.0], [44.0, 6841.0], [44.1, 6847.0], [44.2, 6860.0], [44.3, 6870.0], [44.4, 6876.0], [44.5, 6880.0], [44.6, 6885.0], [44.7, 6886.0], [44.8, 6895.0], [44.9, 6897.0], [45.0, 6898.0], [45.1, 6899.0], [45.2, 6901.0], [45.3, 6905.0], [45.4, 6907.0], [45.5, 6907.0], [45.6, 6907.0], [45.7, 6911.0], [45.8, 6921.0], [45.9, 6927.0], [46.0, 6928.0], [46.1, 6929.0], [46.2, 6929.0], [46.3, 6933.0], [46.4, 6934.0], [46.5, 6934.0], [46.6, 6935.0], [46.7, 6936.0], [46.8, 6939.0], [46.9, 6939.0], [47.0, 6940.0], [47.1, 6945.0], [47.2, 6955.0], [47.3, 6959.0], [47.4, 6962.0], [47.5, 6969.0], [47.6, 6969.0], [47.7, 6973.0], [47.8, 6978.0], [47.9, 6987.0], [48.0, 6991.0], [48.1, 6994.0], [48.2, 6995.0], [48.3, 7005.0], [48.4, 7015.0], [48.5, 7024.0], [48.6, 7024.0], [48.7, 7033.0], [48.8, 7034.0], [48.9, 7034.0], [49.0, 7038.0], [49.1, 7046.0], [49.2, 7048.0], [49.3, 7048.0], [49.4, 7049.0], [49.5, 7050.0], [49.6, 7051.0], [49.7, 7053.0], [49.8, 7056.0], [49.9, 7057.0], [50.0, 7057.0], [50.1, 7071.0], [50.2, 7076.0], [50.3, 7084.0], [50.4, 7084.0], [50.5, 7103.0], [50.6, 7105.0], [50.7, 7105.0], [50.8, 7108.0], [50.9, 7110.0], [51.0, 7112.0], [51.1, 7126.0], [51.2, 7127.0], [51.3, 7131.0], [51.4, 7137.0], [51.5, 7151.0], [51.6, 7154.0], [51.7, 7155.0], [51.8, 7160.0], [51.9, 7162.0], [52.0, 7171.0], [52.1, 7176.0], [52.2, 7177.0], [52.3, 7182.0], [52.4, 7187.0], [52.5, 7199.0], [52.6, 7200.0], [52.7, 7204.0], [52.8, 7204.0], [52.9, 7208.0], [53.0, 7212.0], [53.1, 7217.0], [53.2, 7226.0], [53.3, 7227.0], [53.4, 7229.0], [53.5, 7230.0], [53.6, 7231.0], [53.7, 7236.0], [53.8, 7244.0], [53.9, 7249.0], [54.0, 7256.0], [54.1, 7256.0], [54.2, 7258.0], [54.3, 7266.0], [54.4, 7268.0], [54.5, 7271.0], [54.6, 7274.0], [54.7, 7289.0], [54.8, 7295.0], [54.9, 7299.0], [55.0, 7299.0], [55.1, 7301.0], [55.2, 7303.0], [55.3, 7303.0], [55.4, 7315.0], [55.5, 7320.0], [55.6, 7323.0], [55.7, 7329.0], [55.8, 7336.0], [55.9, 7341.0], [56.0, 7343.0], [56.1, 7343.0], [56.2, 7349.0], [56.3, 7351.0], [56.4, 7358.0], [56.5, 7377.0], [56.6, 7382.0], [56.7, 7387.0], [56.8, 7394.0], [56.9, 7397.0], [57.0, 7418.0], [57.1, 7434.0], [57.2, 7439.0], [57.3, 7443.0], [57.4, 7446.0], [57.5, 7452.0], [57.6, 7472.0], [57.7, 7473.0], [57.8, 7475.0], [57.9, 7480.0], [58.0, 7481.0], [58.1, 7483.0], [58.2, 7484.0], [58.3, 7491.0], [58.4, 7493.0], [58.5, 7494.0], [58.6, 7501.0], [58.7, 7522.0], [58.8, 7525.0], [58.9, 7535.0], [59.0, 7543.0], [59.1, 7545.0], [59.2, 7548.0], [59.3, 7553.0], [59.4, 7558.0], [59.5, 7562.0], [59.6, 7570.0], [59.7, 7575.0], [59.8, 7592.0], [59.9, 7594.0], [60.0, 7602.0], [60.1, 7615.0], [60.2, 7617.0], [60.3, 7639.0], [60.4, 7643.0], [60.5, 7648.0], [60.6, 7649.0], [60.7, 7655.0], [60.8, 7669.0], [60.9, 7679.0], [61.0, 7689.0], [61.1, 7717.0], [61.2, 7720.0], [61.3, 7724.0], [61.4, 7733.0], [61.5, 7737.0], [61.6, 7737.0], [61.7, 7740.0], [61.8, 7746.0], [61.9, 7749.0], [62.0, 7750.0], [62.1, 7761.0], [62.2, 7762.0], [62.3, 7783.0], [62.4, 7783.0], [62.5, 7784.0], [62.6, 7790.0], [62.7, 7797.0], [62.8, 7801.0], [62.9, 7812.0], [63.0, 7815.0], [63.1, 7835.0], [63.2, 7839.0], [63.3, 7860.0], [63.4, 7860.0], [63.5, 7867.0], [63.6, 7869.0], [63.7, 7874.0], [63.8, 7886.0], [63.9, 7887.0], [64.0, 7887.0], [64.1, 7888.0], [64.2, 7891.0], [64.3, 7899.0], [64.4, 7906.0], [64.5, 7914.0], [64.6, 7915.0], [64.7, 7927.0], [64.8, 7928.0], [64.9, 7938.0], [65.0, 7941.0], [65.1, 7944.0], [65.2, 7946.0], [65.3, 7946.0], [65.4, 7953.0], [65.5, 7956.0], [65.6, 7958.0], [65.7, 7958.0], [65.8, 7962.0], [65.9, 7969.0], [66.0, 7972.0], [66.1, 7972.0], [66.2, 7974.0], [66.3, 7974.0], [66.4, 7984.0], [66.5, 8002.0], [66.6, 8005.0], [66.7, 8008.0], [66.8, 8013.0], [66.9, 8017.0], [67.0, 8017.0], [67.1, 8019.0], [67.2, 8026.0], [67.3, 8030.0], [67.4, 8033.0], [67.5, 8047.0], [67.6, 8048.0], [67.7, 8050.0], [67.8, 8053.0], [67.9, 8054.0], [68.0, 8055.0], [68.1, 8059.0], [68.2, 8066.0], [68.3, 8066.0], [68.4, 8068.0], [68.5, 8071.0], [68.6, 8071.0], [68.7, 8078.0], [68.8, 8080.0], [68.9, 8084.0], [69.0, 8095.0], [69.1, 8097.0], [69.2, 8103.0], [69.3, 8103.0], [69.4, 8104.0], [69.5, 8111.0], [69.6, 8112.0], [69.7, 8113.0], [69.8, 8113.0], [69.9, 8117.0], [70.0, 8119.0], [70.1, 8134.0], [70.2, 8135.0], [70.3, 8140.0], [70.4, 8141.0], [70.5, 8150.0], [70.6, 8150.0], [70.7, 8157.0], [70.8, 8159.0], [70.9, 8160.0], [71.0, 8161.0], [71.1, 8161.0], [71.2, 8164.0], [71.3, 8165.0], [71.4, 8168.0], [71.5, 8178.0], [71.6, 8197.0], [71.7, 8204.0], [71.8, 8206.0], [71.9, 8207.0], [72.0, 8222.0], [72.1, 8227.0], [72.2, 8227.0], [72.3, 8229.0], [72.4, 8233.0], [72.5, 8234.0], [72.6, 8236.0], [72.7, 8238.0], [72.8, 8242.0], [72.9, 8246.0], [73.0, 8256.0], [73.1, 8259.0], [73.2, 8260.0], [73.3, 8268.0], [73.4, 8268.0], [73.5, 8269.0], [73.6, 8271.0], [73.7, 8271.0], [73.8, 8276.0], [73.9, 8279.0], [74.0, 8282.0], [74.1, 8284.0], [74.2, 8291.0], [74.3, 8309.0], [74.4, 8315.0], [74.5, 8316.0], [74.6, 8316.0], [74.7, 8321.0], [74.8, 8325.0], [74.9, 8333.0], [75.0, 8335.0], [75.1, 8352.0], [75.2, 8362.0], [75.3, 8366.0], [75.4, 8367.0], [75.5, 8379.0], [75.6, 8384.0], [75.7, 8393.0], [75.8, 8395.0], [75.9, 8397.0], [76.0, 8406.0], [76.1, 8409.0], [76.2, 8410.0], [76.3, 8413.0], [76.4, 8421.0], [76.5, 8425.0], [76.6, 8427.0], [76.7, 8434.0], [76.8, 8438.0], [76.9, 8455.0], [77.0, 8459.0], [77.1, 8462.0], [77.2, 8462.0], [77.3, 8468.0], [77.4, 8474.0], [77.5, 8481.0], [77.6, 8502.0], [77.7, 8503.0], [77.8, 8532.0], [77.9, 8533.0], [78.0, 8537.0], [78.1, 8541.0], [78.2, 8547.0], [78.3, 8569.0], [78.4, 8579.0], [78.5, 8582.0], [78.6, 8593.0], [78.7, 8603.0], [78.8, 8604.0], [78.9, 8605.0], [79.0, 8607.0], [79.1, 8625.0], [79.2, 8636.0], [79.3, 8653.0], [79.4, 8662.0], [79.5, 8667.0], [79.6, 8675.0], [79.7, 8678.0], [79.8, 8679.0], [79.9, 8685.0], [80.0, 8690.0], [80.1, 8696.0], [80.2, 8711.0], [80.3, 8725.0], [80.4, 8738.0], [80.5, 8756.0], [80.6, 8757.0], [80.7, 8760.0], [80.8, 8764.0], [80.9, 8771.0], [81.0, 8773.0], [81.1, 8774.0], [81.2, 8787.0], [81.3, 8801.0], [81.4, 8805.0], [81.5, 8810.0], [81.6, 8811.0], [81.7, 8816.0], [81.8, 8820.0], [81.9, 8837.0], [82.0, 8850.0], [82.1, 8853.0], [82.2, 8880.0], [82.3, 8882.0], [82.4, 8885.0], [82.5, 8901.0], [82.6, 8908.0], [82.7, 8953.0], [82.8, 8957.0], [82.9, 8960.0], [83.0, 8960.0], [83.1, 8976.0], [83.2, 8980.0], [83.3, 8989.0], [83.4, 8992.0], [83.5, 9012.0], [83.6, 9027.0], [83.7, 9032.0], [83.8, 9040.0], [83.9, 9042.0], [84.0, 9079.0], [84.1, 9079.0], [84.2, 9083.0], [84.3, 9085.0], [84.4, 9090.0], [84.5, 9099.0], [84.6, 9103.0], [84.7, 9110.0], [84.8, 9112.0], [84.9, 9116.0], [85.0, 9118.0], [85.1, 9118.0], [85.2, 9149.0], [85.3, 9150.0], [85.4, 9160.0], [85.5, 9164.0], [85.6, 9165.0], [85.7, 9172.0], [85.8, 9173.0], [85.9, 9175.0], [86.0, 9182.0], [86.1, 9215.0], [86.2, 9242.0], [86.3, 9261.0], [86.4, 9275.0], [86.5, 9309.0], [86.6, 9313.0], [86.7, 9329.0], [86.8, 9346.0], [86.9, 9364.0], [87.0, 9372.0], [87.1, 9381.0], [87.2, 9399.0], [87.3, 9456.0], [87.4, 9459.0], [87.5, 9492.0], [87.6, 9499.0], [87.7, 9546.0], [87.8, 9548.0], [87.9, 9555.0], [88.0, 9564.0], [88.1, 9585.0], [88.2, 9590.0], [88.3, 9591.0], [88.4, 9597.0], [88.5, 9620.0], [88.6, 9644.0], [88.7, 9701.0], [88.8, 9712.0], [88.9, 9721.0], [89.0, 9724.0], [89.1, 9738.0], [89.2, 9745.0], [89.3, 9756.0], [89.4, 9772.0], [89.5, 9777.0], [89.6, 9789.0], [89.7, 9790.0], [89.8, 9818.0], [89.9, 9833.0], [90.0, 9835.0], [90.1, 9842.0], [90.2, 9842.0], [90.3, 9856.0], [90.4, 9862.0], [90.5, 9864.0], [90.6, 9870.0], [90.7, 9878.0], [90.8, 9886.0], [90.9, 9906.0], [91.0, 9922.0], [91.1, 9931.0], [91.2, 9946.0], [91.3, 9955.0], [91.4, 9974.0], [91.5, 9985.0], [91.6, 10000.0], [91.7, 10050.0], [91.8, 10075.0], [91.9, 10093.0], [92.0, 10095.0], [92.1, 10100.0], [92.2, 10106.0], [92.3, 10131.0], [92.4, 10149.0], [92.5, 10168.0], [92.6, 10184.0], [92.7, 10189.0], [92.8, 10226.0], [92.9, 10236.0], [93.0, 10264.0], [93.1, 10284.0], [93.2, 10288.0], [93.3, 10290.0], [93.4, 10293.0], [93.5, 10301.0], [93.6, 10301.0], [93.7, 10307.0], [93.8, 10315.0], [93.9, 10365.0], [94.0, 10372.0], [94.1, 10381.0], [94.2, 10440.0], [94.3, 10463.0], [94.4, 10476.0], [94.5, 10500.0], [94.6, 10508.0], [94.7, 10525.0], [94.8, 10542.0], [94.9, 10577.0], [95.0, 10585.0], [95.1, 10591.0], [95.2, 10593.0], [95.3, 10611.0], [95.4, 10614.0], [95.5, 10632.0], [95.6, 10636.0], [95.7, 10639.0], [95.8, 10663.0], [95.9, 10715.0], [96.0, 10728.0], [96.1, 10729.0], [96.2, 10781.0], [96.3, 10786.0], [96.4, 10837.0], [96.5, 10841.0], [96.6, 10859.0], [96.7, 10867.0], [96.8, 10876.0], [96.9, 10905.0], [97.0, 10953.0], [97.1, 10959.0], [97.2, 10963.0], [97.3, 10968.0], [97.4, 10971.0], [97.5, 11002.0], [97.6, 11005.0], [97.7, 11021.0], [97.8, 11046.0], [97.9, 11178.0], [98.0, 11204.0], [98.1, 11225.0], [98.2, 11241.0], [98.3, 11278.0], [98.4, 11308.0], [98.5, 11425.0], [98.6, 11433.0], [98.7, 11480.0], [98.8, 11496.0], [98.9, 11524.0], [99.0, 11548.0], [99.1, 11608.0], [99.2, 11946.0], [99.3, 12025.0], [99.4, 12306.0], [99.5, 12369.0], [99.6, 12477.0], [99.7, 12534.0], [99.8, 12635.0], [99.9, 12691.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 221.0, "series": [{"data": [[0.0, 221.0], [600.0, 1.0], [700.0, 14.0], [800.0, 21.0], [900.0, 14.0], [1000.0, 12.0], [1100.0, 16.0], [1200.0, 19.0], [1300.0, 14.0], [1400.0, 13.0], [1500.0, 14.0], [1600.0, 19.0], [1700.0, 10.0], [1800.0, 8.0], [1900.0, 10.0], [2000.0, 11.0], [2100.0, 9.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 16.0], [2500.0, 16.0], [2600.0, 11.0], [2800.0, 11.0], [2700.0, 10.0], [2900.0, 13.0], [3000.0, 12.0], [3100.0, 3.0], [3300.0, 15.0], [3200.0, 9.0], [3400.0, 8.0], [3500.0, 14.0], [3600.0, 19.0], [3700.0, 14.0], [3800.0, 15.0], [3900.0, 11.0], [4000.0, 22.0], [4300.0, 34.0], [4200.0, 12.0], [4100.0, 35.0], [4500.0, 11.0], [4400.0, 19.0], [4600.0, 11.0], [4800.0, 15.0], [4700.0, 5.0], [4900.0, 7.0], [5000.0, 10.0], [5100.0, 23.0], [5200.0, 13.0], [5300.0, 6.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 8.0], [5700.0, 2.0], [5800.0, 19.0], [6000.0, 5.0], [5900.0, 12.0], [6100.0, 6.0], [6200.0, 5.0], [6300.0, 8.0], [6400.0, 13.0], [6600.0, 12.0], [6500.0, 13.0], [6700.0, 13.0], [6800.0, 3.0], [6900.0, 1.0], [7400.0, 1.0], [8000.0, 1.0], [200.0, 2.0], [300.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[600.0, 19.0], [700.0, 12.0], [800.0, 6.0], [900.0, 9.0], [1000.0, 12.0], [1100.0, 11.0], [1200.0, 12.0], [1300.0, 14.0], [1400.0, 13.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 7.0], [2000.0, 5.0], [2100.0, 8.0], [2200.0, 7.0], [2300.0, 2.0], [2400.0, 7.0], [2500.0, 10.0], [2600.0, 4.0], [2700.0, 5.0], [2800.0, 8.0], [2900.0, 5.0], [3000.0, 7.0], [3100.0, 9.0], [3300.0, 8.0], [3200.0, 6.0], [3400.0, 7.0], [3500.0, 10.0], [3600.0, 3.0], [3700.0, 7.0], [3800.0, 10.0], [3900.0, 18.0], [4000.0, 11.0], [4300.0, 9.0], [4200.0, 11.0], [4100.0, 6.0], [4400.0, 8.0], [4500.0, 12.0], [4600.0, 13.0], [4700.0, 14.0], [4800.0, 14.0], [5000.0, 8.0], [4900.0, 13.0], [5100.0, 11.0], [5200.0, 16.0], [5300.0, 16.0], [5500.0, 16.0], [5600.0, 20.0], [5400.0, 16.0], [5700.0, 19.0], [5800.0, 21.0], [6100.0, 26.0], [5900.0, 23.0], [6000.0, 23.0], [6200.0, 32.0], [6300.0, 16.0], [6500.0, 19.0], [6400.0, 18.0], [6600.0, 18.0], [6800.0, 9.0], [6700.0, 13.0], [6900.0, 10.0], [7000.0, 12.0], [7100.0, 9.0], [7300.0, 12.0], [7200.0, 11.0], [7400.0, 10.0], [7500.0, 10.0], [7600.0, 13.0], [7800.0, 12.0], [7900.0, 15.0], [7700.0, 7.0], [8100.0, 13.0], [8000.0, 16.0], [8200.0, 14.0], [8700.0, 6.0], [8300.0, 12.0], [8400.0, 8.0], [8500.0, 8.0], [8600.0, 1.0], [9000.0, 13.0], [8800.0, 8.0], [8900.0, 6.0], [9200.0, 2.0], [9100.0, 3.0], [9300.0, 1.0], [9500.0, 3.0], [9700.0, 2.0], [9900.0, 2.0], [200.0, 3.0], [300.0, 4.0], [400.0, 10.0], [500.0, 11.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[500.0, 1.0], [600.0, 1.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 4.0], [1300.0, 5.0], [1400.0, 5.0], [1500.0, 7.0], [1600.0, 1.0], [1700.0, 9.0], [1800.0, 6.0], [1900.0, 4.0], [2000.0, 5.0], [2100.0, 2.0], [2300.0, 6.0], [2200.0, 2.0], [2400.0, 4.0], [2500.0, 7.0], [2600.0, 3.0], [2800.0, 3.0], [2700.0, 6.0], [2900.0, 4.0], [3000.0, 3.0], [3100.0, 3.0], [3300.0, 7.0], [3200.0, 5.0], [3400.0, 9.0], [3500.0, 4.0], [3700.0, 2.0], [3600.0, 6.0], [3800.0, 4.0], [3900.0, 4.0], [4000.0, 2.0], [4100.0, 3.0], [4300.0, 2.0], [4200.0, 3.0], [4500.0, 6.0], [4400.0, 8.0], [4600.0, 12.0], [4700.0, 6.0], [4800.0, 8.0], [5000.0, 12.0], [4900.0, 15.0], [5100.0, 13.0], [5200.0, 13.0], [5300.0, 10.0], [5400.0, 13.0], [5500.0, 5.0], [5600.0, 3.0], [5800.0, 8.0], [5700.0, 10.0], [5900.0, 11.0], [6000.0, 18.0], [6100.0, 14.0], [6300.0, 22.0], [6200.0, 9.0], [6600.0, 20.0], [6500.0, 22.0], [6400.0, 10.0], [6700.0, 20.0], [6900.0, 31.0], [6800.0, 16.0], [7000.0, 22.0], [7100.0, 21.0], [7200.0, 25.0], [7300.0, 19.0], [7400.0, 16.0], [7500.0, 14.0], [7600.0, 11.0], [7800.0, 16.0], [7700.0, 17.0], [7900.0, 21.0], [8000.0, 27.0], [8100.0, 25.0], [8400.0, 16.0], [8500.0, 12.0], [8300.0, 17.0], [8200.0, 26.0], [8600.0, 15.0], [8700.0, 11.0], [9100.0, 15.0], [8800.0, 12.0], [8900.0, 10.0], [9000.0, 11.0], [9200.0, 4.0], [9300.0, 8.0], [9500.0, 8.0], [9700.0, 11.0], [9400.0, 4.0], [9600.0, 2.0], [9900.0, 7.0], [10000.0, 5.0], [9800.0, 11.0], [10200.0, 7.0], [10100.0, 7.0], [10600.0, 6.0], [10500.0, 8.0], [10300.0, 7.0], [10400.0, 3.0], [10700.0, 5.0], [10900.0, 6.0], [11000.0, 4.0], [10800.0, 5.0], [11200.0, 4.0], [11100.0, 1.0], [11500.0, 2.0], [11400.0, 4.0], [11600.0, 1.0], [11300.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [12300.0, 2.0], [12500.0, 1.0], [12600.0, 2.0], [12400.0, 1.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1843.0, "series": [{"data": [[0.0, 17.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 140.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1843.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 603.6883333333325, "minX": 1.74123954E12, "maxY": 603.6883333333325, "series": [{"data": [[1.74123954E12, 603.6883333333325]], "isOverall": false, "label": "User Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123954E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 12306.0, "series": [{"data": [[2.0, 3.0], [3.0, 2.0], [4.0, 2.0], [6.0, 6.0], [8.0, 6.0], [9.0, 6.0], [12.0, 7.5], [13.0, 4.333333333333333], [16.0, 7.0], [18.0, 4.0], [19.0, 5.0], [20.0, 7.0], [23.0, 5.0], [24.0, 7.0], [25.0, 2.0], [26.0, 5.0], [27.0, 4.0], [28.0, 7.0], [29.0, 6.0], [33.0, 9.0], [35.0, 4.0], [34.0, 8.333333333333334], [37.0, 11.0], [39.0, 7.0], [38.0, 9.0], [40.0, 4.0], [43.0, 2.0], [42.0, 3.5], [45.0, 7.5], [49.0, 2.0], [48.0, 5.0], [50.0, 1.0], [53.0, 2.0], [52.0, 2.5], [55.0, 3.0], [54.0, 2.0], [57.0, 2.0], [56.0, 4.0], [59.0, 4.0], [58.0, 5.0], [61.0, 3.0], [60.0, 8.0], [63.0, 2.0], [62.0, 2.0], [67.0, 9.5], [65.0, 10.0], [64.0, 2.0], [71.0, 4.0], [70.0, 6.0], [68.0, 7.0], [75.0, 4.0], [74.0, 5.0], [73.0, 4.0], [72.0, 3.0], [78.0, 3.0], [77.0, 1.0], [76.0, 4.0], [83.0, 4.0], [82.0, 3.0], [80.0, 6.0], [87.0, 2.0], [86.0, 2.0], [85.0, 3.0], [84.0, 2.0], [91.0, 3.3333333333333335], [88.0, 2.0], [95.0, 3.0], [94.0, 3.0], [93.0, 6.0], [92.0, 4.0], [99.0, 3.0], [98.0, 3.5], [96.0, 10.0], [103.0, 3.0], [102.0, 2.5], [100.0, 2.0], [107.0, 4.0], [106.0, 4.0], [105.0, 5.0], [104.0, 3.0], [110.0, 5.0], [109.0, 3.5], [115.0, 2.0], [114.0, 2.0], [113.0, 2.0], [112.0, 2.5], [119.0, 2.0], [118.0, 4.0], [117.0, 3.0], [116.0, 1.0], [123.0, 4.0], [122.0, 3.0], [121.0, 3.0], [127.0, 3.0], [126.0, 3.0], [125.0, 4.0], [124.0, 4.0], [135.0, 4.0], [134.0, 4.5], [132.0, 4.0], [131.0, 3.0], [130.0, 4.0], [129.0, 8.0], [128.0, 3.0], [143.0, 2.0], [142.0, 3.0], [141.0, 3.0], [140.0, 3.0], [139.0, 3.0], [138.0, 4.0], [137.0, 4.0], [136.0, 3.0], [151.0, 21.0], [149.0, 75.0], [148.0, 20.0], [147.0, 2.0], [146.0, 3.0], [145.0, 3.0], [144.0, 3.0], [159.0, 3.0], [158.0, 13.0], [157.0, 7.0], [156.0, 69.0], [155.0, 42.0], [154.0, 40.0], [153.0, 39.0], [167.0, 16.333333333333332], [164.0, 18.0], [163.0, 10.0], [162.0, 50.0], [161.0, 17.0], [160.0, 7.0], [175.0, 15.5], [173.0, 18.0], [172.0, 18.0], [171.0, 19.0], [170.0, 3.0], [169.0, 19.0], [168.0, 27.0], [183.0, 11.0], [182.0, 11.0], [180.0, 13.5], [178.0, 10.0], [177.0, 9.0], [191.0, 17.0], [190.0, 5.0], [189.0, 16.0], [188.0, 8.0], [187.0, 6.5], [185.0, 6.0], [184.0, 16.0], [199.0, 11.0], [198.0, 14.0], [197.0, 18.0], [196.0, 10.0], [195.0, 7.0], [194.0, 12.0], [193.0, 22.0], [192.0, 19.0], [207.0, 9.0], [206.0, 1523.0], [205.0, 1259.0], [204.0, 5.0], [203.0, 7.0], [202.0, 9.0], [201.0, 9.0], [200.0, 11.0], [215.0, 15.0], [214.0, 24.0], [213.0, 481.0], [212.0, 13.0], [210.0, 20.0], [209.0, 16.0], [208.0, 10.0], [223.0, 4.0], [222.0, 9.0], [220.0, 13.0], [219.0, 5.0], [218.0, 6.0], [217.0, 22.0], [231.0, 1041.5], [229.0, 2278.0], [228.0, 2655.0], [227.0, 1261.0], [226.0, 757.0], [225.0, 2416.0], [224.0, 15.0], [238.0, 1067.5], [236.0, 1336.0], [235.0, 745.0], [233.0, 2507.0], [232.0, 818.0], [247.0, 3123.5], [246.0, 765.0], [245.0, 1148.0], [244.0, 946.0], [240.0, 1011.0], [255.0, 727.0], [254.0, 1123.0], [252.0, 1014.5], [251.0, 864.0], [250.0, 921.0], [249.0, 1488.0], [270.0, 1195.0], [269.0, 1104.5], [267.0, 750.5], [265.0, 1119.0], [264.0, 1344.0], [261.0, 1144.0], [260.0, 1157.0], [257.0, 841.0], [256.0, 1552.0], [274.0, 900.0], [287.0, 1204.5], [285.0, 876.5], [283.0, 1033.0], [281.0, 1472.0], [280.0, 1004.5], [279.0, 946.0], [277.0, 950.0], [276.0, 1046.0], [273.0, 759.0], [272.0, 1118.0], [291.0, 1070.0], [303.0, 1602.0], [301.0, 1271.0], [299.0, 1205.0], [298.0, 1809.3333333333333], [296.0, 1953.0], [294.0, 5335.0], [293.0, 1517.0], [290.0, 1082.0], [289.0, 1167.5], [319.0, 1376.3333333333333], [316.0, 1421.5], [314.0, 1453.0], [313.0, 1643.0], [312.0, 1534.5], [311.0, 1287.0], [309.0, 1471.3333333333333], [306.0, 1170.0], [304.0, 1374.0], [333.0, 1562.0], [332.0, 2870.0], [331.0, 1816.0], [329.0, 1375.0], [328.0, 2106.0], [326.0, 1604.0], [325.0, 1338.0], [324.0, 1346.0], [323.0, 2076.0], [321.0, 1695.5], [349.0, 1785.0], [351.0, 1948.5], [348.0, 1861.0], [338.0, 2421.0], [336.0, 2524.3333333333335], [347.0, 1554.0], [346.0, 1929.0], [345.0, 1510.0], [344.0, 1417.0], [343.0, 1588.0], [342.0, 1608.0], [341.0, 1583.3333333333333], [340.0, 1566.0], [366.0, 1673.0], [367.0, 1816.0], [364.0, 1631.0], [363.0, 1677.0], [362.0, 1676.0], [361.0, 1728.3333333333333], [358.0, 1962.5], [356.0, 2321.0], [355.0, 1665.0], [354.0, 1616.0], [353.0, 2010.0], [382.0, 1840.0], [383.0, 2028.0], [381.0, 1912.0], [380.0, 1741.0], [379.0, 2415.0], [378.0, 2048.0], [377.0, 2289.0], [375.0, 1879.0], [368.0, 2369.0], [371.0, 1969.5], [369.0, 1803.0], [374.0, 2016.0], [373.0, 1683.0], [372.0, 1691.0], [399.0, 2165.6666666666665], [396.0, 1203.25], [387.0, 2049.0], [386.0, 2005.0], [385.0, 3543.0], [384.0, 2257.0], [394.0, 1404.5], [395.0, 2169.0], [393.0, 2105.0], [392.0, 3674.0], [390.0, 2376.0], [389.0, 2399.0], [388.0, 2045.0], [414.0, 2679.5], [412.0, 2528.0], [403.0, 2224.0], [402.0, 2388.0], [401.0, 2122.0], [411.0, 2294.0], [410.0, 2374.0], [409.0, 2235.0], [408.0, 2477.0], [407.0, 2333.0], [406.0, 2256.0], [405.0, 2504.0], [404.0, 2255.0], [430.0, 2629.0], [429.0, 1801.5], [431.0, 2624.0], [428.0, 2357.0], [427.0, 2320.0], [426.0, 2420.0], [425.0, 2513.0], [424.0, 2795.5], [423.0, 2709.0], [416.0, 2452.5], [419.0, 2461.0], [418.0, 2551.5], [421.0, 2262.0], [420.0, 2542.0], [445.0, 540.25], [444.0, 561.5], [434.0, 2400.0], [432.0, 2327.0], [446.0, 957.0], [447.0, 3318.0], [442.0, 2816.5], [440.0, 2780.0], [439.0, 2698.0], [438.0, 2618.0], [437.0, 3946.5], [436.0, 2498.0], [451.0, 2147.75], [455.0, 1589.3333333333335], [448.0, 2614.8], [456.0, 1755.5], [463.0, 5181.0], [462.0, 2819.0], [460.0, 2682.0], [459.0, 3540.0], [458.0, 3060.0], [454.0, 3175.0], [452.0, 2791.0], [478.0, 3266.0], [473.0, 1491.0], [475.0, 2154.5], [479.0, 2780.0], [477.0, 3072.25], [467.0, 2788.0], [466.0, 2689.0], [465.0, 2941.0], [464.0, 5174.0], [472.0, 3014.0], [471.0, 3433.0], [470.0, 3679.0], [469.0, 3806.0], [468.0, 3560.0], [481.0, 1941.25], [487.0, 2030.5], [490.0, 1122.0], [495.0, 2970.0], [494.0, 2976.0], [493.0, 2948.3333333333335], [483.0, 2852.5], [491.0, 2939.5], [488.0, 2926.0], [486.0, 2984.0], [484.0, 3009.0], [508.0, 3230.6666666666665], [511.0, 3054.0], [510.0, 3705.0], [509.0, 3725.0], [505.0, 3248.5], [503.0, 3601.0], [502.0, 3334.0], [498.0, 3374.5], [496.0, 2994.0], [536.0, 3443.5], [541.0, 2903.0], [516.0, 2688.5], [515.0, 3296.0], [514.0, 3302.0], [513.0, 3274.5], [517.0, 3257.0], [519.0, 3709.0], [518.0, 3244.0], [527.0, 3335.0], [526.0, 3585.0], [525.0, 3382.0], [523.0, 3269.0], [522.0, 3382.0], [521.0, 3266.0], [520.0, 5209.0], [533.0, 2463.0], [539.0, 3461.0], [538.0, 3571.0], [537.0, 3439.0], [534.0, 3393.0], [532.0, 3393.0], [531.0, 3463.0], [530.0, 3412.0], [529.0, 3848.0], [528.0, 3371.0], [568.0, 2556.0], [558.0, 2552.0], [549.0, 2484.5], [550.0, 2486.5], [559.0, 1653.6], [545.0, 3691.5], [544.0, 3591.0], [547.0, 3617.5], [546.0, 3722.0], [557.0, 2031.0], [556.0, 2504.0], [555.0, 2011.3333333333335], [554.0, 2553.0], [553.0, 3666.0], [552.0, 3655.0], [567.0, 1676.0], [566.0, 2570.0], [575.0, 4163.0], [560.0, 3933.0], [562.0, 3846.0], [561.0, 3845.0], [565.0, 3952.0], [564.0, 3966.5], [574.0, 4070.0], [573.0, 4115.5], [571.0, 4035.0], [570.0, 4005.0], [569.0, 4088.0], [604.0, 4383.0], [580.0, 2625.5], [582.0, 2519.0], [581.0, 4161.0], [583.0, 4158.0], [601.0, 4484.0], [600.0, 4422.0], [587.0, 2803.0], [586.0, 4247.0], [585.0, 4239.0], [584.0, 4151.0], [588.0, 2644.5], [591.0, 4342.0], [577.0, 4171.0], [576.0, 4110.0], [579.0, 4168.0], [578.0, 4158.0], [590.0, 4333.0], [589.0, 4308.0], [607.0, 4179.0], [592.0, 4336.0], [594.0, 4371.0], [593.0, 4356.0], [596.0, 4386.0], [595.0, 4455.0], [598.0, 4521.0], [597.0, 4378.0], [606.0, 4660.0], [605.0, 4356.0], [603.0, 4412.0], [602.0, 4475.0], [636.0, 4128.0], [609.0, 3311.5], [623.0, 3972.0], [608.0, 4165.0], [622.0, 3972.0], [621.0, 4073.0], [620.0, 4350.0], [619.0, 4236.0], [618.0, 4311.0], [617.0, 3999.0], [616.0, 4050.0], [639.0, 4072.0], [625.0, 3977.0], [624.0, 3996.0], [629.0, 4154.666666666667], [626.0, 4014.0], [638.0, 4181.0], [637.0, 4119.0], [635.0, 4091.0], [634.0, 4125.0], [633.0, 4121.5], [615.0, 4006.0], [614.0, 4246.0], [613.0, 4021.0], [612.0, 4011.0], [611.0, 4014.0], [610.0, 4035.0], [631.0, 4106.0], [630.0, 4154.0], [664.0, 4690.0], [668.0, 4820.0], [671.0, 4827.0], [657.0, 4656.0], [656.0, 4703.0], [659.0, 4776.0], [658.0, 4812.0], [670.0, 4766.0], [669.0, 4820.0], [667.0, 4748.0], [666.0, 4900.0], [665.0, 4680.0], [655.0, 4656.0], [640.0, 4079.0], [643.0, 4107.0], [641.0, 4118.0], [645.0, 4165.0], [644.0, 4104.0], [647.0, 4137.0], [646.0, 4095.0], [654.0, 4542.0], [653.0, 4288.0], [652.0, 8030.0], [651.0, 4158.0], [650.0, 4089.0], [649.0, 4087.0], [648.0, 4103.0], [663.0, 4664.0], [662.0, 4699.0], [700.0, 2982.666666666667], [698.0, 3488.0], [701.0, 3522.0], [703.0, 5097.0], [689.0, 5002.0], [688.0, 5119.0], [691.0, 5161.0], [690.0, 4980.0], [693.0, 5064.0], [692.0, 4937.0], [702.0, 5103.0], [699.0, 5233.0], [697.0, 5093.0], [696.0, 5061.0], [686.0, 4898.0], [673.0, 4853.0], [672.0, 4780.0], [675.0, 4839.0], [674.0, 4846.0], [677.0, 4930.0], [676.0, 5036.0], [679.0, 4834.0], [678.0, 4843.0], [685.0, 5054.0], [683.0, 5001.0], [681.0, 4817.0], [680.0, 4811.0], [695.0, 5059.0], [694.0, 5059.0], [732.0, 5846.0], [713.0, 3581.5], [712.0, 5148.0], [715.0, 5138.0], [714.0, 5272.0], [717.0, 5148.0], [716.0, 5149.0], [719.0, 6939.0], [705.0, 5140.0], [704.0, 5170.0], [707.0, 5105.0], [706.0, 5222.0], [709.0, 5202.0], [708.0, 5171.0], [711.0, 5160.0], [710.0, 5172.0], [718.0, 5134.0], [735.0, 5863.0], [721.0, 6418.0], [720.0, 5323.0], [723.0, 6112.0], [722.0, 5937.0], [725.0, 5650.0], [724.0, 5690.0], [727.0, 5650.0], [726.0, 5651.0], [734.0, 5832.0], [733.0, 5874.0], [731.0, 5628.0], [730.0, 5658.0], [729.0, 5690.0], [728.0, 5650.0], [764.0, 6393.0], [763.0, 4313.5], [767.0, 6384.0], [753.0, 5817.0], [752.0, 5782.0], [755.0, 5844.0], [754.0, 5898.0], [757.0, 5922.0], [756.0, 5960.0], [766.0, 6172.0], [765.0, 6139.0], [762.0, 6011.0], [761.0, 6109.0], [760.0, 6146.0], [751.0, 5902.0], [737.0, 5875.0], [736.0, 5881.0], [739.0, 5873.0], [738.0, 5887.0], [741.0, 5920.0], [740.0, 5884.0], [743.0, 5859.0], [742.0, 5887.0], [750.0, 5953.0], [749.0, 5877.0], [748.0, 5867.0], [747.0, 5852.5], [745.0, 5904.0], [744.0, 5845.0], [759.0, 5958.0], [758.0, 6007.0], [797.0, 6637.0], [776.0, 4470.0], [777.0, 6406.0], [779.0, 6418.0], [778.0, 6333.0], [781.0, 6444.0], [780.0, 6438.0], [782.0, 4527.5], [784.0, 4477.0], [785.0, 6480.0], [787.0, 6545.0], [786.0, 6455.0], [789.0, 6578.0], [788.0, 6520.0], [791.0, 6535.0], [790.0, 6637.0], [798.0, 3987.666666666667], [799.0, 7490.0], [796.0, 6629.0], [795.0, 6615.0], [794.0, 6621.0], [793.0, 6596.0], [792.0, 6565.0], [783.0, 6442.0], [769.0, 6438.0], [768.0, 6004.0], [772.0, 6392.5], [770.0, 6215.0], [774.0, 6423.0], [773.0, 6207.0], [775.0, 6396.0], [829.0, 6090.0], [820.0, 4761.5], [819.0, 6767.0], [818.0, 6701.0], [817.0, 6707.0], [816.0, 6762.0], [821.0, 6722.0], [823.0, 6562.0], [822.0, 6702.0], [831.0, 6540.0], [830.0, 6747.0], [828.0, 6247.0], [827.0, 6328.0], [826.0, 6294.0], [825.0, 6513.0], [824.0, 6561.0], [807.0, 6706.0], [806.0, 6819.0], [805.0, 6840.0], [804.0, 6849.0], [803.0, 6579.0], [802.0, 6549.0], [801.0, 6611.0], [800.0, 6535.0], [815.0, 6723.0], [814.0, 6674.0], [813.0, 6703.0], [812.0, 6707.0], [811.0, 6688.0], [810.0, 6685.0], [809.0, 6625.0], [808.0, 6763.0], [861.0, 4648.0], [855.0, 4126.5], [854.0, 5228.0], [853.0, 5244.0], [852.0, 5288.0], [851.0, 5305.0], [850.0, 5281.0], [849.0, 5308.0], [848.0, 5295.0], [863.0, 4322.0], [862.0, 4326.0], [860.0, 4642.0], [859.0, 4551.0], [858.0, 4452.0], [857.0, 4493.0], [856.0, 4985.0], [839.0, 5934.0], [838.0, 5909.0], [837.0, 6236.0], [836.0, 5775.0], [835.0, 5988.0], [834.0, 6472.0], [833.0, 6664.0], [832.0, 5983.0], [847.0, 5330.0], [846.0, 4916.0], [845.0, 4929.0], [844.0, 5015.0], [843.0, 5471.0], [842.0, 5108.0], [841.0, 5515.0], [840.0, 6053.0], [890.0, 4539.0], [894.0, 4336.0], [868.0, 3778.0], [867.0, 4322.0], [866.0, 4630.0], [865.0, 4320.0], [864.0, 4328.0], [869.0, 4438.0], [871.0, 4543.0], [870.0, 4525.0], [879.0, 4418.0], [878.0, 4514.0], [877.0, 4436.0], [876.0, 4465.0], [875.0, 4484.0], [874.0, 4531.0], [873.0, 4448.0], [872.0, 4535.0], [889.0, 4357.0], [888.0, 4359.0], [885.0, 3861.5], [887.0, 3672.3333333333335], [886.0, 4395.0], [895.0, 4379.0], [880.0, 4466.0], [882.0, 4501.0], [881.0, 4481.0], [884.0, 4418.0], [883.0, 4467.0], [893.0, 4378.0], [892.0, 4384.0], [891.0, 4332.0], [923.0, 3600.0], [911.0, 3789.0], [910.0, 4066.0], [909.0, 4344.0], [908.0, 4270.0], [907.0, 4279.0], [906.0, 4261.0], [905.0, 4315.0], [904.0, 4230.0], [925.0, 3701.5], [927.0, 3591.0], [919.0, 3799.0], [918.0, 3815.0], [917.0, 3855.0], [916.0, 3836.0], [915.0, 3788.0], [914.0, 3848.0], [913.0, 3911.0], [912.0, 3890.0], [926.0, 3678.0], [924.0, 3597.0], [922.0, 3739.0], [921.0, 3757.0], [920.0, 3709.0], [903.0, 4342.0], [902.0, 4246.0], [901.0, 4108.0], [900.0, 4556.0], [899.0, 4135.0], [898.0, 4189.0], [897.0, 4268.0], [896.0, 4373.0], [930.0, 3642.0], [929.0, 3651.0], [928.0, 3692.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[474.4019999999994, 2771.8190000000004]], "isOverall": false, "label": "16 Get Stock Prices Request-Aggregated", "isController": false}, {"data": [[107.0, 415.5], [106.0, 412.0], [104.0, 379.0], [110.0, 421.5], [116.0, 509.0], [117.0, 518.0], [118.0, 526.0], [119.0, 531.0], [120.0, 248.0], [122.0, 444.0], [123.0, 473.0], [126.0, 592.75], [127.0, 440.0], [129.0, 598.6666666666666], [130.0, 611.0], [134.0, 506.0], [135.0, 687.0], [138.0, 628.3333333333334], [141.0, 526.0], [142.0, 703.5], [144.0, 478.0], [145.0, 684.0], [151.0, 655.0], [153.0, 708.5], [159.0, 447.0], [162.0, 452.0], [165.0, 562.0], [166.0, 782.0], [169.0, 821.0], [170.0, 768.5], [171.0, 631.0], [172.0, 838.0], [176.0, 781.3333333333334], [182.0, 222.0], [193.0, 484.0], [194.0, 1022.0], [196.0, 734.0], [197.0, 931.0], [198.0, 629.0], [203.0, 783.0], [204.0, 1132.0], [205.0, 627.0], [208.0, 1030.0], [209.0, 1060.0], [211.0, 841.0], [212.0, 737.0], [214.0, 1164.0], [219.0, 1012.0], [221.0, 1087.0], [223.0, 1223.0], [225.0, 1265.0], [227.0, 1141.5], [228.0, 959.0], [232.0, 889.6666666666666], [234.0, 1045.0], [236.0, 1316.0], [237.0, 1109.5], [239.0, 1252.0], [240.0, 943.0], [241.0, 878.0], [243.0, 939.0], [245.0, 1390.0], [254.0, 1207.0], [258.0, 1225.5], [257.0, 1183.3333333333333], [259.0, 1091.3333333333333], [260.0, 1360.0], [261.0, 1228.0], [263.0, 1201.0], [265.0, 1284.0], [268.0, 1326.0], [270.0, 1138.6666666666667], [271.0, 970.0], [272.0, 801.0], [273.0, 1097.0], [274.0, 1120.0], [281.0, 1239.0], [286.0, 1338.0], [288.0, 1137.0], [289.0, 1431.0], [299.0, 1498.0], [302.0, 1345.0], [310.0, 1462.5], [311.0, 1853.0], [312.0, 1411.0], [313.0, 1114.0], [314.0, 688.0], [316.0, 1404.0], [322.0, 1318.0], [337.0, 1493.0], [339.0, 1435.0], [340.0, 1529.0], [343.0, 1711.0], [344.0, 1747.0], [345.0, 1518.0], [365.0, 1832.0], [366.0, 1731.0], [367.0, 1726.0], [368.0, 2030.0], [369.0, 1438.0], [374.0, 1314.0], [375.0, 1913.5], [378.0, 1637.0], [382.0, 1949.0], [392.0, 1918.0], [394.0, 1813.3333333333333], [395.0, 2158.0], [397.0, 1764.0], [409.0, 1757.0], [410.0, 2260.0], [414.0, 2208.0], [429.0, 1242.0], [432.0, 2252.0], [435.0, 1475.0], [439.0, 2589.0], [441.0, 1559.5], [445.0, 2113.6666666666665], [444.0, 1886.0], [446.0, 1992.0], [447.0, 2058.0], [449.0, 1495.0], [451.0, 2149.0], [453.0, 2158.0], [456.0, 2406.0], [457.0, 2635.0], [462.0, 2412.0], [464.0, 2816.0], [465.0, 1931.0], [476.0, 3053.0], [480.0, 1906.6666666666667], [483.0, 2878.0], [484.0, 2933.0], [485.0, 2672.25], [489.0, 2461.5], [490.0, 2812.0], [491.0, 2213.5], [493.0, 2870.0], [496.0, 1820.0], [498.0, 2059.0], [501.0, 3002.0], [504.0, 2496.0], [506.0, 2668.0], [508.0, 2541.0], [540.0, 2474.25], [513.0, 2954.3333333333335], [516.0, 2407.0], [523.0, 3302.0], [527.0, 3326.0], [528.0, 2710.25], [529.0, 3144.0], [541.0, 3100.0], [542.0, 3311.0], [547.0, 2473.0], [545.0, 2169.0], [548.0, 1988.0], [550.0, 2799.0], [568.0, 3280.0], [573.0, 3273.0], [549.0, 2711.5], [556.0, 3278.5], [557.0, 3116.0], [554.0, 2868.0], [560.0, 2443.6666666666665], [564.0, 3932.0], [567.0, 2912.0], [566.0, 3969.0], [579.0, 3130.0], [581.0, 4411.0], [588.0, 3290.5], [590.0, 2509.0], [593.0, 3269.0], [594.0, 4364.0], [598.0, 3408.0], [599.0, 3313.0], [606.0, 3422.5], [607.0, 3433.5], [609.0, 3945.0], [611.0, 4569.0], [615.0, 3911.0], [617.0, 3362.0], [621.0, 3421.0], [624.0, 3534.0], [625.0, 3383.0], [628.0, 3187.0], [647.0, 3908.0], [642.0, 4364.0], [640.0, 3473.0], [645.0, 2860.0], [653.0, 4401.0], [654.0, 3523.0], [659.0, 4657.0], [660.0, 4398.0], [668.0, 3820.0], [669.0, 3589.0], [670.0, 3986.0], [671.0, 5062.0], [697.0, 4378.0], [685.0, 4289.0], [684.0, 4310.0], [689.0, 4796.0], [700.0, 4425.0], [701.0, 3162.0], [698.0, 3868.0], [699.0, 5244.0], [690.0, 3376.5], [692.0, 4012.5], [693.0, 3851.5], [695.0, 3652.5], [696.0, 4650.5], [706.0, 4733.0], [705.0, 3934.0], [708.0, 3871.0], [731.0, 9997.0], [713.0, 4488.5], [714.0, 4530.0], [716.0, 4760.0], [722.0, 4549.0], [732.0, 4747.0], [733.0, 4357.5], [752.0, 4248.0], [741.0, 4098.0], [742.0, 5762.0], [760.0, 4081.0], [762.0, 3979.0], [764.0, 3921.0], [765.0, 4799.0], [767.0, 5247.0], [744.0, 4069.0], [748.0, 9737.0], [753.0, 8328.0], [754.0, 6621.5], [755.0, 6985.5], [757.0, 4141.0], [759.0, 6646.0], [773.0, 6787.5], [768.0, 6446.5], [774.0, 7076.75], [775.0, 8982.666666666666], [777.0, 3904.0], [776.0, 9262.0], [778.0, 6721.0], [779.0, 3591.0], [782.0, 8807.0], [781.0, 8842.5], [783.0, 8887.5], [786.0, 6821.6], [788.0, 7255.0], [789.0, 8539.0], [792.0, 7060.6], [793.0, 4143.0], [794.0, 4615.0], [795.0, 5853.0], [796.0, 6190.0], [797.0, 6884.666666666667], [798.0, 7980.444444444444], [785.0, 8902.142857142857], [784.0, 8856.0], [806.0, 7606.0], [803.0, 7489.888888888888], [801.0, 4882.0], [805.0, 7063.0], [807.0, 6519.4], [824.0, 7538.0], [825.0, 7803.607142857142], [826.0, 7505.44], [827.0, 6610.5], [828.0, 6994.333333333334], [829.0, 4811.0], [831.0, 7375.0], [830.0, 7474.538461538461], [814.0, 4720.0], [809.0, 7756.0], [808.0, 8038.142857142857], [815.0, 4126.0], [816.0, 6297.5], [818.0, 6078.5], [819.0, 5234.5], [822.0, 7844.000000000001], [821.0, 8018.428571428572], [820.0, 7888.0], [839.0, 6177.75], [845.0, 5733.0], [840.0, 6340.057142857143], [841.0, 4641.0], [844.0, 5631.555555555556], [843.0, 6952.8], [846.0, 6290.375], [832.0, 7214.833333333333], [834.0, 6813.5], [833.0, 6983.25], [836.0, 7104.133333333333], [835.0, 6052.333333333333], [838.0, 6621.0], [837.0, 6681.666666666667], [856.0, 6438.023255813954], [857.0, 5263.0], [858.0, 5953.5], [860.0, 6622.0], [863.0, 4943.0], [850.0, 6142.5], [862.0, 6090.0], [851.0, 6138.75], [852.0, 5862.416666666667], [853.0, 4393.5], [854.0, 5569.0], [855.0, 6447.636363636363], [866.0, 5178.0], [864.0, 4963.666666666667], [868.0, 5861.5], [870.0, 5791.0], [888.0, 4673.0], [890.0, 5621.0], [889.0, 5546.0], [891.0, 5996.055555555556], [893.0, 5126.5], [894.0, 5586.166666666667], [895.0, 5171.333333333333], [875.0, 5563.5], [874.0, 7115.0], [872.0, 6704.0], [876.0, 5806.0], [877.0, 5962.0], [878.0, 5398.5], [879.0, 5346.0], [882.0, 5851.333333333333], [883.0, 6092.0], [884.0, 5690.0], [886.0, 4553.333333333333], [887.0, 6759.0], [903.0, 5464.8], [908.0, 5981.666666666666], [900.0, 5535.666666666667], [899.0, 5893.0], [898.0, 6288.5], [897.0, 5731.125], [896.0, 5727.0], [902.0, 5693.538461538461], [901.0, 5958.5], [920.0, 4878.0], [922.0, 5005.5], [921.0, 5032.5], [924.0, 4722.0], [925.0, 4568.333333333333], [927.0, 5340.2], [926.0, 7376.0], [904.0, 5252.571428571428], [905.0, 5284.0], [906.0, 5522.0], [907.0, 6047.75], [909.0, 5453.333333333333], [910.0, 5815.5], [911.0, 5169.5], [912.0, 5774.5], [919.0, 5234.666666666667], [917.0, 4988.857142857143], [916.0, 5271.714285714286], [914.0, 5583.0], [913.0, 5676.5], [928.0, 5148.8], [930.0, 4586.25], [929.0, 4957.5]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[711.5629999999999, 5085.337999999993]], "isOverall": false, "label": "14 Register Request-Aggregated", "isController": false}, {"data": [[151.0, 8685.0], [149.0, 4844.0], [147.0, 8637.6], [146.0, 8870.333333333334], [145.0, 6265.5], [159.0, 4918.0], [158.0, 5048.0], [157.0, 6999.0], [156.0, 6454.642857142857], [154.0, 5634.5], [153.0, 4873.0], [167.0, 7003.875], [165.0, 9564.0], [161.0, 7581.166666666667], [160.0, 7421.142857142856], [175.0, 8989.0], [173.0, 8710.5], [170.0, 7331.4], [168.0, 8166.6], [182.0, 6559.5], [180.0, 7118.5], [177.0, 5186.0], [191.0, 7260.75], [190.0, 5298.0], [199.0, 10841.0], [197.0, 9591.0], [194.0, 7677.5], [192.0, 6084.4], [206.0, 6702.0], [205.0, 7045.4], [202.0, 5106.0], [214.0, 7615.0], [213.0, 4385.0], [218.0, 10636.0], [217.0, 7762.0], [225.0, 4334.0], [227.0, 7946.0], [226.0, 7623.0], [224.0, 7387.0], [235.0, 8238.0], [247.0, 7494.0], [260.0, 1007.0], [266.0, 985.0], [270.0, 7351.0], [267.0, 5471.0], [272.0, 1122.0], [274.0, 1139.0], [276.0, 7784.0], [290.0, 639.0], [293.0, 1243.0], [303.0, 5830.0], [292.0, 5086.0], [309.0, 1496.0], [312.0, 1083.0], [313.0, 1536.0], [316.0, 1427.0], [317.0, 1291.0], [319.0, 1593.0], [324.0, 1479.0], [326.0, 1488.5], [332.0, 5758.0], [325.0, 6762.0], [338.0, 1783.0], [341.0, 1702.0], [343.0, 1711.0], [363.0, 1765.0], [364.0, 1873.0], [367.0, 1729.0], [353.0, 7199.0], [368.0, 1764.0], [374.0, 1937.5], [378.0, 1633.6666666666667], [379.0, 5416.0], [394.0, 2014.0], [398.0, 1826.0], [386.0, 9085.0], [384.0, 7545.0], [403.0, 1527.0], [409.0, 1353.0], [410.0, 2100.5], [412.0, 1959.0], [427.0, 1840.0], [428.0, 2369.0], [426.0, 7230.0], [432.0, 2490.0], [439.0, 1721.0], [440.0, 1970.0], [442.0, 2671.0], [446.0, 1991.0], [454.0, 4234.0], [455.0, 2887.0], [457.0, 1533.0], [460.0, 4001.5], [461.0, 2155.0], [462.0, 9738.0], [474.0, 1713.0], [475.0, 2032.0], [470.0, 5115.0], [487.0, 2494.0], [489.0, 3196.5], [490.0, 2959.0], [493.0, 2524.0], [482.0, 5896.0], [500.0, 1283.0], [503.0, 2493.0], [507.0, 3377.0], [511.0, 7394.0], [517.0, 2973.0], [519.0, 2368.5], [526.0, 4290.5], [539.0, 6055.0], [540.0, 2543.0], [541.0, 3769.0], [543.0, 3193.0], [520.0, 6509.0], [518.0, 5078.0], [548.0, 1576.0], [550.0, 3685.0], [570.0, 4413.5], [573.0, 4422.5], [571.0, 9381.0], [575.0, 3954.0], [561.0, 6323.0], [560.0, 7336.0], [574.0, 4887.0], [557.0, 2932.0], [556.0, 2515.0], [554.0, 4352.25], [553.0, 6527.666666666667], [552.0, 6529.0], [555.0, 5968.0], [558.0, 3497.333333333333], [559.0, 4120.0], [563.0, 2784.5], [564.0, 1367.0], [565.0, 3928.0], [577.0, 3035.0], [587.0, 3710.0], [584.0, 8421.0], [588.0, 6218.2], [590.0, 4905.666666666667], [594.0, 4023.5], [595.0, 1372.0], [598.0, 4888.0], [600.0, 5224.666666666667], [582.0, 5638.5], [580.0, 5333.0], [579.0, 5525.333333333333], [578.0, 8434.0], [601.0, 6934.571428571428], [604.0, 3960.0], [639.0, 3235.0], [636.0, 6052.0], [610.0, 8526.5], [608.0, 7315.0], [628.0, 3270.0], [627.0, 6907.0], [624.0, 7187.0], [637.0, 2607.0], [638.0, 9208.0], [635.0, 7588.0], [633.0, 7782.5], [630.0, 11308.0], [629.0, 7491.0], [665.0, 3262.0], [649.0, 3527.0], [651.0, 8550.285714285714], [650.0, 8636.333333333334], [662.0, 7404.0], [663.0, 3319.0], [669.0, 7873.5], [664.0, 8533.0], [647.0, 8021.857142857143], [640.0, 12306.0], [657.0, 7539.166666666667], [655.0, 10236.0], [654.0, 9298.6], [652.0, 7679.6], [688.0, 4353.0], [683.0, 6465.5], [684.0, 4279.0], [686.0, 4267.0], [673.0, 7652.0], [672.0, 7958.0], [675.0, 8741.5], [674.0, 6594.0], [696.0, 8058.0], [676.0, 6886.0], [689.0, 4938.0], [690.0, 5288.75], [693.0, 6564.333333333333], [692.0, 6284.0], [694.0, 5022.0], [697.0, 7060.5], [699.0, 4193.0], [701.0, 6799.0], [706.0, 7418.333333333333], [705.0, 6783.0], [707.0, 4795.0], [708.0, 7945.666666666667], [711.0, 6775.0], [710.0, 6978.0], [729.0, 8160.0], [728.0, 8589.25], [731.0, 8406.52380952381], [730.0, 9346.0], [732.0, 5540.5], [735.0, 8400.636363636364], [733.0, 8767.0], [712.0, 5664.75], [713.0, 3420.3333333333335], [714.0, 5331.5], [716.0, 7929.0], [715.0, 7891.0], [718.0, 7493.951219512196], [717.0, 6585.5], [719.0, 7515.416666666666], [720.0, 8117.274509803921], [721.0, 7777.692307692307], [722.0, 7599.0], [723.0, 9260.033333333336], [724.0, 7817.0], [727.0, 8096.0], [726.0, 8667.0], [752.0, 4545.333333333333], [740.0, 6405.5], [743.0, 2912.0], [742.0, 8615.5], [741.0, 8255.25], [751.0, 5689.0], [737.0, 8160.0], [736.0, 9090.0], [739.0, 8069.5], [738.0, 6081.0], [750.0, 8623.666666666666], [749.0, 8434.5], [747.0, 9164.0], [744.0, 8681.5], [757.0, 6747.0], [767.0, 3073.0], [760.0, 8019.0], [758.0, 8247.0], [756.0, 7227.0], [753.0, 8423.2], [781.0, 7686.2], [769.0, 3227.0], [770.0, 7490.666666666667], [774.0, 8992.833333333332], [773.0, 7786.5], [795.0, 9985.0], [775.0, 7261.5], [796.0, 5425.0], [797.0, 9179.384615384615], [799.0, 4454.0], [784.0, 8680.5], [798.0, 8765.166666666666], [776.0, 3885.0], [778.0, 5459.0], [779.0, 4460.0], [780.0, 10051.5], [782.0, 7954.4], [783.0, 7430.333333333333], [768.0, 8268.0], [785.0, 8679.363636363636], [789.0, 8312.0], [788.0, 8474.0], [786.0, 8994.0], [791.0, 4416.0], [790.0, 7377.0], [829.0, 3395.0], [806.0, 5932.0], [814.0, 3651.0], [812.0, 8455.0], [811.0, 9931.0], [809.0, 6790.0], [808.0, 8607.0], [815.0, 8426.5], [803.0, 10611.0], [830.0, 6143.5], [817.0, 7602.0], [816.0, 8303.333333333334], [825.0, 7771.095238095238], [824.0, 7720.8], [822.0, 7798.058823529412], [821.0, 8246.999999999998], [820.0, 8701.0], [819.0, 8017.0], [858.0, 6126.0], [835.0, 3444.0], [838.0, 5922.0], [856.0, 6342.208333333334], [841.0, 3601.0], [847.0, 6468.75], [846.0, 6291.714285714286], [853.0, 6072.0], [854.0, 4166.0], [855.0, 6188.0], [859.0, 6184.0], [862.0, 6352.0], [851.0, 6266.0], [861.0, 5620.0], [894.0, 5381.0], [887.0, 3810.0], [891.0, 6049.0], [889.0, 5836.5], [886.0, 6039.0], [884.0, 6113.5], [883.0, 5957.0], [881.0, 5922.0], [879.0, 6226.75], [868.0, 5969.6], [877.0, 6333.5], [874.0, 6035.0], [926.0, 4946.0], [903.0, 4618.0], [905.0, 5961.5], [911.0, 4999.333333333333], [897.0, 5225.0], [896.0, 5561.333333333333], [899.0, 5235.75], [898.0, 5442.5], [902.0, 5435.0], [900.0, 5710.5], [909.0, 5749.75], [922.0, 4901.0], [927.0, 4621.5], [913.0, 4921.0], [917.0, 4675.0], [916.0, 4613.0], [921.0, 4663.0], [920.0, 4463.0], [919.0, 4684.333333333333], [918.0, 4987.0], [930.0, 4737.0], [928.0, 4539.0]], "isOverall": false, "label": "15 Login Request", "isController": false}, {"data": [[625.0999999999995, 6846.394000000007]], "isOverall": false, "label": "15 Login Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 930.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14711.4, "minX": 1.74123954E12, "maxY": 21377.216666666667, "series": [{"data": [[1.74123954E12, 21377.216666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74123954E12, 14711.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123954E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2771.8190000000004, "minX": 1.74123954E12, "maxY": 6846.394000000007, "series": [{"data": [[1.74123954E12, 2771.8190000000004]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123954E12, 5085.337999999993]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123954E12, 6846.394000000007]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123954E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2771.082999999997, "minX": 1.74123954E12, "maxY": 6840.401000000002, "series": [{"data": [[1.74123954E12, 2771.082999999997]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123954E12, 5083.594999999999]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123954E12, 6840.401000000002]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123954E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74123954E12, "maxY": 1.2639999999999996, "series": [{"data": [[1.74123954E12, 0.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.74123954E12, 1.2639999999999996]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74123954E12, 0.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123954E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 222.0, "minX": 1.74123954E12, "maxY": 12691.0, "series": [{"data": [[1.74123954E12, 12691.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74123954E12, 222.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74123954E12, 8959.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74123954E12, 11203.74]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74123954E12, 6280.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.74123954E12, 9842.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123954E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5.0, "minX": 12.0, "maxY": 8402.0, "series": [{"data": [[134.0, 8402.0], [528.0, 7492.5], [139.0, 7154.5], [187.0, 7057.0], [12.0, 415.5], [54.0, 1745.5], [56.0, 652.0], [227.0, 6424.0], [63.0, 3453.5], [66.0, 5397.0], [71.0, 1429.0], [75.0, 7151.0], [82.0, 2230.0], [90.0, 4075.0], [88.0, 6320.0], [94.0, 4531.0], [99.0, 6918.5], [98.0, 4933.0], [100.0, 6150.0], [107.0, 6357.0], [111.0, 7226.0], [122.0, 7761.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 5921.0], [528.0, 1201.0], [139.0, 6439.0], [187.0, 4811.5], [54.0, 803.5], [227.0, 3667.0], [63.0, 1085.0], [66.0, 3842.0], [71.0, 6707.0], [75.0, 6247.0], [82.0, 871.0], [90.0, 1934.0], [88.0, 5.0], [94.0, 2647.0], [99.0, 1367.5], [98.0, 3597.0], [100.0, 4452.0], [107.0, 5284.5], [111.0, 5148.5], [122.0, 6561.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 528.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 12.0, "maxY": 8402.0, "series": [{"data": [[134.0, 8402.0], [528.0, 7492.5], [139.0, 7154.5], [187.0, 7057.0], [12.0, 415.5], [54.0, 1745.0], [56.0, 652.0], [227.0, 6424.0], [63.0, 3427.5], [66.0, 5396.0], [71.0, 1429.0], [75.0, 7150.5], [82.0, 2230.0], [90.0, 4059.0], [88.0, 6319.0], [94.0, 4531.0], [99.0, 6918.5], [98.0, 4933.0], [100.0, 6150.0], [107.0, 6345.0], [111.0, 7226.0], [122.0, 7760.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 5921.0], [528.0, 1200.0], [139.0, 6437.5], [187.0, 4811.5], [54.0, 803.5], [227.0, 3666.0], [63.0, 1085.0], [66.0, 3842.0], [71.0, 6707.0], [75.0, 6247.0], [82.0, 871.0], [90.0, 1934.0], [88.0, 4.0], [94.0, 2647.0], [99.0, 1367.5], [98.0, 3596.0], [100.0, 4452.0], [107.0, 5283.5], [111.0, 5148.5], [122.0, 6561.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 528.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.74123954E12, "maxY": 50.0, "series": [{"data": [[1.74123954E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123954E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.74123954E12, "maxY": 50.0, "series": [{"data": [[1.74123954E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74123954E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.74123954E12, "maxY": 16.666666666666668, "series": [{"data": [[1.74123954E12, 16.666666666666668]], "isOverall": false, "label": "16 Get Stock Prices Request-failure", "isController": false}, {"data": [[1.74123954E12, 16.666666666666668]], "isOverall": false, "label": "14 Register Request-success", "isController": false}, {"data": [[1.74123954E12, 16.666666666666668]], "isOverall": false, "label": "15 Login Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123954E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.74123954E12, "maxY": 33.333333333333336, "series": [{"data": [[1.74123954E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74123954E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74123954E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

